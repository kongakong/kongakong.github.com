---
layout: post
title: Common Questions about Working as a Python Developer
date:  2008-04-09T13:02:00.011+10:00
comments: true
categories: erlang
meta: 
---
I haven't posted much recently because I am starting a new job. It is the third time I switched language. Now, I am officially a Python Developer. Hurray!<br /><br />Since I have always kept myself busy by constantly picking up new computer languages, I know a dozen of odd and exotic languages. Therefore, after I landed on this job, I am surprised by some "interesting" questions about Python that people asked. And these people are no amateur. They are C or Java developers by profession.<br /><br />Here are the questions:<br /><br /><span style="font-weight: bold; font-style: italic;">1) What is Python?</span><br /><br /><blockquote>Well, it is a dynamic scripting language. A good overview <a href="http://www.python.org/about/">here</a>.<br /><br />To emphasize that it is a <span style="font-style: italic;">real </span>programming language, I'd also add that Python is used very <span style="font-style: italic;">extensively </span>within Google.<br /><br /></blockquote><br /><span style="font-weight: bold; font-style: italic;">2) Isn't Python an very old language?</span><br /><br /><blockquote>Oh, this question makes me feel like I am the last Eyak speaker!<br /><br />Python appeared in 1991 when the creator <a href="http://www.python.org/%7Eguido/">Guido van Rossum</a> released it to the public. It is actually a very young language.<br /><br />Let's compare other still active languages and the time of first appearance:<br /><br /><br /><span style="font-weight: bold;">Ruby</span> - 1995<br /><span style="font-weight: bold;">Java</span> - 1995<br /><span style="font-weight: bold;">Visual Basic</span> (VB4 to VB.Net) - 1995<br /><span style="font-weight: bold;">Lua</span> - 1993<br /><br /><span style="font-weight: bold;">Perl </span>- 1987<br /><span style="font-weight: bold;">Erlang</span> - 1987<br /><span style="font-weight: bold;">C++</span> - 1983<br /><br /><span style="font-weight: bold;">C </span>- 1972<br /><span style="font-weight: bold;">Cobol</span> - 1959<br /><span style="font-weight: bold;">Fortran</span> - 1957<br /><br />The debut of Python is a rather recent event in the history of computer language chronologically.<br /><br />But another meaning implied by 'Old' is related to the vitality or dynamism of the language. A low public profile seems to indicates there is not much going on in this language.<br /><br />It is entirely a matter of perception.<br /><br />To me, python never feels old. The language is continuously improving and evolving. The community is healthy and the members on the mailing list are friendly, helpful and intelligent. The language users are willing to embrace <a href="http://www.python.org/dev/peps/pep-3000">changes</a> to make Python better.<br /><br />It is in stark contrast with Java. The discussion of the <span style="font-style: italic;">Closure</span> has highlighted the inertia of the Java language.<br /><br />But don't get me wrong: in other arena of Java eco-system, there are still a lot of energy and innovation such as <a href="http://openjdk.java.net/">OpenJDK</a>. OpenJDK may even eventually force the hand of Microsoft to open-source their CLR. (Hopefully)<br /></blockquote><br /><span style="font-weight: bold; font-style: italic;">3) Is Python more powerful than Java?<br /></span><br /><blockquote>Wow, it is a <a href="http://en.wikipedia.org/wiki/Flamebait">dangerous questions</a>! My <a href="http://en.wikipedia.org/wiki/Political_correctness">PC</a> answer is: they are designed for different tasks, and each of them have their distinct advantages in the problem domain that these languages are created to serve.<br /><br />Besides, everyone has their own notion of Powerfulness. We will end up comparing orange to apple.<br /><br />For me, power is only one of the consideration. Python's readability is another attractive feature. While Python cannot stop a programmer from writing cryptic code, at least it spares you the eyesore caused by bizarre programming styles that some 'gifted' programmers use.<br /><br /></blockquote><span style="font-weight: bold; font-style: italic;">4) Isn't Python dead?<br /><br /></span><blockquote><span>The news of Python's death is largely exaggerated.<br /><br /><br /></span><br /><br /></blockquote><span style="font-style: italic;">Postscript</span>:<br /><span style="font-weight: bold; font-style: italic;"></span><br /><ul><li>I think the latest announcement of <a href="http://code.google.com/appengine">Google App Engine</a> will make a wider audience aware of Python and how good it is.<br /><br /></li><li>Lately a lot of innovation in programming languages (groovy, python and erlang for example) have an European root. Is it a sign that US has under-invested in research in both public and private sections?</li></ul>