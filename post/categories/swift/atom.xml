<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: swift | Timeline]]></title>
  <link href="http://www.ahwkong.com/post/categories/swift/atom.xml" rel="self"/>
  <link href="http://www.ahwkong.com/"/>
  <updated>2014-09-17T13:58:49+10:00</updated>
  <id>http://www.ahwkong.com/</id>
  <author>
    <name><![CDATA[Anthony Kong]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Swift closure error: Boolean is not Convertible to Void]]></title>
    <link href="http://www.ahwkong.com/post/2014/09/17/swift-closure-error-is-not-convertible-to-void/"/>
    <updated>2014-09-17T10:50:00+10:00</updated>
    <id>http://www.ahwkong.com/post/2014/09/17/swift-closure-error-is-not-convertible-to-void</id>
    <content type="html"><![CDATA[<p>This piece code here:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>dismissViewControllerAnimated(true, completion: { () &ndash;> Void in&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>let account = Account()
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>})&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>throws exception:</p>

<pre><code>Cannot convert the expression's type 'Boolean' to type 'Void'
</code></pre>

<p>It is because if the block does not have a return statement, the compiler uses the result of the last statement as the return value</p>

<p>Adding a <code>return ()</code> as the last expression to the block fixes the problem</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Unrecognized selector -replacementObjectForKeyedArchiver: ]]></title>
    <link href="http://www.ahwkong.com/post/2014/09/12/unrecognized-selector-replacementobjectforkeyedarchiver/"/>
    <updated>2014-09-12T22:31:00+10:00</updated>
    <id>http://www.ahwkong.com/post/2014/09/12/unrecognized-selector-replacementobjectforkeyedarchiver</id>
    <content type="html"><![CDATA[<p>Here is the code in question:</p>

<pre><code>class Something: NSCoding {
    ...

let smth = Something() 
let data = NSKeyedArchiver.archivedDataWithRootObject(smth);
</code></pre>

<p>It throws this exception:</p>

<pre><code>2014-09-12 16:30:00.463 MyApp[30078:60b] *** NSForwarding: warning: object 0x7a04ac70 of class '_TtC8MyApp7Something' does not implement methodSignatureForSelector: -- trouble ahead
Unrecognized selector -[MyApp.Something replacementObjectForKeyedArchiver:]
</code></pre>

<p>It is because <code>Something</code> does not inherit from <code>NSObject</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[make iphone vibrate]]></title>
    <link href="http://www.ahwkong.com/post/2014/09/10/make-iphone-vibrate/"/>
    <updated>2014-09-10T13:31:00+10:00</updated>
    <id>http://www.ahwkong.com/post/2014/09/10/make-iphone-vibrate</id>
    <content type="html"><![CDATA[<p>Use these APIs to set the iphone to vibrate</p>

<pre><code>AudioServicesPlayAlertSound(kSystemSoundID_Vibrate);
AudioServicesPlaySystemSound(kSystemSoundID_Vibrate);
</code></pre>

<p>The first function plays a beep sound if the devices donâ€™t support vibration. The second function on the other hand does nothing on unsupported devices.</p>

<p>if <code>AVRecorder</code> is running, iphone will not vibrate too.</p>

<p>Source: <a href="http://stackoverflow.com/questions/4724980/making-the-iphone-vibrate">Stackoverflow</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Difference between handling 'self' in Python and Swift]]></title>
    <link href="http://www.ahwkong.com/post/2014/09/10/swift-can-be-very-pythonic/"/>
    <updated>2014-09-10T12:35:00+10:00</updated>
    <id>http://www.ahwkong.com/post/2014/09/10/swift-can-be-very-pythonic</id>
    <content type="html"><![CDATA[<p>Take a look at this <code>swift</code> code (XCode6 Beta7)</p>

<pre><code>    class C {
            func name () -&gt; String {
                return "C"
            }
    }

    class D:C {
            override func name () -&gt; String {
                return "D"
            }
    }

    let c = C()
    println(c.name()) // print 'C'

    let d = D()
    println(d.name()) // print 'D' as expected

    println(C.name(d)()) // print 'D'! 
</code></pre>

<p>In python, the last case is different:</p>

<pre><code>    class C:
        def name(self):
            return 'C' 

    class D(C):
        def name(self):
            return 'D' 

    c = C() 
    print(c.name())  // print 'C' 

    d = D() 
    print(d.name())  // print 'D' 

    print(C.name(d)) // print 'C' 
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[semi-colon in swift]]></title>
    <link href="http://www.ahwkong.com/post/2014/09/04/semi-colon-in-swift/"/>
    <updated>2014-09-04T14:52:00+10:00</updated>
    <id>http://www.ahwkong.com/post/2014/09/04/semi-colon-in-swift</id>
    <content type="html"><![CDATA[<p>The perfered style of semi-colon placement in swift is:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>struct Foo: SomeProtocol {}
</span><span class='line'>class Foo: SomeProtocol {}&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>var x: Int
</span><span class='line'>func foo(x: Int) {}
</span><span class='line'>func bar(x: (y: Int) &ndash;> Int) &ndash;> Double {}
</span><span class='line'>let dict = [&ldquo;key&rdquo;: value]&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>i.e. No space before the semi-colon. One space after the semi-colon</p>
]]></content>
  </entry>
  
</feed>
