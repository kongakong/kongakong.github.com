<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: gambit-scheme | Timeline]]></title>
  <link href="http://www.ahwkong.com/post/categories/gambit-scheme/atom.xml" rel="self"/>
  <link href="http://www.ahwkong.com/"/>
  <updated>2014-02-17T05:15:02+11:00</updated>
  <id>http://www.ahwkong.com/</id>
  <author>
    <name><![CDATA[Anthony Kong]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Gambit scheme built-in help]]></title>
    <link href="http://www.ahwkong.com/post/2012/06/16/p-25216266931/"/>
    <updated>2012-06-16T18:40:00+10:00</updated>
    <id>http://www.ahwkong.com/post/2012/06/16/p-25216266931</id>
    <content type="html"><![CDATA[<p>```</p>

<p>$ gsi
Gambit v4.6.2</p>

<blockquote><p>,?
,?              : Summary of comma commands
,h   | ,(h X)   : Help on procedure of last error or procedure/macro named X
,q              : Terminate the process
,qt             : Terminate the current thread
,t              : Jump to toplevel REPL
,d              : Jump to enclosing REPL
,c   | ,(c X)   : Continue the computation with stepping off
,s   | ,(s X)   : Continue the computation with stepping on (step)
,l   | ,(l X)   : Continue the computation with stepping on (leap)
,N              : Move to specific continuation frame (N>=0)
,N+  | ,N-      : Move forward/backward by N continuation frames (N>=0)
,+   | ,&ndash;       : Like ,1+ and ,1-
,++  | ,&mdash;      : Like ,N+ and ,N- with N = nb. of frames at head of backtrace
,y              : Display one-line summary of current frame
,i              : Display procedure attached to current frame
,b   | ,(b X)   : Display backtrace of current continuation or X (cont/thread)
,be  | ,(be X)  : Like ,b and ,(b X) but also display environment
,bed | ,(bed X) : Like ,be and ,(be X) but also display dynamic environment
,e   | ,(e X)   : Display environment of current frame or X (proc/cont/thread)
,ed  | ,(ed X)  : Like ,e and ,(e X) but also display dynamic environment
,st  | ,(st X)  : Display current thread group, or X (thread/thread group)
,(v X)          : Start a REPL visiting X (proc/cont/thread)
,q</p></blockquote>

<p>```</p>
]]></content>
  </entry>
  
</feed>
