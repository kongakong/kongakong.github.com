<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ios | Timeline]]></title>
  <link href="http://www.ahwkong.com/post/categories/ios/atom.xml" rel="self"/>
  <link href="http://www.ahwkong.com/"/>
  <updated>2013-12-31T06:50:30+11:00</updated>
  <id>http://www.ahwkong.com/</id>
  <author>
    <name><![CDATA[Anthony Kong]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[User defined runtime attribute]]></title>
    <link href="http://www.ahwkong.com/post/2013/12/31/user-defined-runtime-attribute/"/>
    <updated>2013-12-31T06:42:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2013/12/31/user-defined-runtime-attribute</id>
    <content type="html"><![CDATA[<p>It is for the interface builder and xib files to set an attrible in a class.</p>

<p>If the att:ribute is not defined, you will get this error and the app will crash</p>

<pre><code>this class is not key value coding-compliant for the key &lt;KEYNAME&gt;.'
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to do a multi-line string in objective-c]]></title>
    <link href="http://www.ahwkong.com/post/2013/12/19/how-to-do-a-multi-line-string-in-objective-c/"/>
    <updated>2013-12-19T07:33:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2013/12/19/how-to-do-a-multi-line-string-in-objective-c</id>
    <content type="html"><![CDATA[<p>Here is an example:</p>

<p>{% codeblock lang:objective-c %}</p>

<p> NSString* s = @&ldquo;{&rdquo; \</p>

<pre><code>" key1 = \"value1\" \
" }";
</code></pre>

<p>{% endcodeblock %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ownership rule exception]]></title>
    <link href="http://www.ahwkong.com/post/2013/12/19/ownership-rule-exception/"/>
    <updated>2013-12-19T07:26:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2013/12/19/ownership-rule-exception</id>
    <content type="html"><![CDATA[<p>Normally an observer or a delegate owner should not hold a strong reference to a callback or a delegate.</p>

<p>The two well-known exceptions are: an NSURLConnection ownes its delegate while the connection is running, and an NSTimer ownes its target while the timer is valid</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Need to write a proper unit test in objective-c]]></title>
    <link href="http://www.ahwkong.com/post/2013/12/19/tdd-in-objective-c/"/>
    <updated>2013-12-19T07:12:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2013/12/19/tdd-in-objective-c</id>
    <content type="html"><![CDATA[<p>It is my first attempt at testing my JSON handling code:</p>

<p>{% codeblock lang:objective-c %}</p>

<ul>
<li>(void)testReadingJSON
{
  QueQuestionManager* qm = [[QueQuestionManager alloc] init];
  qm.server_url = @&ldquo;<a href="http://localhost:8777/">http://localhost:8777/</a>&rdquo;;
  [qm readQuestionnaire];
  NSLog(@&ldquo;>> %@&rdquo;, qm.questionnaire);
}</li>
</ul>


<p>{% endcodeblock %}</p>

<p>Needless to say it is pretty bad, for the following reasons:</p>

<ul>
<li><p>It has an external dependency of a local server. It is strictly speaking not a unit test</p></li>
<li><p>The code does not work. It is likely because the run loop is not started when the unit test runs</p></li>
</ul>


<p>My TODO:</p>

<ul>
<li><p>Refactor the above code to be a proper unit test</p></li>
<li><p>Use functional testing framework to implement the above test</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using NSURLConnection to read json data]]></title>
    <link href="http://www.ahwkong.com/post/2013/12/18/using-nsurlconnection-to-read-json-data/"/>
    <updated>2013-12-18T22:34:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2013/12/18/using-nsurlconnection-to-read-json-data</id>
    <content type="html"><![CDATA[<p>My code is not good at all for the following reasons:</p>

<ul>
<li><p>The NSURLConnection retrieves data synchronously</p></li>
<li><p>The decoding of JSON is not neat. A strong code smell</p></li>
</ul>


<h3>Synchronous network call</h3>

<p>Next step: rewrite the below code to asynchronous mode.</p>

<p>In the viewDidLoad method of my ViewController, I called the following method:</p>

<p>{% codeblock lang:objective-c %}
&ndash;(BOOL) readJSON {</p>

<pre><code>NSError *error;
NSURLResponse *response;

receivedData = [NSMutableData data];

NSURLRequest *theRequest=[NSURLRequest requestWithURL:[NSURL URLWithString:_server_url]];
NSURLConnection *theConnection=[[NSURLConnection alloc] initWithRequest:theRequest delegate:self];

if (theConnection) {
    NSData *result = [NSURLConnection sendSynchronousRequest:theRequest returningResponse:&amp;response error:&amp;error];
    NSDictionary* json = [result objectFromJSONDataWithParseOptions:(JKParseOptionNone)];
    [self convertJsonIntoMyData:json];
    return TRUE;
} else {
    return FALSE;
}
</code></pre>

<p>}
{% endcodeblock %}</p>

<h3>Decoding of JSON data</h3>

<p>I used a lot of enumerators to walk through dictionaries and arrays at different level. It makes future changes to the JSON schema or objective-c object model difficult.</p>
]]></content>
  </entry>
  
</feed>
