<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ios | Timeline]]></title>
  <link href="http://kongakong.github.io/post/categories/ios/atom.xml" rel="self"/>
  <link href="http://kongakong.github.io/"/>
  <updated>2013-12-18T23:20:07+11:00</updated>
  <id>http://kongakong.github.io/</id>
  <author>
    <name><![CDATA[Anthony Kong]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using NSURLConnection to read json data]]></title>
    <link href="http://kongakong.github.io/post/2013/12/18/using-nsurlconnection-to-read-json-data/"/>
    <updated>2013-12-18T22:34:00+11:00</updated>
    <id>http://kongakong.github.io/post/2013/12/18/using-nsurlconnection-to-read-json-data</id>
    <content type="html"><![CDATA[<p>My code is not good at all for the following reasons:</p>

<ul>
<li><p>The NSURLConnection retrieves data synchronously</p></li>
<li><p>The decoding of JSON is not neat. A strong code smell</p></li>
</ul>


<h3>Synchronous network call</h3>

<p>In the viewDidLoad method of my ViewController</p>

<p>{% codeblock lang:objective-c %}
&ndash;(BOOL) readJSON {</p>

<pre><code>NSError *error;
NSURLResponse *response;

receivedData = [NSMutableData data];

NSURLRequest *theRequest=[NSURLRequest requestWithURL:[NSURL URLWithString:_server_url]];
NSURLConnection *theConnection=[[NSURLConnection alloc] initWithRequest:theRequest delegate:self];

if (theConnection) {
    NSData *result = [NSURLConnection sendSynchronousRequest:theRequest returningResponse:&amp;response error:&amp;error];
    NSDictionary* json = [result objectFromJSONDataWithParseOptions:(JKParseOptionNone)];
    [self convertJsonIntoMyData:json];
    return TRUE;
} else {
    return FALSE;
}
</code></pre>

<p>}
{% endcodeblock %}</p>

<h3>Decoding of JSON data</h3>

<p>I used a lot of enumerators to walk through dictionaries and arrays at different level. It makes future changes to the JSON schema or objective-c object model difficult.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[cannot init a class object]]></title>
    <link href="http://kongakong.github.io/post/2013/12/16/cannot-init-a-class-object/"/>
    <updated>2013-12-16T20:39:00+11:00</updated>
    <id>http://kongakong.github.io/post/2013/12/16/cannot-init-a-class-object</id>
    <content type="html"><![CDATA[<p>Got this exception</p>

<p>{% codeblock  %}
2013-12-16 17:35:59.976 MyProject[41964:70b] <strong><em> Terminating app due to uncaught
exception &lsquo;NSInvalidArgumentException&rsquo;, reason: &lsquo;</em></strong> +[MyClass<0x100084d80> init]: cannot init a class object.&rsquo;</p>

<p>{% endcodeblock %}</p>

<p>It is because I have mistakenly written</p>

<p>{% codeblock lang:objective-c  %}
[[MyClass init] alloc];
{% endcodeblock %}</p>

<p>instead of</p>

<p>{% codeblock lang:objective-c  %}
[[MyClass alloc] init];
{% endcodeblock %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UIScrollView and contentSize]]></title>
    <link href="http://kongakong.github.io/post/2013/12/16/uiscrollview-and-contnetsize/"/>
    <updated>2013-12-16T10:42:00+11:00</updated>
    <id>http://kongakong.github.io/post/2013/12/16/uiscrollview-and-contnetsize</id>
    <content type="html"><![CDATA[<p>Common mistake in using <code>UIScrollView</code>: did not set the <code>contentSize</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SSToolkit]]></title>
    <link href="http://kongakong.github.io/post/2013/05/29/p-51633107176/"/>
    <updated>2013-05-29T20:00:00+10:00</updated>
    <id>http://kongakong.github.io/post/2013/05/29/p-51633107176</id>
    <content type="html"><![CDATA[<p>Added SSToolkit to my Podfile and got this message. Don’t know what it means…</p>

<p><code>
[!] [SSToolkit] Specification#config is deprecated. The config is accessible from the parameter passed to the hooks
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Delete a row from UITableView]]></title>
    <link href="http://kongakong.github.io/post/2012/08/16/p-29544259150/"/>
    <updated>2012-08-16T19:35:00+10:00</updated>
    <id>http://kongakong.github.io/post/2012/08/16/p-29544259150</id>
    <content type="html"><![CDATA[<p>To enable the swipe to delete feature, one must implement this API:</p>

<p>{% codeblock %}
&ndash; (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle</p>

<pre><code>                                        forRowAtIndexPath:(NSIndexPath *)indexPath``
</code></pre>

<p>{% endcodeblock %}</p>

<p>I can enable this feature, but I got this exception from this function</p>

<p><code>
2012-08-11 22:30:46.286 app[76532:fb03] *** Terminating app due to uncaught exception
 'NSInternalInconsistencyException', reason: 'Invalid update: invalid number of rows in section 0.  
The number of rows contained in an existing section after the update (10) must be equal to the
number of rows contained in that section before the update (10), plus or minus the number of rows
inserted or deleted from that section (0 inserted, 1 deleted) and plus or minus the number of rows
moved into or out of that section (0 moved in, 0 moved out).'
</code></p>

<p>It turns out even though I removed the object from the CoreDate managed context, I did not ask the NSFetchedResultsController to refetch the data set. The UITableView is sTILl bound to the old data set and hence the internal inconsistency.</p>
]]></content>
  </entry>
  
</feed>
