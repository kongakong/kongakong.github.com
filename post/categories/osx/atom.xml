<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: osx | Timeline]]></title>
  <link href="http://www.ahwkong.com/post/categories/osx/atom.xml" rel="self"/>
  <link href="http://www.ahwkong.com/"/>
  <updated>2014-09-17T14:00:23+10:00</updated>
  <id>http://www.ahwkong.com/</id>
  <author>
    <name><![CDATA[Anthony Kong]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Starting an angularjs project with bower]]></title>
    <link href="http://www.ahwkong.com/post/2014/09/12/angular-bower/"/>
    <updated>2014-09-12T10:53:00+10:00</updated>
    <id>http://www.ahwkong.com/post/2014/09/12/angular-bower</id>
    <content type="html"><![CDATA[<p>First you need to install <code>npm</code> via <code>brew</code></p>

<p>Then run <code>npm install -g bower</code> as documented in <a href="http://bower.io/">bower websiter</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[homebrew problem]]></title>
    <link href="http://www.ahwkong.com/post/2014/04/15/homebrew-problem/"/>
    <updated>2014-04-15T17:32:00+10:00</updated>
    <id>http://www.ahwkong.com/post/2014/04/15/homebrew-problem</id>
    <content type="html"><![CDATA[<p>Homebrew error message due to incomplete installation of XCode</p>

<p>{% codeblock %}</p>

<p>$ ruby -e &ldquo;$(curl -fsSL <a href="https://raw.github.com/Homebrew/homebrew/go/install">https://raw.github.com/Homebrew/homebrew/go/install</a>)&rdquo;
==> This script will install:
/usr/local/bin/brew
/usr/local/Library/&hellip;
/usr/local/share/man/man1/brew.1</p>

<p>Press RETURN to continue or any other key to abort
==> /usr/bin/sudo /bin/mkdir /usr/local</p>

<p>WARNING: Improper use of the sudo command could lead to data loss
or the deletion of important system files. Please double-check your
typing when using sudo. Type &ldquo;man sudo&rdquo; for more information.</p>

<p>To proceed, enter your password, or type Ctrl-C to abort.</p>

<p>Password:
==> /usr/bin/sudo /bin/chmod g+rwx /usr/local
==> /usr/bin/sudo /usr/bin/chgrp admin /usr/local
==> /usr/bin/sudo /bin/mkdir /Library/Caches/Homebrew
==> /usr/bin/sudo /bin/chmod g+rwx /Library/Caches/Homebrew
==> Installing the Command Line Tools (expect a GUI popup):
==> /usr/bin/sudo /usr/bin/xcode-select &mdash;install
xcode-select: note: install requested for command line developer tools
Press any key when the installation has completed.
==> Downloading and installing Homebrew&hellip;
remote: Counting objects: 166311, done.
remote: Compressing objects: 100% (46739/46739), done.
Receiving objects:  76% (126773/166311), 23.62 MiB | 83.00 KiB/s  <br/>
error: RPC failed; result=56, HTTP code = 200
fatal: The remote end hung up unexpectedly
fatal: early EOF
fatal: index-pack failed
Failed during: git fetch origin master:refs/remotes/origin/master -n
$ ruby -e &ldquo;$(curl -fsSL <a href="https://raw.github.com/Homebrew/homebrew/go/install">https://raw.github.com/Homebrew/homebrew/go/install</a>)&rdquo;
It appears Homebrew is already installed. If your intent is to reinstall you
should do the following before running this installer again:</p>

<pre><code>rm -rf /usr/local/Cellar /usr/local/.git &amp;&amp; brew cleanup
</code></pre>

<p>{% endcodeblock %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[quicklook]]></title>
    <link href="http://www.ahwkong.com/post/2014/03/10/quicklook/"/>
    <updated>2014-03-10T21:52:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/03/10/quicklook</id>
    <content type="html"><![CDATA[<p>{% codeblock %}</p>

<p>$ qlmanage -l
List of all generator IDs: (</p>

<pre><code>"com.apple.quicklookgenerator.iChat",
"com.apple.qlgenerator.package",
"com.apple.qlgenerator.pdf",
"com.apple.qlgenerator.contact",
"com.apple.qlgenerator.mail",
"com.apple.qlgenerator.audio",
"com.apple.garageband.quicklookgenerator",
"com.apple.qlgenerator.iCal",
"com.apple.Notes.qlgenerator",
"com.apple.qlgenerator.movie",
"com.apple.qlgenerator.image",
"com.apple.qlgenerator.web",
"com.apple.qlgenerator.LogicXQLGenerator",
"com.apple.qlgenerator.eps",
"com.apple.qlgenerator.certificates",
"com.apple.qlgenerator.bookmark",
"com.apple.qlgenerator.text",
"com.apple.qlgenerator.clipping",
"org.m0k.transmission.QuickLookPlugin",
"com.apple.qlgenerator.font",
"com.apple.qlgenerator.office",
"com.apple.iBooksAuthor.iBooksAuthorQuickLookGenerator",
"org.openemu.savestategenerator",
"com.apple.qlgenerator.SceneKit",
"com.apple.qlgenerator.iconset",
"com.apple.qlgenerator.standard-bundles",
"com.apple.qlgenerator.locPDF",
"com.apple.iWork.iWorkQuickLookGenerator",
"com.pixelmatorteam.quicklook"
</code></pre>

<p>)</p>

<p>{% endcodeblock %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[how to make a label recognise a tape]]></title>
    <link href="http://www.ahwkong.com/post/2014/03/06/how-to-make-a-label-recognise-a-tape/"/>
    <updated>2014-03-06T07:44:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/03/06/how-to-make-a-label-recognise-a-tape</id>
    <content type="html"><![CDATA[<p>Step 1) Need to implement a selector to handle the gesture recognizer&rsquo;s callback</p>

<p>{% codeblock lang:objective-c %}</p>

<p>&ndash;(void) handleSingleTap:(UIGestureRecognizer *)gestureRecognizer  {</p>

<pre><code>NSLog(@"handleSingleTap called");
</code></pre>

<p>}</p>

<p>{% endcodeblock %}</p>

<p>Step 2) Create and assign a gesture recognizer to a UILabel</p>

<p>{% codeblock lang:objective-c %}</p>

<pre><code>UITapGestureRecognizer *singleTap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(handleSingleTap:)];
[self.lblHour addGestureRecognizer:singleTap];
</code></pre>

<p>{% endcodeblock %}</p>

<p>Step 3) <strong>Important</strong> Must make sure <code>setUserInteractionEnabled</code> of the UILabel is set</p>

<p>{% codeblock lang:objective-c %}</p>

<pre><code>[self.lblHour setUserInteractionEnabled:YES];
</code></pre>

<p>{% endcodeblock %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NSLog macro]]></title>
    <link href="http://www.ahwkong.com/post/2014/03/03/nslog-macro/"/>
    <updated>2014-03-03T08:11:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/03/03/nslog-macro</id>
    <content type="html"><![CDATA[<p>This is a useful marco for doing debug logging:</p>

<p>{% codeblock lang:objective-c %}</p>

<h1>define DLog(msg, &hellip;) do { \</h1>

<p>  NSString *dLogString = [NSString stringWithFormat:@&ldquo;%s: %@&rdquo;, <strong>PRETTY_FUNCTION</strong>, msg]; \
  NSLog(@&ldquo;%@&rdquo;, <strong>VA_ARGS</strong>); \
} while (0)</p>

<p>{% endcodeblock %}</p>

<p>Note the use of <code>__PRETTY_FUNCTION__</code></p>

<p><a href="https://coderwall.com/p/2ko3la">Source</a></p>
]]></content>
  </entry>
  
</feed>
