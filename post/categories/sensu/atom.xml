<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: sensu | Timeline]]></title>
  <link href="http://www.ahwkong.com/post/categories/sensu/atom.xml" rel="self"/>
  <link href="http://www.ahwkong.com/"/>
  <updated>2015-03-02T20:45:10+11:00</updated>
  <id>http://www.ahwkong.com/</id>
  <author>
    <name><![CDATA[Anthony Kong]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Lesson from learning to use vagrant, chef and sensu]]></title>
    <link href="http://www.ahwkong.com/post/2015/03/02/lesson-from-vagrant/"/>
    <updated>2015-03-02T09:16:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2015/03/02/lesson-from-vagrant</id>
    <content type="html"><![CDATA[<p>Couple of weeks ago I set out to learn to use vagrant + <strong>chef</strong> + sensu to achieve the goal of automated data server deployment and server monitoring.</p>

<p>I would like to share my experience so new comers can get up to speed faster and avoid some time-wasters.</p>

<p>The structure of this post can be confusing because it is more like my cliff note.</p>

<h2>Background of my final chioces</h2>

<p>A small startup that uses aws ec2 for key functionality. The tools should cost as little as possible. Open source solution is prefered.</p>

<h2>What are the advantages of vagrant, chef and sensu?</h2>

<p><strong>Vagrant</strong> and <strong>chef</strong> are great tools. They are indispensable to automation of VM creation and provision.</p>

<p><strong>Sensu</strong> is an open source monitoring platform. It is very flexible because it uses ruby to develop plugins to extend the framework&rsquo;s capability.</p>

<p>All of them have strong momentum from their communities</p>

<h2>Learning Vagrant</h2>

<h3>Vagrantfile</h3>

<p><strong>Vagrant</strong> is actually rather easy to master. The key file <strong>Vagrantfile</strong> is by itself a ruby script. It allows a lot of flexibility of customisation. The key hurdle is to write up a <strong>Vagrantfile</strong> that suits your need. The default <strong>Vagrantfile</strong> is pretty useless.</p>

<h3>Know your override</h3>

<p>You will need to know how to use the <code>override</code> object to customise your vagrant settings</p>

<h3>Provider</h3>

<p>A limitation of vagrant as of 1.6.x is that you can only use one active provider at a time. It means that if you have <code>vagrant up</code> to Virtualbox, you cannot fire up another instance in aws in the same folder. You can remove the &lsquo;.vagrant&rsquo; folder if you must.</p>

<h3>Provisioner</h3>

<p>My choice of provisioner is <strong>chef</strong>. I choose it over <strong>puppet</strong> mainly because of <strong>chef</strong> uses ruby as the scripting lanagage. <code>Nagios</code> is bascailly out of the question due to its legacy and complexity. Unfortunately there was a lot of changes at <strong>chef</strong> in last couple of months and it makes the learning experience less than pleasant. More on <strong>chef</strong> later.</p>

<h3>Plugins</h3>

<p>If your primary platform is aws, you will need to install <code>vagrant-aws</code>. There are a lot of useful plugins and it is something one shoudl explore to discover all sort of possibility.</p>

<p>You will also need <code>vagrant-chef-zero</code>, <code>vagrant-omnibus</code> and <code>vagrant-berkshelf</code> in order to work with chef.</p>

<h2>Learning Chef</h2>

<h3>Implementation</h3>

<p>My goal is to make my <strong>chef</strong> cookbook and deployment as self-contained as possible.</p>

<h3>Lack of good documentation and Conflicting opinions abound</h3>

<p>I were unable to find a single starting point and clear documentation to learn <strong>chef</strong> on the official website. The documentation are either very fragmented or not up to date. The biggest distraction is the use of <strong>knife</strong>. It is tightly coupled with <strong>chef</strong> server. However in my opinion the power of <strong>chef</strong> actually lies with the concept of <code>cookbook</code>.</p>

<p>Apparently <strong>chef</strong> has released a number of tools before to help with devops' jobs.</p>

<p>The main tool, <strong>knife</strong>, is pretty useless to me because</p>

<p><em>. I want to run <strong>chef</strong> in a standalone mode and knife assumes you are using chef enterprise service
</em>. Some function like data bag creation is not useful</p>

<p><strong>Librarian</strong> is superceded by <strong>berkshelf</strong>. Especially if you are going to use vagrant with chef, the brekshelf will take care of all the cookbook dependency automagically.</p>

<p>Don&rsquo;t bother with <strong>libraian</strong>.</p>

<p>I think the book &ldquo;Learning Chef&rdquo; by Mischa Taylor is by far the most systemic and easy to read book in the subject area. If I have discovered this book at the begining I am sure I will save at least a week time in research.</p>

<h3>How to approach cookbook?</h3>

<p>I think cookbook is the best feature of chef, but it is not very adequately explained.</p>

<p>That&rsquo;s why you need to get your hand dirty and learn how to write your cookbook by using <strong>kitchen</strong></p>

<p>At the beginning I thought I can get away from writing custom cookbook. I now see it as an impossibility.</p>

<h3>Keep converge until you get it</h3>

<p>Use <strong>kitchen</strong> to create a cookbook skeleton. Start write up your recipes.</p>

<p><strong>Tip</strong>: Break down your provisioning requirement into logical units and make them as self-contained and small and possible. In this way, you can test each individual recipe quickly with <code>kitchen converge</code>.</p>

<p>When you are happy with all the recipes, do the final integration test by running up the chef provision with <strong>vagrant</strong>.</p>

<h3>Sensu</h3>

<p>More on sensu later&hellip; To be continued</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[how to get sensu hipchat plugin to work]]></title>
    <link href="http://www.ahwkong.com/post/2015/02/28/how-to-get-sensu-hipchat-plugin-to-work/"/>
    <updated>2015-02-28T18:55:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2015/02/28/how-to-get-sensu-hipchat-plugin-to-work</id>
    <content type="html"><![CDATA[<p>I encountered two issues when I want to deploy the hipchat notification handler.</p>

<p>Firstly it throws an exception of &lsquo;Connection refused&rsquo;. But api.hipchat.com is reachable. I have verified by running <code>curl</code> against the v2 api.</p>

<pre><code>    $ cat /tmp/t.json |sudo /opt/sensu/embedded/bin/ruby  /etc/sensu/handlers/notification/hipchat.rb -j /etc/sensu
    /handlers/notification/hipchat.json
    /opt/sensu/embedded/lib/ruby/2.0.0/net/http.rb:878:in `initialize': Connection refused - connect(2) (Errno::ECONNREFUSED)
            from /opt/sensu/embedded/lib/ruby/2.0.0/net/http.rb:878:in `open'
            from /opt/sensu/embedded/lib/ruby/2.0.0/net/http.rb:878:in `block in connect'
            from /opt/sensu/embedded/lib/ruby/2.0.0/timeout.rb:52:in `timeout'
            from /opt/sensu/embedded/lib/ruby/2.0.0/net/http.rb:877:in `connect'
            from /opt/sensu/embedded/lib/ruby/2.0.0/net/http.rb:862:in `do_start'
            from /opt/sensu/embedded/lib/ruby/2.0.0/net/http.rb:851:in `start'
            from /opt/sensu/embedded/lib/ruby/2.0.0/net/http.rb:1367:in `request'
            from /opt/sensu/embedded/lib/ruby/gems/2.0.0/gems/sensu-plugin-1.1.0/lib/sensu-handler.rb:85:in `api_request'
            from /opt/sensu/embedded/lib/ruby/gems/2.0.0/gems/sensu-plugin-1.1.0/lib/sensu-handler.rb:120:in `stash_exists?'
            from /opt/sensu/embedded/lib/ruby/gems/2.0.0/gems/sensu-plugin-1.1.0/lib/sensu-handler.rb:132:in `block (2 levels) in filter_silenced'
            from /opt/sensu/embedded/lib/ruby/2.0.0/timeout.rb:66:in `timeout'
            from /opt/sensu/embedded/lib/ruby/2.0.0/timeout.rb:97:in `timeout'
</code></pre>

<p>It turns out all sensu plugin has a dependeny on the sensu api. I did not start the sensu api when I tested, and hence the exception.</p>

<p>Then I got a json config file related problem:</p>

<pre><code>    $ cat /tmp/t.json |sudo /opt/sensu/embedded/bin/ruby  /etc/sensu/handlers/notification/hipchat.rb -j /handlers/notification/hipchat.json
    /etc/sensu/handlers/notification/hipchat.rb:44:in `handle': undefined method `[]' for nil:NilClass (NoMethodError)
            from /opt/sensu/embedded/lib/ruby/gems/2.0.0/gems/sensu-plugin-1.1.0/lib/sensu-handler.rb:55:in `block in &lt;class:Handler&gt;'
</code></pre>

<p><code>-j</code> does not work as I expected. The script actually expects the .json configuration in the /opt/sensu/conf.d</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[installing sensu client 0.14 and 0.17.beta1]]></title>
    <link href="http://www.ahwkong.com/post/2015/02/26/installing-sensu-client-0-dot-14-and-0-dot-17-dot-beta1/"/>
    <updated>2015-02-26T15:09:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2015/02/26/installing-sensu-client-0-dot-14-and-0-dot-17-dot-beta1</id>
    <content type="html"><![CDATA[<p>0.17.beta1 does work for me. Fall back to 0.14 but the sensu client window service stopped working too.</p>

<p>I think the windows service needs to be re-registered. Very troublesome</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sensu plugin problem]]></title>
    <link href="http://www.ahwkong.com/post/2015/02/26/sensu-plugin-problem/"/>
    <updated>2015-02-26T02:12:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2015/02/26/sensu-plugin-problem</id>
    <content type="html"><![CDATA[<p>Encountered problem when installing sensu-plugin</p>

<pre><code>    $ gem install sensu-plugin --no-rdoc --no-ri
    /usr/bin/ruby1.9.1 extconf.rb
    /usr/lib/ruby/1.9.1/rubygems/custom_require.rb:36:in `require': cannot load such file -- mkmf (LoadError)
            from /usr/lib/ruby/1.9.1/rubygems/custom_require.rb:36:in `require'
            from extconf.rb:1:in `&lt;main&gt;'
</code></pre>

<p>This is the solution: use the ruby runtime embedded in sensu</p>

<pre><code>    $ /opt/sensu/embedded/bin/gem install sensu-plugin
    Fetching: sensu-plugin-1.1.0.gem (100%)
    ERROR:  While executing gem ... (Gem::FilePermissionError)
        You don't have write permissions for the /opt/sensu/embedded/lib/ruby/gems/2.0.0 directory.
    vagrant@default-ubuntu-1404:~$ sudo /opt/sensu/embedded/bin/gem install sensu-plugin
    Successfully installed sensu-plugin-1.1.0
    Parsing documentation for sensu-plugin-1.1.0
    Installing ri documentation for sensu-plugin-1.1.0
    1 gem installed
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cannot find a resource matching ruby_block[sensu_service_trigger]]]></title>
    <link href="http://www.ahwkong.com/post/2015/02/08/cannot-find-a-resource-matching-ruby-block-sensu-service-trigger/"/>
    <updated>2015-02-08T18:26:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2015/02/08/cannot-find-a-resource-matching-ruby-block-sensu-service-trigger</id>
    <content type="html"><![CDATA[<p>This the error message:</p>

<pre><code>    ==&gt; default: ================================================================================
    ==&gt; default: Error executing action `enable` on resource 'sensu_service[sensu-client]'
    ==&gt; default: ================================================================================
    ==&gt; default:
    ==&gt; default: Chef::Exceptions::ResourceNotFound
    ==&gt; default: ----------------------------------
    ==&gt; default: Cannot find a resource matching ruby_block[sensu_service_trigger] (did you define it first?)
    ==&gt; default:
    ==&gt; default: Cookbook Trace:
    ==&gt; default: ---------------
    ==&gt; default: /tmp/vagrant-chef/c66d06dac7e6e1e4d559122d4d1a9f5c/cookbooks/sensu/providers/service.rb:52:in `block in load_current_resource'
</code></pre>

<p>It is because I did not include the <code>sensu::default</code> cookbook.</p>
]]></content>
  </entry>
  
</feed>
