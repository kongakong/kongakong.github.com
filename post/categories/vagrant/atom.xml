<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: vagrant | Timeline]]></title>
  <link href="http://www.ahwkong.com/post/categories/vagrant/atom.xml" rel="self"/>
  <link href="http://www.ahwkong.com/"/>
  <updated>2015-02-14T11:07:10+11:00</updated>
  <id>http://www.ahwkong.com/</id>
  <author>
    <name><![CDATA[Anthony Kong]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ssh forwarding in vagrant and private github repository]]></title>
    <link href="http://www.ahwkong.com/post/2015/02/13/ssh-forwarding/"/>
    <updated>2015-02-13T16:23:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2015/02/13/ssh-forwarding</id>
    <content type="html"><![CDATA[<p>It is how to checkout git private repository from within a VM without leaving a key in the VM</p>

<p>First in host OS (Mac OSX in my case), run</p>

<pre><code>ssd-add /path/to/githubkey
</code></pre>

<p>In the <code>.ssh/config</code>, add these lines:</p>

<pre><code>    Host           github
    HostName       github.com
    IdentityFile   /path/to/githubkey
</code></pre>

<p>Then enable port forwarding in vagrant VM</p>

<pre><code>Vagrant.configure("2") do |config|
  config.ssh.forward_agent = true
</code></pre>

<p>After you have run <code>vagrant up</code>, you can test the connection in the VM by running</p>

<pre><code>ssh -T git@github.com
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[chef, brekshelf and data bag]]></title>
    <link href="http://www.ahwkong.com/post/2015/01/20/chef/"/>
    <updated>2015-01-20T14:41:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2015/01/20/chef</id>
    <content type="html"><![CDATA[<p>After some trial and errors, the best way (as of this writing) to manage cookbooks for <strong>vagrant</strong> + <strong>chef</strong> is to use brekshef. You can forget about <code>knife</code> or <code>librarian-chef</code>.</p>

<p>If you use berkshelf with vagrant, you will need to install the vagrant-berkshelf plugin. The plugin is quite clever and you do not need to specify the cookbook path for your chef-solo or chef-zero provisioner.</p>

<p>However it does not apply to <code>data_bags</code>. You will still need to specify the path to <code>data_bags</code> if you need to use data bag.</p>
]]></content>
  </entry>
  
</feed>
