<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: json | Timeline]]></title>
  <link href="http://www.ahwkong.com/post/categories/json/atom.xml" rel="self"/>
  <link href="http://www.ahwkong.com/"/>
  <updated>2015-03-18T06:47:43+11:00</updated>
  <id>http://www.ahwkong.com/</id>
  <author>
    <name><![CDATA[Anthony Kong]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[gem install hipchat problem]]></title>
    <link href="http://www.ahwkong.com/post/2015/02/26/gem-install-hipchat/"/>
    <updated>2015-02-26T22:45:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2015/02/26/gem-install-hipchat</id>
    <content type="html"><![CDATA[<pre><code>    Fetching: json-1.8.2.gem (100%)
    Building native extensions.  This could take a while...
    ERROR:  Error installing hipchat:
            ERROR: Failed to build gem native extension.

        /opt/sensu/embedded/bin/ruby extconf.rb
    creating Makefile

    make "DESTDIR="
    compiling generator.c
    make: gcc: Command not found
    make: *** [generator.o] Error 127


    Gem files will remain installed in /opt/sensu/embedded/lib/ruby/gems/2.0.0/gems/json-1.8.2 for inspection.
    Results logged to /opt/sensu/embedded/lib/ruby/gems/2.0.0/gems/json-1.8.2/ext/json/ext/generator/gem_make.out
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Incorrect way to use JSONKit?]]></title>
    <link href="http://www.ahwkong.com/post/2013/12/13/incorrect-way-to-use-jsonkit/"/>
    <updated>2013-12-13T06:42:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2013/12/13/incorrect-way-to-use-jsonkit</id>
    <content type="html"><![CDATA[<p>At the beginning I use the following code to decode a JSON string:</p>

<p>{% codeblock lang:objective-c %}
&ndash; (void)connectionDidFinishLoading:(NSURLConnection *)connection
{</p>

<pre><code>JSONDecoder* decoder = [[JSONDecoder alloc]
                        initWithParseOptions:JKParseOptionNone];
NSArray* json = [decoder objectWithData:receivedData];
</code></pre>

<p>{% endcodeblock %}</p>

<p>and then I tried to convert the json data with this function:</p>

<p>{% codeblock lang:objective-c %}
&ndash;(voide) convertJSONData:(id)json {</p>

<pre><code>NSEnumerator *enumerator = [json objectEnumerator];
id anObject;

while (anObject = [enumerator nextObject]) {
    // test for anObject class and handle accordingly
</code></pre>

<p>{% endcodeblock %}</p>

<p>It is probably not an efficient way to handle the incoming json data.</p>
]]></content>
  </entry>
  
</feed>
