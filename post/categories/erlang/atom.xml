<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: erlang | Timeline]]></title>
  <link href="http://www.ahwkong.com/post/categories/erlang/atom.xml" rel="self"/>
  <link href="http://www.ahwkong.com/"/>
  <updated>2014-01-05T10:11:43+11:00</updated>
  <id>http://www.ahwkong.com/</id>
  <author>
    <name><![CDATA[Anthony Kong]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Discount Margin of FRN]]></title>
    <link href="http://www.ahwkong.com/post/2013/12/09/discount-margin-of-frn/"/>
    <updated>2013-12-09T23:45:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2013/12/09/discount-margin-of-frn</id>
    <content type="html"><![CDATA[<p>{% include_code &lsquo;Discount Margin&rsquo; lang:erlang  erlang/frn.erl %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[power consumption of erlang compilation]]></title>
    <link href="http://www.ahwkong.com/post/2013/12/04/power-consumption-of-erlang-compilation/"/>
    <updated>2013-12-04T07:58:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2013/12/04/power-consumption-of-erlang-compilation</id>
    <content type="html"><![CDATA[<p>Only cost 2% of battery power of my MacBookPro. Not bad at all</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[osx specific error with erlang compilation]]></title>
    <link href="http://www.ahwkong.com/post/2013/12/04/osx-specific-error-with-erlang-compilation/"/>
    <updated>2013-12-04T07:53:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2013/12/04/osx-specific-error-with-erlang-compilation</id>
    <content type="html"><![CDATA[<p>{% codeblock %}
gcc  -Werror=return-type  -m32 -g  -O3 -fomit-frame-pointer -I/Users/antkong/wd/erl/build/otp_src_R16B02/erts/x86_64-apple-darwin13.0.1   -D_XOPEN_SOURCE -DERTS_SMP -DHAVE_CONFIG_H -Wall -Wstrict-prototypes -Wmissing-prototypes -Wdeclaration-after-statement -DUSE_THREADS -D_THREAD_SAFE -D_REENTRANT -DPOSIX_THREADS   -Ix86_64-apple-darwin13.0.1/opt/smp -Ibeam -Isys/unix -Isys/common -Ix86_64-apple-darwin13.0.1 -Izlib  -Ipcre -Ihipe -I../include -I../include/x86_64-apple-darwin13.0.1 -I../include/internal -I../include/internal/x86_64-apple-darwin13.0.1 -c beam/beam_emu.c -o obj/x86_64-apple-darwin13.0.1/opt/smp/beam_emu.o
beam/beam_emu.c:4718:6: warning: &lsquo;finite&rsquo; is deprecated: first deprecated in OS X 10.9 [-Wdeprecated-declarations]</p>

<pre><code> ERTS_NO_FPE_ERROR(c_p, fb(Arg(2)), goto fbadarith);
 ^
</code></pre>

<p>beam/beam_emu.c:4689:29: note: expanded from macro &lsquo;ERTS_NO_FPE_ERROR&rsquo;</p>

<h1>define ERTS_NO_FPE_ERROR ERTS_FP_ERROR</h1>

<pre><code>                        ^
</code></pre>

<p>sys/unix/erl_unix_sys.h:310:33: note: expanded from macro &lsquo;ERTS_FP_ERROR&rsquo;</p>

<h1>define ERTS_FP_ERROR(p, f, A)          __ERTS_FP_ERROR(&amp;(p)&ndash;>fp_exception, f, A)</h1>

<pre><code>                                    ^
</code></pre>

<p>sys/unix/erl_unix_sys.h:235:51: note: expanded from macro &lsquo;__ERTS_FP_ERROR&rsquo;</p>

<h1>define __ERTS_FP_ERROR(fpexnp, f, Action) if (!finite(f)) { Action; } else {}</h1>

<pre><code>                                              ^
</code></pre>

<p>/usr/include/math.h:718:12: note: &lsquo;finite&rsquo; declared here
extern int finite(double) <strong>OSX_AVAILABLE_BUT_DEPRECATED(</strong>MAC_10_0, <strong>MAC_10_9, </strong>IPHONE_NA, __IPHONE_NA);</p>

<pre><code>       ^
</code></pre>

<p>beam/beam_emu.c:4727:6: warning: &lsquo;finite&rsquo; is deprecated: first deprecated in OS X 10.9 [-Wdeprecated-declarations]</p>

<pre><code> ERTS_NO_FPE_ERROR(c_p, fb(Arg(2)), goto fbadarith);
 ^
</code></pre>

<p>beam/beam_emu.c:4689:29: note: expanded from macro &lsquo;ERTS_NO_FPE_ERROR&rsquo;</p>

<h1>define ERTS_NO_FPE_ERROR ERTS_FP_ERROR</h1>

<pre><code>                        ^
</code></pre>

<p>sys/unix/erl_unix_sys.h:310:33: note: expanded from macro &lsquo;ERTS_FP_ERROR&rsquo;</p>

<h1>define ERTS_FP_ERROR(p, f, A)          __ERTS_FP_ERROR(&amp;(p)&ndash;>fp_exception, f, A)</h1>

<pre><code>                                    ^
</code></pre>

<p>sys/unix/erl_unix_sys.h:235:51: note: expanded from macro &lsquo;__ERTS_FP_ERROR&rsquo;</p>

<h1>define __ERTS_FP_ERROR(fpexnp, f, Action) if (!finite(f)) { Action; } else {}</h1>

<pre><code>                                              ^
</code></pre>

<p>/usr/include/math.h:718:12: note: &lsquo;finite&rsquo; declared here
extern int finite(double) <strong>OSX_AVAILABLE_BUT_DEPRECATED(</strong>MAC_10_0, <strong>MAC_10_9, </strong>IPHONE_NA, __IPHONE_NA);</p>

<pre><code>       ^
</code></pre>

<p>beam/beam_emu.c:4736:6: warning: &lsquo;finite&rsquo; is deprecated: first deprecated in OS X 10.9 [-Wdeprecated-declarations]</p>

<pre><code> ERTS_NO_FPE_ERROR(c_p, fb(Arg(2)), goto fbadarith);
 ^
</code></pre>

<p>beam/beam_emu.c:4689:29: note: expanded from macro &lsquo;ERTS_NO_FPE_ERROR&rsquo;</p>

<h1>define ERTS_NO_FPE_ERROR ERTS_FP_ERROR</h1>

<pre><code>                        ^
</code></pre>

<p>sys/unix/erl_unix_sys.h:310:33: note: expanded from macro &lsquo;ERTS_FP_ERROR&rsquo;</p>

<h1>define ERTS_FP_ERROR(p, f, A)          __ERTS_FP_ERROR(&amp;(p)&ndash;>fp_exception, f, A)</h1>

<pre><code>                                    ^
</code></pre>

<p>sys/unix/erl_unix_sys.h:235:51: note: expanded from macro &lsquo;__ERTS_FP_ERROR&rsquo;</p>

<h1>define __ERTS_FP_ERROR(fpexnp, f, Action) if (!finite(f)) { Action; } else {}</h1>

<pre><code>                                              ^
</code></pre>

<p>/usr/include/math.h:718:12: note: &lsquo;finite&rsquo; declared here
extern int finite(double) <strong>OSX_AVAILABLE_BUT_DEPRECATED(</strong>MAC_10_0, <strong>MAC_10_9, </strong>IPHONE_NA, __IPHONE_NA);</p>

<pre><code>       ^
</code></pre>

<p>beam/beam_emu.c:4745:6: warning: &lsquo;finite&rsquo; is deprecated: first deprecated in OS X 10.9 [-Wdeprecated-declarations]</p>

<pre><code> ERTS_NO_FPE_ERROR(c_p, fb(Arg(2)), goto fbadarith);
 ^
</code></pre>

<p>beam/beam_emu.c:4689:29: note: expanded from macro &lsquo;ERTS_NO_FPE_ERROR&rsquo;</p>

<h1>define ERTS_NO_FPE_ERROR ERTS_FP_ERROR</h1>

<pre><code>                        ^
</code></pre>

<p>sys/unix/erl_unix_sys.h:310:33: note: expanded from macro &lsquo;ERTS_FP_ERROR&rsquo;</p>

<h1>define ERTS_FP_ERROR(p, f, A)          __ERTS_FP_ERROR(&amp;(p)&ndash;>fp_exception, f, A)</h1>

<pre><code>                                    ^
</code></pre>

<p>sys/unix/erl_unix_sys.h:235:51: note: expanded from macro &lsquo;__ERTS_FP_ERROR&rsquo;</p>

<h1>define __ERTS_FP_ERROR(fpexnp, f, Action) if (!finite(f)) { Action; } else {}</h1>

<pre><code>                                              ^
</code></pre>

<p>/usr/include/math.h:718:12: note: &lsquo;finite&rsquo; declared here
extern int finite(double) <strong>OSX_AVAILABLE_BUT_DEPRECATED(</strong>MAC_10_0, <strong>MAC_10_9, </strong>IPHONE_NA, __IPHONE_NA);</p>

<pre><code>       ^
</code></pre>

<p>beam/beam_emu.c:4754:6: warning: &lsquo;finite&rsquo; is deprecated: first deprecated in OS X 10.9 [-Wdeprecated-declarations]</p>

<pre><code> ERTS_NO_FPE_ERROR(c_p, fb(Arg(1)), goto fbadarith);
 ^
</code></pre>

<p>beam/beam_emu.c:4689:29: note: expanded from macro &lsquo;ERTS_NO_FPE_ERROR&rsquo;</p>

<h1>define ERTS_NO_FPE_ERROR ERTS_FP_ERROR</h1>

<pre><code>                        ^
</code></pre>

<p>sys/unix/erl_unix_sys.h:310:33: note: expanded from macro &lsquo;ERTS_FP_ERROR&rsquo;</p>

<h1>define ERTS_FP_ERROR(p, f, A)          __ERTS_FP_ERROR(&amp;(p)&ndash;>fp_exception, f, A)</h1>

<pre><code>                                    ^
</code></pre>

<p>sys/unix/erl_unix_sys.h:235:51: note: expanded from macro &lsquo;__ERTS_FP_ERROR&rsquo;</p>

<h1>define __ERTS_FP_ERROR(fpexnp, f, Action) if (!finite(f)) { Action; } else {}</h1>

<pre><code>                                              ^
</code></pre>

<p>/usr/include/math.h:718:12: note: &lsquo;finite&rsquo; declared here
extern int finite(double) <strong>OSX_AVAILABLE_BUT_DEPRECATED(</strong>MAC_10_0, <strong>MAC_10_9, </strong>IPHONE_NA, __IPHONE_NA);</p>

<p>{% endcodeblock %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Building erlang R16B02]]></title>
    <link href="http://www.ahwkong.com/post/2013/12/04/building-erlang-r16b02/"/>
    <updated>2013-12-04T07:50:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2013/12/04/building-erlang-r16b02</id>
    <content type="html"><![CDATA[<p>Got this at the end of configure</p>

<p>{% codeblock %}</p>

<hr />

<p><strong><strong><strong><strong><strong><strong><strong><strong><strong><em>***  APPLICATIONS INFORMATION  </em></strong></strong></strong></strong></strong></strong></strong></strong></strong></p>

<hr />

<p>wx             : wxWidgets not found, wx will NOT be usable</p>

<hr />

<hr />

<p><strong><strong><strong><strong><strong><strong><strong><strong><strong>****  DOCUMENTATION INFORMATION  </strong></strong></strong></strong></strong></strong></strong></strong></strong></p>

<hr />

<p>documentation  :</p>

<pre><code>             fop is missing.
             Using fakefop to generate placeholder PDF files.
</code></pre>

<hr />

<p>{% endcodeblock %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[riak allow-multi]]></title>
    <link href="http://www.ahwkong.com/post/2013/08/15/riak-allow-multi/"/>
    <updated>2013-08-15T01:04:00+10:00</updated>
    <id>http://www.ahwkong.com/post/2013/08/15/riak-allow-multi</id>
    <content type="html"><![CDATA[<p>I could not create a write conflict situation.</p>

<p>It turns out it is because I did not set the <strong>allow_multi</strong> property</p>

<p>Here is the command line:</p>

<pre><code>curl -i -XPUT http://riak001:8098/riak/cart -H "Content-Type:application/json" -d '{"props":{"allow_mult":1} }'
</code></pre>
]]></content>
  </entry>
  
</feed>
