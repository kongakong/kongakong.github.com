<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: erlang | Timeline]]></title>
  <link href="http://kongakong.github.io/post/categories/erlang/atom.xml" rel="self"/>
  <link href="http://kongakong.github.io/"/>
  <updated>2013-11-28T21:29:20+11:00</updated>
  <id>http://kongakong.github.io/</id>
  <author>
    <name><![CDATA[Anthony Kong]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[riak allow-multi]]></title>
    <link href="http://kongakong.github.io/post/2013/08/15/riak-allow-multi/"/>
    <updated>2013-08-15T01:04:00+10:00</updated>
    <id>http://kongakong.github.io/post/2013/08/15/riak-allow-multi</id>
    <content type="html"><![CDATA[<p>I could not create a write conflict situation.</p>

<p>It turns out it is because I did not set the <strong>allow_multi</strong> property</p>

<p>Here is the command line:</p>

<pre><code>curl -i -XPUT http://riak001:8098/riak/cart -H "Content-Type:application/json" -d '{"props":{"allow_mult":1} }'
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress's Liquid Exception]]></title>
    <link href="http://kongakong.github.io/post/2013/08/13/octopresss-liquid-exception/"/>
    <updated>2013-08-13T18:47:00+10:00</updated>
    <id>http://kongakong.github.io/post/2013/08/13/octopresss-liquid-exception</id>
    <content type="html"><![CDATA[<p>When I tried to publish a blog post which contains some erlang code, I got this error message</p>

<pre><code>Liquid Exception: undefined method `[]' for nil:NilClass in 2013-08-04-mypost.markdown
</code></pre>

<p>It is because in erlang &lsquo;%&rsquo; is the comment character. I used &lsquo;%%&rsquo; to start a comment and it confuses Jekyll. Switching back to a single &lsquo;%&rsquo; fixes the problem.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to make riak listen to IP other than localhost]]></title>
    <link href="http://kongakong.github.io/post/2013/08/09/how-to-make-riak-listen-to-addresses-other-than-localhost/"/>
    <updated>2013-08-09T18:53:00+10:00</updated>
    <id>http://kongakong.github.io/post/2013/08/09/how-to-make-riak-listen-to-addresses-other-than-localhost</id>
    <content type="html"><![CDATA[<p>By default a riak node will only listen to 127.0.0.1.</p>

<p>Replace 127.0.0.1 with the host IP in app.config will solve this issue</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Simple Swap Calculation]]></title>
    <link href="http://kongakong.github.io/post/2013/08/04/simple-swap-calculation/"/>
    <updated>2013-08-04T17:34:00+10:00</updated>
    <id>http://kongakong.github.io/post/2013/08/04/simple-swap-calculation</id>
    <content type="html"><![CDATA[<p><strong>Question</strong>: Today is 1st of January. The residual maturity of a swap is 9 months. The notional
 principal is $1,000. You receive 3% fixed semiannual payments and pay semiannual
 cash flows based on the 6-month Libor rate on March 31st and September 30th.
 Next payment is based on Libor at 5%. The current term structure is
 R(0, 0.25) = 4% and R(0, 0.75) = 5%.</p>

<p>Find the value of the fixed leg, floating leg and the swap.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;-</span><span class="n">module</span><span class="p">(</span><span class="n">swap</span><span class="p">).</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;-</span><span class="n">export</span><span class="p">([</span><span class="n">example1</span><span class="o">/</span><span class="mi">0</span><span class="p">]).</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">example1</span><span class="p">()</span> <span class="err">&amp;</span><span class="n">ndash</span><span class="p">;</span><span class="o">&gt;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="nv">Fixed</span> <span class="o">=</span> <span class="n">example1_fixedleg</span><span class="p">(),</span>
</span><span class='line'><span class="nv">Floating</span> <span class="o">=</span> <span class="n">example1_floatingleg</span><span class="p">(),</span>
</span><span class='line'><span class="p">{</span><span class="nv">Fixed</span><span class="p">,</span> <span class="nv">Floating</span><span class="p">,</span> <span class="nv">Fixed</span><span class="o">-</span><span class="nv">Floating</span><span class="p">}.</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">example1_fixedleg</span><span class="p">()</span> <span class="err">&amp;</span><span class="n">ndash</span><span class="p">;</span><span class="o">&gt;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="mi">30</span> <span class="o">/</span> <span class="nn">math</span><span class="p">:</span><span class="nf">pow</span><span class="p">(</span><span class="mi">1</span><span class="o">+</span><span class="mi">0</span><span class="p">.</span><span class="mi">04</span><span class="p">,</span> <span class="mi">1</span><span class="o">/</span><span class="mi">4</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1030</span><span class="o">/</span><span class="nn">math</span><span class="p">:</span><span class="nf">pow</span><span class="p">(</span><span class="mi">1</span><span class="o">+</span><span class="mi">0</span><span class="p">.</span><span class="mi">05</span><span class="p">,</span> <span class="mi">3</span><span class="o">/</span><span class="mi">4</span><span class="p">).</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">example1_floatingleg</span><span class="p">()</span> <span class="err">&amp;</span><span class="n">ndash</span><span class="p">;</span><span class="o">&gt;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="c">% 25 - next floating cash-flow payment </span>
</span><span class='line'><span class="c">% 1000 - the notional as if it is a zero-coupon bond</span>
</span><span class='line'><span class="mi">25</span> <span class="o">/</span> <span class="nn">math</span><span class="p">:</span><span class="nf">pow</span><span class="p">(</span><span class="mi">1</span><span class="o">+</span><span class="mi">0</span><span class="p">.</span><span class="mi">05</span><span class="p">,</span> <span class="mi">1</span><span class="o">/</span><span class="mi">4</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1000</span><span class="o">/</span><span class="nn">math</span><span class="p">:</span><span class="nf">pow</span><span class="p">(</span><span class="mi">1</span><span class="o">+</span><span class="mi">0</span><span class="p">.</span><span class="mi">05</span><span class="p">,</span> <span class="mi">1</span><span class="o">/</span><span class="mi">4</span><span class="p">).</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><strong>Answer</strong>: {1022.6981406074298,1012.5734611086509,10.124679498778846}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Different Type of Database Models]]></title>
    <link href="http://kongakong.github.io/post/2013/07/29/different-type-of-database/"/>
    <updated>2013-07-29T08:08:00+10:00</updated>
    <id>http://kongakong.github.io/post/2013/07/29/different-type-of-database</id>
    <content type="html"><![CDATA[<p>I find this summary in <a href="http://littleriakbook.com/">Eric Redmond&rsquo;s &lsquo;A Little Riak&rsquo;</a> book  very concise and useful.</p>

<ol>
<li><p><strong>Relational</strong> Traditional databases usually use SQL to model and query data. They are useful for data which can be stored in a highly structured schema, yet require lexible querying. Scaling a relational database (RDBMS) traditionally occurs by more powerful hardware (vertical growth).</p>

<p>Examples: PostgreSQL, MySQL, Oracle</p></li>
<li><p><strong>Graph</strong> These exist for dataighly interconnected data. They excel in modeling complex relationships between nodes, and many implementations can handle multiple billions of nodes and relationships (or edges and vertices). I tend to include triplestores and object DBs as specialized variants.</p>

<p> Examples: Neo4j, Graphbase, IniniteGraph</p></li>
<li><p><strong>Document</strong> Document datastores model hierarchical values called documents, represented in formats such as JSON or XML, and do not enforce a document schema. They generally support distributing across multiple servers (horizontal growth).</p>

<p> Examples: CouchDB, MongoDB, Couchbase</p></li>
<li><p><strong>Columnar</strong> Popularized by Google’s BigTable, this form of database exists to scale across mul- tiple servers, and groups similar data into column families. Column values can be individually versioned and managed, though families are deined in advance, not unlike RDBMS schemas.</p>

<p> Examples: HBase, Cassandra, BigTable 4</p></li>
<li><p><strong>Key/Value</strong> Key/Value, or KV stores, are conceptually like hashtables, where values are stored and accessed by an immutable key. They range from single-server varieties like Memcached used for high-speed caching, to multi-datacenter distributed systems like Riak Enterprise.</p>

<p> Examples: Riak, Redis, Voldemort</p></li>
</ol>

]]></content>
  </entry>
  
</feed>
