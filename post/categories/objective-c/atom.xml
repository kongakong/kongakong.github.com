<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: objective-c | Timeline]]></title>
  <link href="http://www.ahwkong.com/post/categories/objective-c/atom.xml" rel="self"/>
  <link href="http://www.ahwkong.com/"/>
  <updated>2014-01-01T07:57:44+11:00</updated>
  <id>http://www.ahwkong.com/</id>
  <author>
    <name><![CDATA[Anthony Kong]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[category vs class extension]]></title>
    <link href="http://www.ahwkong.com/post/2014/01/01/category-vs-class-extension/"/>
    <updated>2014-01-01T07:25:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/01/01/category-vs-class-extension</id>
    <content type="html"><![CDATA[<p>Category does not allow addition of ivar.</p>

<p>The restriction does not apply to class extension.</p>

<p>That&rsquo;s why I can do something like this:</p>

<p>{% codeblock lang:objective-c %}</p>

<p>@interface SOViewController ()
@property (weak, nonatomic) IBOutlet UIPickerView <em>Picker1;
@property (weak, nonatomic) IBOutlet UIPickerView </em>Picker2;</p>

<p>@end</p>

<p>{% endcodeblock %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[swizzle]]></title>
    <link href="http://www.ahwkong.com/post/2013/12/31/swizzle/"/>
    <updated>2013-12-31T07:21:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2013/12/31/swizzle</id>
    <content type="html"><![CDATA[<p>A new concept to me: <a href="http://stackoverflow.com/questions/20775670/set-ivar-value-from-category">http://stackoverflow.com/questions/20775670/set-ivar-value-from-category</a></p>

<p>Here is a summary:</p>

<p>{% codeblock lang:objective-c %}</p>

<pre><code>original = class_getInstanceMethod([ClassA class], @selector(setImportantProperty:));
swizzled = class_getInstanceMethod([ClassA class], @selector(alternative_setImportantProperty:)); 
method_exchangeImplementations(original, swizzled);
</code></pre>

<p>{% endcodeblock %}`</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to do a multi-line string in objective-c]]></title>
    <link href="http://www.ahwkong.com/post/2013/12/19/how-to-do-a-multi-line-string-in-objective-c/"/>
    <updated>2013-12-19T07:33:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2013/12/19/how-to-do-a-multi-line-string-in-objective-c</id>
    <content type="html"><![CDATA[<p>Here is an example:</p>

<p>{% codeblock lang:objective-c %}</p>

<p> NSString* s = @&ldquo;{&rdquo; \</p>

<pre><code>" key1 = \"value1\" \
" }";
</code></pre>

<p>{% endcodeblock %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ownership rule exception]]></title>
    <link href="http://www.ahwkong.com/post/2013/12/19/ownership-rule-exception/"/>
    <updated>2013-12-19T07:26:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2013/12/19/ownership-rule-exception</id>
    <content type="html"><![CDATA[<p>Normally an observer or a delegate owner should not hold a strong reference to a callback or a delegate.</p>

<p>The two well-known exceptions are: an NSURLConnection ownes its delegate while the connection is running, and an NSTimer ownes its target while the timer is valid</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Need to write a proper unit test in objective-c]]></title>
    <link href="http://www.ahwkong.com/post/2013/12/19/tdd-in-objective-c/"/>
    <updated>2013-12-19T07:12:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2013/12/19/tdd-in-objective-c</id>
    <content type="html"><![CDATA[<p>It is my first attempt at testing my JSON handling code:</p>

<p>{% codeblock lang:objective-c %}</p>

<ul>
<li>(void)testReadingJSON
{
  QueQuestionManager* qm = [[QueQuestionManager alloc] init];
  qm.server_url = @&ldquo;<a href="http://localhost:8777/">http://localhost:8777/</a>&rdquo;;
  [qm readQuestionnaire];
  NSLog(@&ldquo;>> %@&rdquo;, qm.questionnaire);
}</li>
</ul>


<p>{% endcodeblock %}</p>

<p>Needless to say it is pretty bad, for the following reasons:</p>

<ul>
<li><p>It has an external dependency of a local server. It is strictly speaking not a unit test</p></li>
<li><p>The code does not work. It is likely because the run loop is not started when the unit test runs</p></li>
</ul>


<p>My TODO:</p>

<ul>
<li><p>Refactor the above code to be a proper unit test</p></li>
<li><p>Use functional testing framework to implement the above test</p></li>
</ul>

]]></content>
  </entry>
  
</feed>
