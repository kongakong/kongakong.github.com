<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: objective-c | Timeline]]></title>
  <link href="http://kongakong.github.io/post/categories/objective-c/atom.xml" rel="self"/>
  <link href="http://kongakong.github.io/"/>
  <updated>2013-12-16T20:43:35+11:00</updated>
  <id>http://kongakong.github.io/</id>
  <author>
    <name><![CDATA[Anthony Kong]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Incorrect way to use JSONKit?]]></title>
    <link href="http://kongakong.github.io/post/2013/12/13/incorrect-way-to-use-jsonkit/"/>
    <updated>2013-12-13T06:42:00+11:00</updated>
    <id>http://kongakong.github.io/post/2013/12/13/incorrect-way-to-use-jsonkit</id>
    <content type="html"><![CDATA[<p>At the beginning I use the following code to decode a JSON string:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="err">&amp;</span><span class="n">ndash</span><span class="p">;</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="nn">connectionDidFinishLoading</span><span class="p">:(</span><span class="nv">NSURLConnection</span> <span class="o">*</span><span class="p">)</span><span class="n">connection</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="nv">JSONDecoder</span><span class="o">*</span> <span class="n">decoder</span> <span class="o">=</span> <span class="p">[[</span><span class="nv">JSONDecoder</span> <span class="n">alloc</span><span class="p">]</span>
</span><span class='line'>                        <span class="nn">initWithParseOptions</span><span class="p">:</span><span class="nv">JKParseOptionNone</span><span class="p">];</span>
</span><span class='line'><span class="nv">NSArray</span><span class="o">*</span> <span class="n">json</span> <span class="o">=</span> <span class="p">[</span><span class="n">decoder</span> <span class="nn">objectWithData</span><span class="p">:</span><span class="n">receivedData</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>It is probably a wrong way to handle the incoming json data.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JSONKit exception]]></title>
    <link href="http://kongakong.github.io/post/2013/12/12/jsonkit-exception/"/>
    <updated>2013-12-12T06:59:00+11:00</updated>
    <id>http://kongakong.github.io/post/2013/12/12/jsonkit-exception</id>
    <content type="html"><![CDATA[<p>Trying to convert a JSON list into an NSArray. Apparently the object instance does not support the selector  <code>objectFromJSONString</code>. It is my misunderstanding of how the JSONKit APIs are used</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>2013-12-12 02:05:11.989 Questions[9190:70b] &lt;strong>&lt;em> Terminating app due to uncaught exception &lsquo;NSInvalidArgumentException&rsquo;, reason: &lsquo;&ndash;[JKArray objectFromJSONString]: unrecognized selector sent to instance 0x109318370&rsquo;
</span><span class='line'>&lt;/em>&lt;/strong> First throw call stack:
</span><span class='line'>(&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>0   CoreFoundation                      0x0000000101b59795 __exceptionPreprocess + 165
</span><span class='line'>1   libobjc.A.dylib                     0x00000001018bc991 objc_exception_throw + 43
</span><span class='line'>2   CoreFoundation                      0x0000000101beabad -[NSObject(NSObject) doesNotRecognizeSelector:] + 205
</span><span class='line'>3   CoreFoundation                      0x0000000101b4b09d ___forwarding___ + 973
</span><span class='line'>4   CoreFoundation                      0x0000000101b4ac48 _CF_forwarding_prep_0 + 120
</span><span class='line'>5   Questions                           0x0000000100003b14 -[QueQuestionManager convertJsonIntoQuestionnaire:] + 804
</span><span class='line'>6   Questions                           0x000000010000404b -[QueQuestionManager connectionDidFinishLoading:] + 203
</span><span class='line'>7   Foundation                          0x0000000100467e9b __65-[NSURLConnectionInternal _withConnectionAndDelegate:onlyActive:]_block_invoke + 48
</span><span class='line'>8   Foundation                          0x000000010031b6ab -[NSURLConnectionInternal _withConnectionAndDelegate:onlyActive:] + 210
</span><span class='line'>9   Foundation                          0x000000010031b5bc -[NSURLConnectionInternal _withActiveConnectionAndDelegate:] + 69
</span><span class='line'>10  CFNetwork                           0x000000010347a777 ___ZN27URLConnectionClient_Classic26_delegate_didFinishLoadingEU13block_pointerFvvE_block_invoke + 107
</span><span class='line'>11  CFNetwork                           0x0000000103478942 ___ZN27URLConnectionClient_Classic18_withDelegateAsyncEPKcU13block_pointerFvP16_CFURLConnectionPK33CFURLConnectionClientCurrent_VMaxE_block_invoke_2 + 84
</span><span class='line'>12  CFNetwork                           0x00000001034bbf74 ___ZNK17CoreSchedulingSet13_performAsyncEPKcU13block_pointerFvvE_block_invoke + 25
</span><span class='line'>13  CoreFoundation                      0x0000000101b00114 CFArrayApplyFunction + 68
</span><span class='line'>14  CFNetwork                           0x00000001033ebbeb _ZN19RunloopBlockContext7performEv + 115
</span><span class='line'>15  CFNetwork                           0x00000001033eba31 _ZN17MultiplexerSource7performEv + 247
</span><span class='line'>16  CFNetwork                           0x00000001033eb854 _ZN17MultiplexerSource8_performEPv + 72
</span><span class='line'>17  CoreFoundation                      0x0000000101ae8ec1 __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 17
</span><span class='line'>18  CoreFoundation                      0x0000000101ae8792 __CFRunLoopDoSources0 + 242
</span><span class='line'>19  CoreFoundation                      0x0000000101b0461f __CFRunLoopRun + 767
</span><span class='line'>20  CoreFoundation                      0x0000000101b03f33 CFRunLoopRunSpecific + 467
</span><span class='line'>21  GraphicsServices                    0x000000010382f3a0 GSEventRunModal + 161
</span><span class='line'>22  UIKit                               0x0000000100987043 UIApplicationMain + 1010
</span><span class='line'>23  Questions                           0x0000000100003653 main + 115
</span><span class='line'>24  libdyld.dylib                       0x00000001021e85fd start + 1
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>)
</span><span class='line'>libc++abi.dylib: terminating with uncaught exception of type NSException&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ivar error message: Autosynthesized property 'delegate' will use synthesized instance variable '_delegate', not existing instance variable 'delegate']]></title>
    <link href="http://kongakong.github.io/post/2013/12/11/ivar-error-message/"/>
    <updated>2013-12-11T06:28:00+11:00</updated>
    <id>http://kongakong.github.io/post/2013/12/11/ivar-error-message</id>
    <content type="html"><![CDATA[<p><em>(Sourced from Stackoverflow here <a href="http://stackoverflow.com/a/14184752/58129">http://stackoverflow.com/a/14184752/58129</a>)</em></p>

<p>The most idiomatic way to handle this situation is simply to remove your <code>delegate</code> ivar declaration.  If you were using your <code>delegate</code> ivar, you should use the implicit ivar <code>_delegate</code> instead.</p>

<p><strong>Why does this work?</strong></p>

<p>As of <a href="http://developer.apple.com/library/ios/#releasenotes/ObjectiveC/ObjCAvailabilityIndex/">Xcode 4.4 (LLVM Compiler 4.0)</a>, instance variables and accessor methods are synthesized automatically for a property <em>if the <code>@synthesize</code> directive is not used explicitly for that property</em>.  As <a href="http://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/ProgrammingWithObjectiveC/EncapsulatingData/EncapsulatingData.html">Apple&rsquo;s documentation on encapsulation</a> states</p>

<blockquote><p>By default, [&hellip;] accessor methods are synthesized automatically for you by the compiler, so you don’t need to do anything other than declare the property using @property in the class interface.</p></blockquote>

<p>The ivar that is used for a property (which is gotten and set by the automatically synthesized property accessor methods) is named <code>_&lt;propertyName&gt;</code> (i.e. the ivar&rsquo;s name is the property&rsquo;s name prefixed with an underscore).</p>

<p>In this case the property name is <code>delegate</code>, so the the ivar that is used is <code>_delegate</code>.  This is already happening in your code.  When you call <code>-delegate</code> and <code>-setDelegate:</code>, this ivar <code>_delegate</code> will be gotten and set.</p>

<p>However, you&rsquo;ve also declared your own ivar <code>delegate</code>.  Of course, the ivar you explicitly declared (<code>delegate</code>) will not be gotten and set by the instance methods <code>-delegate</code> and <code>-setDelegate:</code> since the automatically synthesized ivar (<code>_delegate</code>) is being gotten and set.  However, (almost always&mdash;if it wasn&rsquo;t, your code is ambiguous) your intent was for your ivar <code>delegate</code> to be the thing that your property&rsquo;s accessors would get and set.  Luckily, the compiler is clever enough to notice what you&rsquo;ve done, and that&rsquo;s why it is emitting this warning:</p>

<blockquote><p>warning: autosynthesized property &lsquo;delegate&rsquo; will use synthesized instance variable &lsquo;_delegate&rsquo;, not existing instance variable &lsquo;delegate&rsquo; [-Wobjc-autosynthesis-property-ivar-name-match]</p></blockquote>

<p>It&rsquo;s telling you that your property <code>delegate</code> will use the automatically synthesized ivar <code>_delegate</code> rather than the ivar that you explicitly declared, <code>delegate</code>.</p>

<p>So if you simply delete your <code>delegate</code> ivar, the compiler will stop emitting this warning.  If you were using the <code>delegate</code> ivar directly (not through the property), start using <code>_delegate</code> instead.</p>

<hr />

<p>A minor variation on this option is to explicitly declare the same ivar (<code>_delegate</code>) that the automatic synthesis of the <code>delegate</code> property is creating.  You can do this by replacing</p>

<pre><code>@interface TheClass : TheSuperclass
{
    //...
    id&lt;TheDelegateProtocol&gt; delegate
    //...
}
@end
</code></pre>

<p>with</p>

<pre><code>@interface TheClass : TheSuperclass
{
    //...
    id&lt;TheDelegateProtocol&gt; _delegate
    //...
}
@end
</code></pre>

<p>This works because automatic synthesis of a property will always use an ivar whose name is the property&rsquo;s name prefixed with an underscore.  If no such ivar exists, the ivar will be generated.  If it does exist, it will be used.</p>

<hr />

<p>If instead you would prefer that your property&rsquo;s accessors set and get your ivar <code>delegate</code> you can add an <code>@synthesize</code> directive to your class' <code>@implementation</code> to tell the compiler to do just this:</p>

<pre><code>@implementation TheClass
//...
@synthesize delegate = delegate;
//...
@end
</code></pre>

<p>The line <code>@synthesize delegate = delegate;</code> tells the compiler to use the ivar <code>delegate</code> (the right hand of the assignment) in the accessors for the property <code>delegate</code> (the left hand side of the assignment).</p>

<p>You can also omit the right hand side of the <code>@synthesize</code> assignment and just write</p>

<pre><code>@implementation TheClass
//...
@synthesize delegate;
//...
@end
</code></pre>

<p>This works because a property with a manual <code>@synthesize</code> which does not explicitly specify the ivar to be gotten and set by its accessors (such as <code>@synthesize delegate;</code>) will use an ivar with the same name as the property, NOT prefixed by an underscore.  This has to do with backwards compatibility.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NSInvalidArgumentException when using count]]></title>
    <link href="http://kongakong.github.io/post/2013/12/03/nsinvalidargumentexception/"/>
    <updated>2013-12-03T22:04:00+11:00</updated>
    <id>http://kongakong.github.io/post/2013/12/03/nsinvalidargumentexception</id>
    <content type="html"><![CDATA[<p>Oops.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>2013-12-03 22:01:10.281 Questions[50951:70b] &ndash;[NSNull count]: unrecognized selector sent to instance 0x101cb4b40
</span><span class='line'>2013-12-03 22:01:10.311 Questions[50951:70b] *** Terminating app due to uncaught exception &lsquo;NSInvalidArgumentException&rsquo;, reason: &lsquo;&ndash;[NSNull count]: unrecognized selector sent to instance 0x101cb4b40&rsquo;&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><strong>Solution:</strong></p>

<p>Check if the target is indeed an array</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>if ([anObject isKindOfClass:[NSArray class]]) { // Add a check here&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>NSInteger count = [anObject count];
</span><span class='line'>...
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Switch and enum in Objective-c]]></title>
    <link href="http://kongakong.github.io/post/2013/07/08/switch-and-enum-in-objective-c/"/>
    <updated>2013-07-08T21:30:00+10:00</updated>
    <id>http://kongakong.github.io/post/2013/07/08/switch-and-enum-in-objective-c</id>
    <content type="html"><![CDATA[<blockquote><p>Do not implement a default case in switch statements that handle enumerated types. This helps if you add to the enumeration, because the compiler will warn that the switch does not handle all the values.</p></blockquote>

<p>from <a href="http://www.informit.com/articles/article.aspx?p=2080040&amp;seqNum=5">Matt Galloway</a></p>
]]></content>
  </entry>
  
</feed>
