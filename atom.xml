<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Timeline]]></title>
  <link href="http://www.ahwkong.com/atom.xml" rel="self"/>
  <link href="http://www.ahwkong.com/"/>
  <updated>2015-02-14T11:07:10+11:00</updated>
  <id>http://www.ahwkong.com/</id>
  <author>
    <name><![CDATA[Anthony Kong]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[strange gem install error]]></title>
    <link href="http://www.ahwkong.com/post/2015/02/14/strange-gem-install-error/"/>
    <updated>2015-02-14T10:49:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2015/02/14/strange-gem-install-error</id>
    <content type="html"><![CDATA[<p>For some reason I got this error last night when I tried to run <code>gem install berkshelf</code></p>

<pre><code>    $ gem install berkshelf
    ERROR:  While executing gem ... (Errno::EHOSTDOWN)
        Host is down - sendto(2) for "10.0.1.4" port 53
</code></pre>

<p>It is apparently OK today:</p>

<pre><code>    $ gem install berkshelf
    Fetching: nio4r-1.1.0.gem (100%)
    Building native extensions.  This could take a while...
    Successfully installed nio4r-1.1.0
    Fetching: celluloid-io-0.16.2.gem (100%)
    Successfully installed celluloid-io-0.16.2
    Fetching: addressable-2.3.7.gem (100%)
    Successfully installed addressable-2.3.7
    Fetching: multipart-post-2.0.0.gem (100%)
    Successfully installed multipart-post-2.0.0
    Fetching: faraday-0.9.1.gem (100%)
    Successfully installed faraday-0.9.1
    Fetching: sawyer-0.6.0.gem (100%)
    Successfully installed sawyer-0.6.0
    Fetching: octokit-3.7.1.gem (100%)
    Successfully installed octokit-3.7.1
    Fetching: dep-selector-libgecode-1.0.2.gem (100%)
    Building native extensions.  This could take a while...
    Successfully installed dep-selector-libgecode-1.0.2
    Fetching: dep_selector-1.0.3.gem (100%)
    Building native extensions.  This could take a while...
    Successfully installed dep_selector-1.0.3
    Fetching: semverse-1.2.1.gem (100%)
    Successfully installed semverse-1.2.1
    Fetching: solve-1.2.1.gem (100%)
    Successfully installed solve-1.2.1
    Fetching: retryable-2.0.1.gem (100%)
    Successfully installed retryable-2.0.1
    Fetching: net-http-persistent-2.9.4.gem (100%)
    Successfully installed net-http-persistent-2.9.4
    Fetching: mixlib-log-1.6.0.gem (100%)
    Successfully installed mixlib-log-1.6.0
    Fetching: mixlib-authentication-1.3.0.gem (100%)
    Successfully installed mixlib-authentication-1.3.0
    Fetching: hashie-2.1.2.gem (100%)
    Successfully installed hashie-2.1.2
    Fetching: buff-ruby_engine-0.1.0.gem (100%)
    Successfully installed buff-ruby_engine-0.1.0
    Fetching: buff-shell_out-0.2.0.gem (100%)
    Successfully installed buff-shell_out-0.2.0
    Fetching: buff-ignore-1.1.1.gem (100%)
    Successfully installed buff-ignore-1.1.1
    Fetching: buff-extensions-1.0.0.gem (100%)
    Successfully installed buff-extensions-1.0.0
    Fetching: varia_model-0.4.0.gem (100%)
    Successfully installed varia_model-0.4.0
    Fetching: buff-config-1.0.1.gem (100%)
    Successfully installed buff-config-1.0.1
    Fetching: ridley-4.1.2.gem (100%)
    Successfully installed ridley-4.1.2
    Fetching: minitar-0.5.4.gem (100%)
    Successfully installed minitar-0.5.4
    Fetching: cleanroom-1.0.0.gem (100%)
    Successfully installed cleanroom-1.0.0
    Fetching: berkshelf-api-client-1.2.1.gem (100%)
    Successfully installed berkshelf-api-client-1.2.1
    Fetching: berkshelf-3.2.3.gem (100%)
    Successfully installed berkshelf-3.2.3
    Parsing documentation for nio4r-1.1.0
    Installing ri documentation for nio4r-1.1.0
    Parsing documentation for celluloid-io-0.16.2
    Installing ri documentation for celluloid-io-0.16.2
    Parsing documentation for addressable-2.3.7
    Installing ri documentation for addressable-2.3.7
    invalid options: -SHN
    (invalid options are ignored)
    Parsing documentation for multipart-post-2.0.0
    Installing ri documentation for multipart-post-2.0.0
    Parsing documentation for faraday-0.9.1
    Installing ri documentation for faraday-0.9.1
    Parsing documentation for sawyer-0.6.0
    Installing ri documentation for sawyer-0.6.0
    Parsing documentation for octokit-3.7.1
    Installing ri documentation for octokit-3.7.1
    Parsing documentation for dep-selector-libgecode-1.0.2
    unable to convert "\xEB" from ASCII-8BIT to UTF-8 for ext/libgecode3/vendor/gecode-3.7.3/changelog.in, skipping
    unable to convert "\x8E" from ASCII-8BIT to UTF-8 for ext/libgecode3/vendor/gecode-3.7.3/contribs/qecode/QCOPPlus.cc, skipping
    unable to convert "\xFC" from ASCII-8BIT to UTF-8 for ext/libgecode3/vendor/gecode-3.7.3/examples/bin-packing.cpp, skipping
    unable to convert "\xEA" from ASCII-8BIT to UTF-8 for ext/libgecode3/vendor/gecode-3.7.3/examples/black-hole.cpp, skipping
    unable to convert "\xD6" from ASCII-8BIT to UTF-8 for ext/libgecode3/vendor/gecode-3.7.3/examples/dominating-queens.cpp, skipping
    unable to convert "\xEF" from ASCII-8BIT to UTF-8 for ext/libgecode3/vendor/gecode-3.7.3/gecode.m4, skipping
    unable to convert "\xED" from ASCII-8BIT to UTF-8 for ext/libgecode3/vendor/gecode-3.7.3/gecode/int.hh, skipping
    unable to convert "\xED" from ASCII-8BIT to UTF-8 for ext/libgecode3/vendor/gecode-3.7.3/gecode/int/cumulative.hh, skipping
    unable to convert "\xE9" from ASCII-8BIT to UTF-8 for ext/libgecode3/vendor/gecode-3.7.3/gecode/int/distinct.hh, skipping
    unable to convert "\xF3" from ASCII-8BIT to UTF-8 for ext/libgecode3/vendor/gecode-3.7.3/gecode/int/gcc.hh, skipping
    unable to convert "\xE4" from ASCII-8BIT to UTF-8 for ext/libgecode3/vendor/gecode-3.7.3/gecode/int/sorted.hh, skipping
    unable to convert "\xED" from ASCII-8BIT to UTF-8 for ext/libgecode3/vendor/gecode-3.7.3/gecode/int/unary.hh, skipping
    unable to convert "\xED" from ASCII-8BIT to UTF-8 for lib/dep-selector-libgecode/vendored-gecode/include/gecode/int.hh, skipping
    unable to convert "\xED" from ASCII-8BIT to UTF-8 for lib/dep-selector-libgecode/vendored-gecode/include/gecode/int/cumulative.hh, skipping
    unable to convert "\xE9" from ASCII-8BIT to UTF-8 for lib/dep-selector-libgecode/vendored-gecode/include/gecode/int/distinct.hh, skipping
    unable to convert "\xF3" from ASCII-8BIT to UTF-8 for lib/dep-selector-libgecode/vendored-gecode/include/gecode/int/gcc.hh, skipping
    unable to convert "\xE4" from ASCII-8BIT to UTF-8 for lib/dep-selector-libgecode/vendored-gecode/include/gecode/int/sorted.hh, skipping
    unable to convert "\xED" from ASCII-8BIT to UTF-8 for lib/dep-selector-libgecode/vendored-gecode/include/gecode/int/unary.hh, skipping
    Installing ri documentation for dep-selector-libgecode-1.0.2
    Parsing documentation for dep_selector-1.0.3
    Installing ri documentation for dep_selector-1.0.3
    Parsing documentation for semverse-1.2.1
    Installing ri documentation for semverse-1.2.1
    Parsing documentation for solve-1.2.1
    Installing ri documentation for solve-1.2.1
    Parsing documentation for retryable-2.0.1
    Installing ri documentation for retryable-2.0.1
    Parsing documentation for net-http-persistent-2.9.4
    Installing ri documentation for net-http-persistent-2.9.4
    Parsing documentation for mixlib-log-1.6.0
    Installing ri documentation for mixlib-log-1.6.0
    Parsing documentation for mixlib-authentication-1.3.0
    Installing ri documentation for mixlib-authentication-1.3.0
    Parsing documentation for hashie-2.1.2
    Installing ri documentation for hashie-2.1.2
    Parsing documentation for buff-ruby_engine-0.1.0
    Installing ri documentation for buff-ruby_engine-0.1.0
    Parsing documentation for buff-shell_out-0.2.0
    Installing ri documentation for buff-shell_out-0.2.0
    Parsing documentation for buff-ignore-1.1.1
    Installing ri documentation for buff-ignore-1.1.1
    Parsing documentation for buff-extensions-1.0.0
    Installing ri documentation for buff-extensions-1.0.0
    Parsing documentation for varia_model-0.4.0
    Installing ri documentation for varia_model-0.4.0
    Parsing documentation for buff-config-1.0.1
    Installing ri documentation for buff-config-1.0.1
    Parsing documentation for ridley-4.1.2
    Installing ri documentation for ridley-4.1.2
    Parsing documentation for minitar-0.5.4
    Installing ri documentation for minitar-0.5.4
    Parsing documentation for cleanroom-1.0.0
    Installing ri documentation for cleanroom-1.0.0
    Parsing documentation for berkshelf-api-client-1.2.1
    Installing ri documentation for berkshelf-api-client-1.2.1
    Parsing documentation for berkshelf-3.2.3
    Installing ri documentation for berkshelf-3.2.3
    Done installing documentation for nio4r, celluloid-io, addressable, multipart-post, faraday, sawyer, octokit, dep-selector-libgecode, dep_selector, semverse, solve, retryable, net-http-persistent, mixlib-log, mixlib-authentication, hashie, buff-ruby_engine, buff-shell_out, buff-ignore, buff-extensions, varia_model, buff-config, ridley, minitar, cleanroom, berkshelf-api-client, berkshelf after 17 seconds
    27 gems installed
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Two way to create chef cookbooks]]></title>
    <link href="http://www.ahwkong.com/post/2015/02/14/two-way-to-create-chef-cookbooks/"/>
    <updated>2015-02-14T01:49:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2015/02/14/two-way-to-create-chef-cookbooks</id>
    <content type="html"><![CDATA[<p>lets say we want to create a cookbook called <code>example</code></p>

<p>Method 1)</p>

<pre><code> chef generate cookbook example
</code></pre>

<p>Method 2)</p>

<pre><code>chef generate file example
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[generate public key fingerprint]]></title>
    <link href="http://www.ahwkong.com/post/2015/02/14/generate-public-key-fingerprint/"/>
    <updated>2015-02-14T01:28:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2015/02/14/generate-public-key-fingerprint</id>
    <content type="html"><![CDATA[<p>This is the command:</p>

<pre><code>ssh-keygen -lf /path/to/ssh/public_key
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ssh forwarding in vagrant and private github repository]]></title>
    <link href="http://www.ahwkong.com/post/2015/02/13/ssh-forwarding/"/>
    <updated>2015-02-13T16:23:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2015/02/13/ssh-forwarding</id>
    <content type="html"><![CDATA[<p>It is how to checkout git private repository from within a VM without leaving a key in the VM</p>

<p>First in host OS (Mac OSX in my case), run</p>

<pre><code>ssd-add /path/to/githubkey
</code></pre>

<p>In the <code>.ssh/config</code>, add these lines:</p>

<pre><code>    Host           github
    HostName       github.com
    IdentityFile   /path/to/githubkey
</code></pre>

<p>Then enable port forwarding in vagrant VM</p>

<pre><code>Vagrant.configure("2") do |config|
  config.ssh.forward_agent = true
</code></pre>

<p>After you have run <code>vagrant up</code>, you can test the connection in the VM by running</p>

<pre><code>ssh -T git@github.com
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[nosetests --failed keeps picking up removed test]]></title>
    <link href="http://www.ahwkong.com/post/2015/02/13/nosetests-failed-keeps-picking-up-removed-test/"/>
    <updated>2015-02-13T11:38:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2015/02/13/nosetests-failed-keeps-picking-up-removed-test</id>
    <content type="html"><![CDATA[<p>When I run</p>

<pre><code>nosetests -v --failed
</code></pre>

<p>I keep getting this exception:</p>

<pre><code>    #40 Failure: ImportError (No module named test_share_link2) ... ERROR

    ======================================================================
    ERROR: Failure: ImportError (No module named test_share_link2)
    ----------------------------------------------------------------------
    Traceback (most recent call last):
      File "/Users/antkong/dev/project/project-ve/lib/python2.7/site-packages/nose/loader.py", line 414, in loadTestsFromName
        addr.filename, addr.module)
      File "/Users/antkong/dev/project/project-ve/lib/python2.7/site-packages/nose/importer.py", line 47, in importFromPath
        return self.importFromDir(dir_path, fqname)
      File "/Users/antkong/dev/project/project-ve/lib/python2.7/site-packages/nose/importer.py", line 79, in importFromDir
        fh, filename, desc = find_module(part, path)
    ImportError: No module named test_share_link2
</code></pre>

<p>But I have already removed this test including both py and pyc files. Why nosetests keeps picking up this test?</p>

<p>It turns out I need to remove the <code>.noseids</code> file. It contains a stale reference to the removed file</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Providing mysqld password to chef provisioner in vagrant]]></title>
    <link href="http://www.ahwkong.com/post/2015/02/11/mysqld-password-and-chef/"/>
    <updated>2015-02-11T05:04:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2015/02/11/mysqld-password-and-chef</id>
    <content type="html"><![CDATA[<p>I add a chef <code>mysqld</code> receipt to the Vagrant file and here is the error from <code>vagrant up</code>:</p>

<pre><code>    ==&gt; default: Required argument password is missing!
    ==&gt; default:
    ==&gt; default: Cookbook Trace:
    ==&gt; default: ---------------
    ==&gt; default:   /tmp/vagrant-chef/3aa2e36871bb373e4212367ce1b7d9af/cookbooks/mysqld/recipes/configure.rb:26:in `block in from_file'
    ==&gt; default:   /tmp/vagrant-chef/3aa2e36871bb373e4212367ce1b7d9af/cookbooks/mysqld/recipes/configure.rb:25:in `from_file'
    ==&gt; default:   /tmp/vagrant-chef/3aa2e36871bb373e4212367ce1b7d9af/cookbooks/mysqld/recipes/default.rb:22:in `from_file'
    ==&gt; default:
    ==&gt; default: Relevant File Content:
    ==&gt; default: ----------------------
    ==&gt; default: /tmp/vagrant-chef/3aa2e36871bb373e4212367ce1b7d9af/cookbooks/mysqld/recipes/configure.rb:
    ==&gt; default:
    ==&gt; default:  19:  #
    ==&gt; default:  20:
    ==&gt; default:
    ==&gt; default:  21:  # Configure mysql/mariadb according to attributes
    ==&gt; default:  22:  mysqld 'default'
    ==&gt; default:  23:
    ==&gt; default:  24:  # Set password according to attribute, if set
    ==&gt; default:  25:  mysqld_password 'root' do
    ==&gt; default:  26&gt;&gt;   password node['mysqld']['root_password']
    ==&gt; default:
    ==&gt; default:  27:    only_if { node['mysqld']['root_password'] }
    ==&gt; default:  28:  end
    ==&gt; default:  29:
</code></pre>

<p>Solution: Add this to set the <code>root_password</code>:</p>

<pre><code>chef.json = {
  :mysqld   =&gt; {
    :root_password =&gt; "test"
  }
}
</code></pre>

<p>Now you can connect to the mysql server by running</p>

<pre><code> mysql -u root -p 
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cannot find a resource matching ruby_block[sensu_service_trigger]]]></title>
    <link href="http://www.ahwkong.com/post/2015/02/08/cannot-find-a-resource-matching-ruby-block-sensu-service-trigger/"/>
    <updated>2015-02-08T18:26:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2015/02/08/cannot-find-a-resource-matching-ruby-block-sensu-service-trigger</id>
    <content type="html"><![CDATA[<p>This the error message:</p>

<pre><code>    ==&gt; default: ================================================================================
    ==&gt; default: Error executing action `enable` on resource 'sensu_service[sensu-client]'
    ==&gt; default: ================================================================================
    ==&gt; default:
    ==&gt; default: Chef::Exceptions::ResourceNotFound
    ==&gt; default: ----------------------------------
    ==&gt; default: Cannot find a resource matching ruby_block[sensu_service_trigger] (did you define it first?)
    ==&gt; default:
    ==&gt; default: Cookbook Trace:
    ==&gt; default: ---------------
    ==&gt; default: /tmp/vagrant-chef/c66d06dac7e6e1e4d559122d4d1a9f5c/cookbooks/sensu/providers/service.rb:52:in `block in load_current_resource'
</code></pre>

<p>It is because I did not include the <code>sensu::default</code> cookbook.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[brew and cast]]></title>
    <link href="http://www.ahwkong.com/post/2015/02/08/brew-and-cast/"/>
    <updated>2015-02-08T10:58:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2015/02/08/brew-and-cast</id>
    <content type="html"><![CDATA[<p>Reinstalling cask on another mac. Thought it is the command to install <code>cask</code> brew subcommand:</p>

<pre><code>brew install cask
</code></pre>

<p>Wrong! This <code>cask</code> is actually an emacs package manager.</p>

<p>To install <code>brew cask</code>, it is the command:</p>

<pre><code>brew tap caskroom/cask
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ochiwa unable to connect to sensu]]></title>
    <link href="http://www.ahwkong.com/post/2015/02/06/ochiwa-unable-to-connect-to-sensu/"/>
    <updated>2015-02-06T05:13:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2015/02/06/ochiwa-unable-to-connect-to-sensu</id>
    <content type="html"><![CDATA[<p>I used chef to install sensu and ochiwa.</p>

<p>In the ocihwa log I see a lot of &lsquo;connection refused&rsquo; error</p>

<pre><code>{"Date":"2015-02-05T09:42:23.516606749Z","Level":"warning","Src":{"Func":"github.com/sensu/uchiwa/uchiwa.Build","Line":49},"Output":"API call to \"http://127.0.0.1:4567/stashes\" returned: Get http://127.0.0.1:4567/stashes: dial tcp 127.0.0.1:4567: connection refused"}
</code></pre>

<p>With help from sensu irc chatroom, I checked</p>

<pre><code>netstat -anp | grep 4567
</code></pre>

<p>There is no process.</p>

<pre><code>service sensu-api status
</code></pre>

<p>The service is stopped.</p>

<p>After starting the service, ochiwa can talk to sensu server now.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mandrill is sending me a strange template name]]></title>
    <link href="http://www.ahwkong.com/post/2015/02/05/mandrill-is-sending-me-a-strange-name/"/>
    <updated>2015-02-05T13:11:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2015/02/05/mandrill-is-sending-me-a-strange-name</id>
    <content type="html"><![CDATA[<p>I have originally created a template <code>hello_world</code>. Then I renamed it to <code>sayhi</code>. Somehow the <code>Template Slug</code> stays as <code>hello-world</code>: in the webhook payload the template name carries <code>hello-world</code> instead of the new name <code>sayhi</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Authenticate Mandrill Webhook Call in Python]]></title>
    <link href="http://www.ahwkong.com/post/2015/02/04/authenticate-mandrill-webhook-call/"/>
    <updated>2015-02-04T19:58:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2015/02/04/authenticate-mandrill-webhook-call</id>
    <content type="html"><![CDATA[<p>There are plenty of examples in php out there, but I cannot find any in python. I reckon I can share my implementation here.</p>

<p>It is assuming you are using Google App Engine</p>

<pre><code>    import webapp2
    import hashlib
    import hmac

    class MandrillWebhookHandler(webapp2.RequestHandler):

        def _calc_signature(self, raw, key):
            hashed = hmac.new(key, raw, hashlib.sha1)
            return hashed.digest().encode("base64").rstrip('\n')

        def verify_mandrill_signature(self):
            '''
            Mandrill includes an additional HTTP header with webhook POST requests,
                X-Mandrill-Signature, which will contain the signature for the request.
                To verify a webhook request, generate a signature using the same key
                that Mandrill uses and compare that to the value of the
                X-Mandrill-Signature header.
            :return: True if verified valid
            '''
            mandrill_signature = self.request.headers['X-Mandrill-Signature']
            mandrill_key = 'Your mandrill webhook key goes here'
            signed_data = self.request.path_url
            sorted_key = sorted(self.request.arguments())
            for k in sorted_key:
                signed_data += k
                signed_data += self.request.get(k)
            expected_signature = self._calc_signature(signed_data, mandrill_key)
            return expected_signature == mandrill_signature

        def head(self):
            '''
            Must return 200 so Mandrill knows it is a valid webhook

            http://help.mandrill.com/entries/22024856-Why-can-t-my-webhook-or-inbound-route-URL-be-verified-
            '''
            self.response.set_status(OK)

        def post(self):
            '''
            Mandrill sends data to our webhook by post
            '''
            if not self.verify_mandrill_signature():
                # check failed
                self.abort()

            # The rest of processing
            # ...
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Search for javascript code in development console in chrome]]></title>
    <link href="http://www.ahwkong.com/post/2015/02/04/search-for-code-in-dev-console-in-chrome/"/>
    <updated>2015-02-04T14:32:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2015/02/04/search-for-code-in-dev-console-in-chrome</id>
    <content type="html"><![CDATA[<p>In OS X, do <code>cmd</code> + <code>Opt</code> + <code>F</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Update ChefDK in OSX]]></title>
    <link href="http://www.ahwkong.com/post/2015/02/04/update-chefdk-in-osx/"/>
    <updated>2015-02-04T09:08:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2015/02/04/update-chefdk-in-osx</id>
    <content type="html"><![CDATA[<p>A new version of ChefDK 0.4.0 has been released. I did an upgrade via <code>brew cask</code></p>

<pre><code>    $ brew update
    ...
    $ brew cask install --force chefdk
    ==&gt; Downloading https://opscode-omnibus-packages.s3.amazonaws.com/mac_os_x/10.8/x86_64/chefdk-0.4.0-1.dmg
    ######################################################################## 100.0%
    ==&gt; Running installer for chefdk; your password may be necessary.
    ==&gt; Package installers may write to any location; options such as --appdir are ignored.
    Password:
    ==&gt; installer: Package name is Chef Development Kit
    ==&gt; installer: Upgrading at base path /
    ==&gt; installer: The upgrade was successful.
    🍺  chefdk staged at '/opt/homebrew-cask/Caskroom/chefdk/0.4.0-1' (6 files, 99M)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[a little gotcha with @patch]]></title>
    <link href="http://www.ahwkong.com/post/2015/02/02/a-little-catch-with-at-patch/"/>
    <updated>2015-02-02T16:34:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2015/02/02/a-little-catch-with-at-patch</id>
    <content type="html"><![CDATA[<p>This is my code</p>

<pre><code>from mail_api import send_mail

def my_func():
    # do some work
    send_mail(to="test@example.com", content="data)
    # do some more work
    return result
</code></pre>

<p>Here is my unit test. I want to test for the return value but I do not want to send out any email at all from the unit test. That&rsquo;s why I patch the <code>send_mail</code> function.</p>

<pre><code>from mock import patch

  class MyTest(unittest.TestCase):

    @patch('mail_api.send_mail')
    def test_my_func(self, send_mail):
      self.assertEquals(my_func(), expected_result)
</code></pre>

<p>To my surprise an email is still sent out when the test is run!</p>

<p>It turns out <code>my_func</code> still retains a reference to the original <code>send_mail</code> function. If I want to successfully patch the mail api, I need to rewrite <code>my_func</code> like this:</p>

<pre><code>import mail_api

def my_func():
    # do some work
    mail_api.send_mail(to="test@example.com", content="data)
    # do some more work
    return result
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[chef, brekshelf and data bag]]></title>
    <link href="http://www.ahwkong.com/post/2015/01/20/chef/"/>
    <updated>2015-01-20T14:41:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2015/01/20/chef</id>
    <content type="html"><![CDATA[<p>After some trial and errors, the best way (as of this writing) to manage cookbooks for <strong>vagrant</strong> + <strong>chef</strong> is to use brekshef. You can forget about <code>knife</code> or <code>librarian-chef</code>.</p>

<p>If you use berkshelf with vagrant, you will need to install the vagrant-berkshelf plugin. The plugin is quite clever and you do not need to specify the cookbook path for your chef-solo or chef-zero provisioner.</p>

<p>However it does not apply to <code>data_bags</code>. You will still need to specify the path to <code>data_bags</code> if you need to use data bag.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[best way to install chefdk on OSX]]></title>
    <link href="http://www.ahwkong.com/post/2015/01/19/best-way-to-install-chefdk/"/>
    <updated>2015-01-19T15:12:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2015/01/19/best-way-to-install-chefdk</id>
    <content type="html"><![CDATA[<p>The best way to install chefdk on OSX for me is to use <code>brew cask</code>:</p>

<pre><code>brew cask install chefdk 
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[basic rvm]]></title>
    <link href="http://www.ahwkong.com/post/2015/01/18/basic-rvm/"/>
    <updated>2015-01-18T15:53:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2015/01/18/basic-rvm</id>
    <content type="html"><![CDATA[<p>It is impossible not to learn <code>ruby</code> these days. It is used everywhere: ruby powers <code>octopress</code>, <code>chef</code> and many other popular software.</p>

<p>Here is some basic <code>rvm</code> command:</p>

<pre><code>$ rvm list

rvm rubies

   ruby-1.9.3-p484 [ x86_64 ]
   ruby-1.9.3-p551 [ x86_64 ]
=* ruby-2.2.0 [ x86_64 ]

# =&gt; - current
# =* - current &amp;&amp; default
#  * - default


$ rvm use 2.2.0
Using /Users/antkong/.rvm/gems/ruby-2.2.0

$ bundle install
bash: bundle: command not found

$ gem install bundle
Fetching: bundler-1.7.12.gem (100%)
Successfully installed bundler-1.7.12
Fetching: bundle-0.0.1.gem (100%)
Successfully installed bundle-0.0.1
Parsing documentation for bundler-1.7.12
Installing ri documentation for bundler-1.7.12
Parsing documentation for bundle-0.0.1
Installing ri documentation for bundle-0.0.1
Done installing documentation for bundler, bundle after 1 seconds
2 gems installed 
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[dict in coffeescript]]></title>
    <link href="http://www.ahwkong.com/post/2015/01/18/dict-in-coffeescript/"/>
    <updated>2015-01-18T14:50:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2015/01/18/dict-in-coffeescript</id>
    <content type="html"><![CDATA[<p>You can create a dictionary in coffeescript in several ways:</p>

<p>Probably the most elegant style</p>

<pre><code>    d = 
      b: 1
      c: 2
</code></pre>

<p>This also works</p>

<pre><code>    d = { b: 1, c: 2}
</code></pre>

<p>If you need to span multiple lines:</p>

<pre><code>    d = { b: 1 , \
      c: 2}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My attempt at toastmaster speech #2]]></title>
    <link href="http://www.ahwkong.com/post/2015/01/13/toastmaster-speech-2/"/>
    <updated>2015-01-13T04:33:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2015/01/13/toastmaster-speech-2</id>
    <content type="html"><![CDATA[<p>This is my second speech and I find that writing a speech is not a easy task. First of all it takes time to think of a right topic. Then it takes a lot of practices and effort to be able to give the speech without note. It definitely motivated me to look at memorisation techniques.</p>

<h1>The Speech</h1>

<p>You are alone, in the dark. It is coming. It is getting closer. You can almost smell it. You are tired, you are exhausted. You are making a last ditch effort in last 12 hours non-stop. You are anxious because you are not sure if everything gonna turn out as planned. Your enemy is invisible yet its feels so real. I am talking about one of the worst enemies in our work lives: meeting the Deadline!</p>

<p>Does this feeling sound familiar to you? Raise your hand if you had this experience before!</p>

<p>Deadline is called deadline for good reasons. The time is set in stone. The consequence of failure is real. If your project misses the deadline, it could mean a failure to meet your customer expectation. Your organisation can suffer from reputational damage and some heads gonna roll! It could well be yours.</p>

<p>Can we tame this monster?</p>

<p>There is a few things you can do to make it easier to meet the deadlines</p>

<p>First of all, understand the objective of your project! It sounds obvious but it is extremely important.</p>

<p>Imagine you are an explorer and is lost in jungle. You want to get out of it alive. It really does not matter if you know how to clear a path with your machete or how to swing from tree to tree like Tarzan. But if you are heading the wrong direction you will never get out!</p>

<p>Sometimes we are too obsessed with operational details, we forget to ask the big picture question: What do we want to achieve? What is the expected outcome? How will we measure success or failure? These are the questions that we have to ask. These are the questions that set the direction.</p>

<p>Next. Planning. To plan well means we need to identify constraints and limitations we will face in a project.</p>

<p>A typical project has a lot of internal and external dependencies. These dependencies can become constraints and, in some case, even a blocker.</p>

<p>Here is a typical example of a constraint: The new system is dependent on the implementation of a new feature by an external vendor. The vendor does not have the capability to deliver this new feature in your timeframe. So our capability to deliver is constrained by how well the vendor can meet our deadline.</p>

<p>Sometimes a constraint can become a blocker. Say your project requires a key piece of new software which can only be run on an latest version of an operating system. But your internal IT insists that you can only use an older version because of policy.  How are you going to resolve it?</p>

<p>It is important to map out all the potential blockers on the critical path. The failure to do so can bring u unpleasant surprise.</p>

<p>3 Use milestones</p>

<p>Milestone is a technique to break a project down into smaller module. They are good checkpoints for monitoring the health of a project. Once you hit a milestone, it is a good time to pause and check if the original estimate is good, reexamine all the assumption, dependencies and constraints you have identified.</p>

<p>4 Set buffer.</p>

<p>What is buffer? Buffer basically means extra time and resources to prepare for the unexpected. Life is full of unexpected event. Your software vendor may suddenly goes of business; your key employee may become ill and cannot report to work for a while; A sudden change in market condition forces you make some last minute revision… All of these will add pressure on your already tight schedule. If you have not budgeted for these risks in a project, you will be likely end up in a position that you have to scramble to find extra resource and, more often than not, put extra pressure on an already stressed out team.</p>

<p>Burning midnight oil to meet deasline is not a fun experience. Keeping a good and even pace at work is key to avoid burnout. Therefore let me rehash the main points:</p>

<p>Understand the objective; know where you are going
Have a clear idea of the constraints and the limits &ndash; it can only done well if you understand your task or product well
Break a project into modules and assign milestones. Each milestone is a checkpoint to review the past performance and adjust the plan and direction.</p>

<p>With these technique you will be able to defeat this monster known as Deadline. After all we work to live, not live to work!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[dictionary in swift]]></title>
    <link href="http://www.ahwkong.com/post/2014/11/06/dictionary-in-swift/"/>
    <updated>2014-11-06T11:03:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/11/06/dictionary-in-swift</id>
    <content type="html"><![CDATA[<p>Dictionary look returns an Optional type by default</p>

<pre><code>    var dict = ["name":"hello"]

    println(dict["name"])         # "Optional("hello")

    println(dict["name"]!)        # "hello"
</code></pre>
]]></content>
  </entry>
  
</feed>
