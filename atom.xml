<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Timeline]]></title>
  <link href="http://kongakong.github.io/atom.xml" rel="self"/>
  <link href="http://kongakong.github.io/"/>
  <updated>2013-07-22T21:27:50+10:00</updated>
  <id>http://kongakong.github.io/</id>
  <author>
    <name><![CDATA[Anthony Kong]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[MFA]]></title>
    <link href="http://kongakong.github.io/post/2013/07/17/mfa/"/>
    <updated>2013-07-17T08:31:00+10:00</updated>
    <id>http://kongakong.github.io/post/2013/07/17/mfa</id>
    <content type="html"><![CDATA[<p>You can simply refer a Module/Function/Argument tuple as <strong>MFA</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[global:send_message]]></title>
    <link href="http://kongakong.github.io/post/2013/07/17/global-send-message/"/>
    <updated>2013-07-17T08:31:00+10:00</updated>
    <id>http://kongakong.github.io/post/2013/07/17/global-send-message</id>
    <content type="html"><![CDATA[<p><code>!</code> (&lsquo;bang&rsquo;) should not be used to call a globally registered name. Instead, you should use <code>global:send</code></p>

<p>A bit disappointed when I first learn about this: didn&rsquo;t I come to erlang for the bang operator? Now you take it away from me, <code>global</code> module.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pong and pang in erlang]]></title>
    <link href="http://kongakong.github.io/post/2013/07/16/erlang-and-pang/"/>
    <updated>2013-07-16T08:00:00+10:00</updated>
    <id>http://kongakong.github.io/post/2013/07/16/erlang-and-pang</id>
    <content type="html"><![CDATA[<p>I know it is quite clever to use &lsquo;pang&rsquo; to indciate the process does not exist. However both responses (&lsquo;pong&rsquo; and &lsquo;pang&rsquo;) just look too similar to each other if the terminal app uses a certain kind of font. Don&rsquo;t think i would enjoy it under stress in an operation/support situation.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="o">&gt;</span> <span class="nn">net_adm</span><span class="p">:</span><span class="nf">ping</span><span class="p">(</span><span class="n">exist</span><span class="p">@</span><span class="n">server</span><span class="p">).</span>
</span><span class='line'><span class="n">pong</span>
</span><span class='line'><span class="o">&gt;</span> <span class="nn">net_adm</span><span class="p">:</span><span class="nf">ping</span><span class="p">(</span><span class="n">notexist</span><span class="p">@</span><span class="n">server</span><span class="p">).</span>
</span><span class='line'><span class="n">pang</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A useful Sybase tool]]></title>
    <link href="http://kongakong.github.io/post/2013/07/15/a-useful-sybase-tool/"/>
    <updated>2013-07-15T23:08:00+10:00</updated>
    <id>http://kongakong.github.io/post/2013/07/15/a-useful-sybase-tool</id>
    <content type="html"><![CDATA[<p><code>defncopy</code> is possibly the best way to retrieve a script of any Sybase database objects if you do not have access to a decent database development tools such as <a href="http://www.aquafold.com/aquadatastudio.html">Aqua Data Studio</a></p>

<p>This utility comes with Sybase distribution. Here is its usage:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ defncopy
</span><span class='line'> 
</span><span class='line'>defncopy Syntax Error
</span><span class='line'>Usage: defncopy
</span><span class='line'>    [-v]
</span><span class='line'>    [-W]
</span><span class='line'>    [-X]
</span><span class='line'>    [-a &lt;display_charset&gt;]
</span><span class='line'>    [-I &lt;interfaces_file&gt;]
</span><span class='line'>    [-J [&lt;client_charset&gt;]]
</span><span class='line'>    [-K &lt;keytab_file&gt;]
</span><span class='line'>    [-P &lt;password&gt;]
</span><span class='line'>    [-R &lt;remote_server_principal&gt;]
</span><span class='line'>    [-S [&lt;server_name&gt;]]
</span><span class='line'>    [-U &lt;user_name&gt;]
</span><span class='line'>    [-V &lt;security_options&gt;]
</span><span class='line'>    [-Z &lt;security_mechanism&gt;]
</span><span class='line'>    [-z &lt;language&gt;]
</span><span class='line'>    { in &lt;file_name&gt; &lt;database_name&gt; |
</span><span class='line'>      out &lt;file_name&gt; &lt;database_name&gt; [&lt;owner&gt;.]&lt;object_name&gt;
</span><span class='line'>          [[&lt;owner&gt;.]&lt;object_name&gt;...] }
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[More blog maintenance]]></title>
    <link href="http://kongakong.github.io/post/2013/07/12/more-blog-maintenance/"/>
    <updated>2013-07-12T20:50:00+10:00</updated>
    <id>http://kongakong.github.io/post/2013/07/12/more-blog-maintenance</id>
    <content type="html"><![CDATA[<p>Found some good resource&hellip;</p>

<p><a href="http://miguelcamba.com/blog/2013/04/22/tweak-and-improve-your-new-octopress-blog/">http://miguelcamba.com/blog/2013/04/22/tweak-and-improve-your-new-octopress-blog/</a></p>

<p><a href="http://blog.jphpsf.com/2012/06/12/squeezing-octopress-for-faster-load-times">http://blog.jphpsf.com/2012/06/12/squeezing-octopress-for-faster-load-times</a></p>

<p><a href="http://decodize.com/html/moving-from-wordpress-to-octopress/">http://decodize.com/html/moving-from-wordpress-to-octopress/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Switch and enum in Objective-c]]></title>
    <link href="http://kongakong.github.io/post/2013/07/08/switch-and-enum-in-objective-c/"/>
    <updated>2013-07-08T21:30:00+10:00</updated>
    <id>http://kongakong.github.io/post/2013/07/08/switch-and-enum-in-objective-c</id>
    <content type="html"><![CDATA[<blockquote><p>Do not implement a default case in switch statements that handle enumerated types. This helps if you add to the enumeration, because the compiler will warn that the switch does not handle all the values.</p></blockquote>

<p>from <a href="http://www.informit.com/articles/article.aspx?p=2080040&amp;seqNum=5">Matt Galloway</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby quirk?]]></title>
    <link href="http://kongakong.github.io/post/2013/07/06/ruby-quirk/"/>
    <updated>2013-07-06T08:06:00+10:00</updated>
    <id>http://kongakong.github.io/post/2013/07/06/ruby-quirk</id>
    <content type="html"><![CDATA[<p>Have absolutely zero knowledge of Ruby, although I am planning to learn more about this langauge since I started using Octopress.</p>

<p>Came across this code snippet in <a href="https://twitter.com/garybernhardt/status/352864696547803136">this tweet</a></p>

<p>The behavior does look a bit odd from a python prespective.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">mbp002</span><span class="p">:</span><span class="o">~</span> <span class="n">me</span><span class="err">$</span> <span class="n">irb</span>
</span><span class='line'><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="n">p195</span> <span class="p">:</span><span class="mo">001</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">,</span><span class="mi">2</span>
</span><span class='line'><span class="ss">SyntaxError</span><span class="p">:</span> <span class="p">(</span><span class="n">irb</span><span class="p">):</span><span class="mi">1</span><span class="p">:</span> <span class="n">syntax</span> <span class="n">error</span><span class="p">,</span> <span class="n">unexpected</span> <span class="s1">&#39;,&#39;</span><span class="p">,</span> <span class="n">expecting</span> <span class="k">end</span><span class="o">-</span><span class="n">of</span><span class="o">-</span><span class="n">input</span>
</span><span class='line'>    <span class="n">from</span> <span class="sr">/Users/me</span><span class="o">/.</span><span class="n">rvm</span><span class="o">/</span><span class="n">rubies</span><span class="o">/</span><span class="n">ruby</span><span class="o">-</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">-</span><span class="n">p195</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="ss">irb</span><span class="p">:</span><span class="mi">16</span><span class="ss">:in</span> <span class="sb">`&lt;main&gt;&#39;</span>
</span><span class='line'><span class="sb">2.0.0p195 :003 &gt; x=1,y=2</span>
</span><span class='line'><span class="sb"> =&gt; [1, 2] </span>
</span><span class='line'><span class="sb">2.0.0p195 :004 &gt; x</span>
</span><span class='line'><span class="sb"> =&gt; [1, 2] </span>
</span><span class='line'><span class="sb">2.0.0p195 :005 &gt; y</span>
</span><span class='line'><span class="sb"> =&gt; 2 </span>
</span></code></pre></td></tr></table></div></figure>


<p>Apparently it is treated like</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&gt;&gt;</span> <span class="n">x</span> <span class="o">=</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="p">(</span><span class="n">y</span> <span class="o">=</span> <span class="mi">2</span><span class="p">)</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Simple script to convert Blogger posts to Github pages]]></title>
    <link href="http://kongakong.github.io/post/2013/07/03/simple-script-to-convert-blogger-posts-to-github-pages/"/>
    <updated>2013-07-03T00:32:00+10:00</updated>
    <id>http://kongakong.github.io/post/2013/07/03/simple-script-to-convert-blogger-posts-to-github-pages</id>
    <content type="html"><![CDATA[<p>I wanted to convert my old blogs on Blogger to markdown files in Github Pages. I went to the Blogger settings and exported my blog. The result was a xml file. The xml file from Google is not easy to parse. As far as I know there is no documentation on the structure of the xml file.</p>

<p>After some trial and error, I have come up with this script that can parse the xml file and emit the contents in a set of markdown files:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">xml.dom.minidom</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">xml.dom</span> <span class="kn">import</span> <span class="n">Node</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">re</span>
</span><span class='line'>
</span><span class='line'><span class="n">list_text</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">handle_node</span><span class="p">(</span><span class="n">feeds</span><span class="p">):</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">f</span> <span class="ow">in</span> <span class="n">feeds</span><span class="p">:</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">sf</span> <span class="ow">in</span> <span class="n">f</span><span class="o">.</span><span class="n">childNodes</span><span class="p">:</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">sf</span><span class="o">.</span><span class="n">nodeType</span> <span class="o">==</span> <span class="n">Node</span><span class="o">.</span><span class="n">ELEMENT_NODE</span><span class="p">:</span>
</span><span class='line'>                <span class="n">handle_node</span><span class="p">(</span><span class="n">sf</span><span class="o">.</span><span class="n">childNodes</span><span class="p">)</span>
</span><span class='line'>            <span class="k">elif</span> <span class="n">sf</span><span class="o">.</span><span class="n">nodeType</span> <span class="o">==</span> <span class="n">Node</span><span class="o">.</span><span class="n">TEXT_NODE</span><span class="p">:</span>
</span><span class='line'>                <span class="n">list_text</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="n">sf</span><span class="o">.</span><span class="n">parentNode</span><span class="o">.</span><span class="n">nodeName</span><span class="p">,</span> <span class="n">sf</span><span class="o">.</span><span class="n">data</span><span class="p">))</span>
</span><span class='line'>                <span class="n">handle_node</span><span class="p">(</span><span class="n">sf</span><span class="o">.</span><span class="n">childNodes</span><span class="p">)</span>
</span><span class='line'>            <span class="k">else</span><span class="p">:</span>
</span><span class='line'>                <span class="n">handle_node</span><span class="p">(</span><span class="n">sf</span><span class="o">.</span><span class="n">childNodes</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">TMPL</span><span class="o">=</span><span class="s">&quot;&quot;&quot;---</span>
</span><span class='line'><span class="s">layout: post</span>
</span><span class='line'><span class="s">title: </span><span class="si">%(title)s</span><span class="s"></span>
</span><span class='line'><span class="s">date:  </span><span class="si">%(date)s</span><span class="s"></span>
</span><span class='line'><span class="s">comments: true</span>
</span><span class='line'><span class="s">categories:</span>
</span><span class='line'><span class="s">meta: </span>
</span><span class='line'><span class="s">---</span>
</span><span class='line'><span class="s">&quot;&quot;&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">gen_post</span><span class="p">(</span><span class="n">list_of_post</span><span class="p">):</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">post</span> <span class="ow">in</span> <span class="n">list_of_post</span><span class="p">:</span>
</span><span class='line'>        <span class="n">post_id</span> <span class="o">=</span> <span class="n">post</span><span class="p">[</span><span class="s">&#39;id&#39;</span><span class="p">]</span>
</span><span class='line'>        <span class="n">m</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="s">&quot;.*tag:blogger.com.*blog-\d*.settings.*&quot;</span><span class="p">,</span> <span class="n">post_id</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">m</span><span class="p">:</span>
</span><span class='line'>            <span class="k">continue</span> <span class="c"># do not process</span>
</span><span class='line'>        <span class="n">m</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="s">&quot;.*tag:blogger.com.*blog-\d*.layout.*&quot;</span><span class="p">,</span> <span class="n">post_id</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">m</span><span class="p">:</span>
</span><span class='line'>            <span class="k">continue</span> <span class="c"># do not process</span>
</span><span class='line'>        <span class="n">pd</span> <span class="o">=</span> <span class="n">post</span><span class="p">[</span><span class="s">&#39;published&#39;</span><span class="p">]</span>
</span><span class='line'>        <span class="n">pdd</span> <span class="o">=</span> <span class="n">pd</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">10</span><span class="p">]</span>
</span><span class='line'>        <span class="n">pdt</span> <span class="o">=</span> <span class="n">pd</span><span class="p">[</span><span class="mi">11</span><span class="p">:</span><span class="mi">16</span><span class="p">]</span>
</span><span class='line'>        <span class="n">fn</span> <span class="o">=</span> <span class="n">post</span><span class="p">[</span><span class="s">&#39;id&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&quot;-&quot;</span><span class="p">)[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'>        <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">pdd</span> <span class="o">+</span> <span class="s">&quot;-&quot;</span> <span class="o">+</span> <span class="n">fn</span> <span class="o">+</span><span class="s">&quot;.markdown&quot;</span><span class="p">,</span> <span class="s">&quot;w&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="n">f</span><span class="o">.</span><span class="n">write</span> <span class="p">(</span><span class="n">TMPL</span> <span class="o">%</span> <span class="p">{</span><span class="s">&#39;title&#39;</span><span class="p">:</span><span class="n">post</span><span class="p">[</span><span class="s">&#39;title&#39;</span><span class="p">],</span> <span class="s">&#39;date&#39;</span><span class="p">:</span><span class="n">pdd</span> <span class="o">+</span> <span class="s">&quot; &quot;</span> <span class="o">+</span> <span class="n">pdt</span><span class="p">,</span> <span class="s">&#39;id&#39;</span><span class="p">:</span><span class="n">post</span><span class="p">[</span><span class="s">&#39;id&#39;</span><span class="p">]})</span>
</span><span class='line'>        <span class="k">try</span><span class="p">:</span>
</span><span class='line'>            <span class="n">f</span><span class="o">.</span><span class="n">write</span> <span class="p">(</span><span class="n">post</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;content&#39;</span><span class="p">,</span> <span class="s">&#39;&#39;</span><span class="p">))</span>
</span><span class='line'>        <span class="k">except</span><span class="p">:</span>
</span><span class='line'>            <span class="k">print</span><span class="p">(</span><span class="s">&quot;error with </span><span class="si">%s</span><span class="s">, </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">post</span><span class="p">[</span><span class="s">&#39;title&#39;</span><span class="p">],</span> <span class="n">fn</span><span class="p">))</span>
</span><span class='line'>        <span class="n">f</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">parse_xml</span><span class="p">():</span>
</span><span class='line'>    <span class="n">ifile</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">&#39;blog-06-26-2013.xml&#39;</span><span class="p">)</span> <span class="c"># change input file here</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">dom</span> <span class="o">=</span> <span class="n">xml</span><span class="o">.</span><span class="n">dom</span><span class="o">.</span><span class="n">minidom</span><span class="o">.</span><span class="n">parseString</span><span class="p">(</span><span class="n">ifile</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">nodes</span> <span class="o">=</span> <span class="n">dom</span><span class="o">.</span><span class="n">childNodes</span>
</span><span class='line'>    <span class="n">handle_node</span><span class="p">(</span><span class="n">nodes</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">list_post</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>    <span class="n">last_id</span> <span class="o">=</span> <span class="bp">None</span>
</span><span class='line'>    <span class="n">tmp</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">list_text</span><span class="p">:</span>
</span><span class='line'>        <span class="c"># print &quot;[%s] &gt;\t %s&quot; % (k, v)</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">k</span> <span class="o">==</span> <span class="s">&#39;id&#39;</span><span class="p">:</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">last_id</span> <span class="ow">and</span> <span class="n">last_id</span> <span class="o">!=</span> <span class="n">v</span><span class="p">:</span>
</span><span class='line'>                <span class="n">list_post</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">tmp</span><span class="p">)</span>
</span><span class='line'>                <span class="n">tmp</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>            <span class="n">last_id</span> <span class="o">=</span> <span class="n">v</span>
</span><span class='line'>            <span class="n">tmp</span><span class="p">[</span><span class="s">&#39;id&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">v</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">k</span> <span class="o">==</span> <span class="s">&#39;updated&#39;</span><span class="p">:</span> <span class="n">tmp</span><span class="p">[</span><span class="s">&#39;updated&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">v</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">k</span> <span class="o">==</span> <span class="s">&#39;name&#39;</span><span class="p">:</span> <span class="n">tmp</span><span class="p">[</span><span class="s">&#39;name&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">v</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">k</span> <span class="o">==</span> <span class="s">&#39;title&#39;</span><span class="p">:</span> <span class="n">tmp</span><span class="p">[</span><span class="s">&#39;title&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">v</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">k</span> <span class="o">==</span> <span class="s">&#39;email&#39;</span><span class="p">:</span> <span class="n">tmp</span><span class="p">[</span><span class="s">&#39;email&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">v</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">k</span> <span class="o">==</span> <span class="s">&#39;content&#39;</span><span class="p">:</span> <span class="n">tmp</span><span class="p">[</span><span class="s">&#39;content&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">v</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">k</span> <span class="o">==</span> <span class="s">&#39;published&#39;</span><span class="p">:</span> <span class="n">tmp</span><span class="p">[</span><span class="s">&#39;published&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">v</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">list_post</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
</span><span class='line'>    <span class="n">posts</span> <span class="o">=</span> <span class="n">parse_xml</span><span class="p">()</span>
</span><span class='line'>    <span class="n">gen_post</span><span class="p">(</span><span class="n">posts</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&quot;__main__&quot;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">main</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>It is not very polished. For example, it will not capture the tags of a blog post. But it is good enough for my purpose.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[keep vi swp file in tmp]]></title>
    <link href="http://kongakong.github.io/post/2013/06/29/keep-vi-swp-file-in-tmp/"/>
    <updated>2013-06-29T21:02:00+10:00</updated>
    <id>http://kongakong.github.io/post/2013/06/29/keep-vi-swp-file-in-tmp</id>
    <content type="html"><![CDATA[<p><code>vi</code> is my editor of choice when I need to do some quick editing.</p>

<p>When vi edits a file, it will usally create a <code>swp</code> file for recovery purpose. Usually it causes no problem.</p>

<p>But apparently octopress does not work when there is temporry file in the <code>post</code> directory. Rake will emit</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake aborted!
</span><span class='line'>No such file or directory - public/_posts/.2013-06-29-example.markdown.swp</span></code></pre></td></tr></table></div></figure>


<p>and then bailed.</p>

<p>I added</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>set backupdir=~/tmp</span></code></pre></td></tr></table></div></figure>


<p>to my .vimrc. Hopefully it will prevent this problem from happening again.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Problem with shifting python code right in emacs]]></title>
    <link href="http://kongakong.github.io/post/2013/06/28/problem-with-shifting-python-code-right-in-emacs/"/>
    <updated>2013-06-28T00:27:00+10:00</updated>
    <id>http://kongakong.github.io/post/2013/06/28/problem-with-shifting-python-code-right-in-emacs</id>
    <content type="html"><![CDATA[<p>I am using Aquamacs Emacs which is built on emacs 23.3.50.1.</p>

<p>When I tried to indent a block of python code using the menu item &lsquo;Python&rsquo; &ndash;> &lsquo;Shift Region Right&rsquo;, I got this error message <code>Symbol's function defintion is void: py-shit-right</code></p>

<p>So instead of using the menu option, I just use <code>C-c &gt;</code> to take care of it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Good and Bad of Octopress]]></title>
    <link href="http://kongakong.github.io/post/2013/06/23/good-and-bad-of-octopress/"/>
    <updated>2013-06-23T16:53:00+10:00</updated>
    <id>http://kongakong.github.io/post/2013/06/23/good-and-bad-of-octopress</id>
    <content type="html"><![CDATA[<p>After used octopress for a couple of days seriously as a blogging platform, this is a list of good and bad I feel about the platform:</p>

<p>First a list of bad</p>

<p>1) It takes time to build and release changes. Whenever I release a new post, I need to regenerate the site (takes up to several minutes for about 850 posts at the time of writing) and then commit the changes to the github. And then there is usually some delay between the commit and the final appearance of the new post on the site.</p>

<p>2) With Octopress I will tend not to post spontaneously/impulsively as I was with Tumblr. It is because I will not be able to write and post with Octopress unless I am near my PC. Tumblr is, on the other hand, a web-based service and they have native apps on mobile platforms too. So I tend to post more on tumblr.</p>

<p>The goods:</p>

<p>1) The Octopress framework is very flexible. Anyone can write up any plugin in ruby to enhance the platform or add a new feature</p>

<p>2) I get to use my favorite editor <code>vim</code></p>

<p>3) Writing programming topic is painful in Tumblr. It is more enjoyable to do it in Octopress</p>

<p>4) I get to  keep my the primary material &ndash; All blog posts, theme customisation and pictures etc are created and verison-controlled on my PC in the first place.</p>

<p>5) Since it takes time to build and release the blog, the up-side is that I will post subjects that is worth writing about, instead of instagram-ish entries that are only there because it is convenient to pick a picture and post on a mobile phone.</p>

<p>What I need now is a decent way to spell-check in vim/emacs.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git status says file is modified even if...]]></title>
    <link href="http://kongakong.github.io/post/2013/06/22/git-status-says-file-is-modified-even-if-dot-dot-dot/"/>
    <updated>2013-06-22T16:27:00+10:00</updated>
    <id>http://kongakong.github.io/post/2013/06/22/git-status-says-file-is-modified-even-if-dot-dot-dot</id>
    <content type="html"><![CDATA[<p><code>git status</code> says file is modified even if the file content is not changed</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[dyld: library not loaded]]></title>
    <link href="http://kongakong.github.io/post/2013/06/22/dyld-library-not-loaded/"/>
    <updated>2013-06-22T15:55:00+10:00</updated>
    <id>http://kongakong.github.io/post/2013/06/22/dyld-library-not-loaded</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dyld: Library not loaded: @rpath/SenTestingKit.framework/Versions/A/SenTestingKit
</span><span class='line'>  Referenced from: /Users/antkong/Library/Developer/Xcode/DerivedData/ebookreader-gplhzhssjudwymcrqpmxxokvhqvn/Build/Products/Debug/ebookreader.app/Contents/MacOS/ebookreader
</span><span class='line'>  Reason: image not found</span></code></pre></td></tr></table></div></figure>


<p>Is it going to be <a href="http://lists.apple.com/archives/xcode-users/2008/May/msg00647.html">the answer</a>?</p>

<blockquote><p>I have found a fix by getting to know what @rpath means. It is a tag placed in the generation of an executable&rsquo;s binary format indicating alternate paths to look for dependencies (including other libraries). By setting the build option &ldquo;runpath search paths&rdquo; to the developer frameworks directory, the executable looks in this place for the sen testing library at run time.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to install beautifulsoup in python3]]></title>
    <link href="http://kongakong.github.io/post/2013/06/20/beautifulsoup4/"/>
    <updated>2013-06-20T08:14:00+10:00</updated>
    <id>http://kongakong.github.io/post/2013/06/20/beautifulsoup4</id>
    <content type="html"><![CDATA[<p>This will fail immediately</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>  /usr/local/bin/easy_install3 BeautifulSoup
</span></code></pre></td></tr></table></div></figure>


<p>with error message</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>  File <span class="s2">&quot;/usr/local/Cellar/python3/3.3.0/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/distribute-0.6.28-py3.3.egg/setuptools/sandbox.py&quot;</span>, line 33, in &lt;lambda&gt;
</span><span class='line'>    <span class="o">)</span>.read<span class="o">()</span>, <span class="s2">&quot;setup.py&quot;</span>, <span class="s1">&#39;exec&#39;</span><span class="o">)</span>,
</span><span class='line'>  File <span class="s2">&quot;setup.py&quot;</span>, line 22
</span><span class='line'>    print <span class="s2">&quot;Unit tests have failed!&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>This is the right way</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span> /usr/local/bin/pip3 install beautifulsoup4
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Octopress]]></title>
    <link href="http://kongakong.github.io/post/2013/06/19/using-octopress/"/>
    <updated>2013-06-19T06:09:00+10:00</updated>
    <id>http://kongakong.github.io/post/2013/06/19/using-octopress</id>
    <content type="html"><![CDATA[<p>Octopress really makes blogging on github easy.</p>

<p>I am happy with tumblr after these many years, but writing programming related topic is not really enjoyable due to lack of support of syntax highlight etc.</p>

<p>The markdown support in Octopress is very good</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Just installed RVM]]></title>
    <link href="http://kongakong.github.io/post/2013/06/12/p-52782958923/"/>
    <updated>2013-06-12T21:20:00+10:00</updated>
    <id>http://kongakong.github.io/post/2013/06/12/p-52782958923</id>
    <content type="html"><![CDATA[<p>Just installed RVM.</p>

<p>Message from RVM after installation:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>* To start using RVM you need to run `source /Users/antkong/.rvm/scripts/rvm`
</span><span class='line'>    in all your open shell windows, in rare cases you need to reopen all shell windows.</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Note to self]]></title>
    <link href="http://kongakong.github.io/post/2013/06/12/p-52781713139/"/>
    <updated>2013-06-12T20:40:00+10:00</updated>
    <id>http://kongakong.github.io/post/2013/06/12/p-52781713139</id>
    <content type="html"><![CDATA[<p><em>Note to self</em></p>

<p>iPhone sync backup can be found in this location:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>~Library/Application Support/MobileSync</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[In light of the NSA PRISM scandal, I recommend these two videos from ‘Conversation with History’ series:]]></title>
    <link href="http://kongakong.github.io/post/2013/06/10/p-52620998556/"/>
    <updated>2013-06-10T21:44:00+10:00</updated>
    <id>http://kongakong.github.io/post/2013/06/10/p-52620998556</id>
    <content type="html"><![CDATA[<p>In light of the NSA PRISM scandal, I recommend these two videos from ‘Conversation with History’ series:</p>

<p><a href="Interview%20with%20Glenn%20Greenwald">http://www.youtube.com/watch?v=-qlFjrgGqVA</a></p>

<p><a href="%E2%80%98Deep%20State%E2%80%99%20-%20Interview%20with%20Professor%20Peter%20Dale%20Scott">http://youtu.be/CBGgxU27kJA</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Weird error message of 'say' in 10.8.4]]></title>
    <link href="http://kongakong.github.io/post/2013/06/09/p-52534137425/"/>
    <updated>2013-06-09T20:40:00+10:00</updated>
    <id>http://kongakong.github.io/post/2013/06/09/p-52534137425</id>
    <content type="html"><![CDATA[<p>Weird error message of <code>say</code> in 10.8.4</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>MTBEAudioUnitSoundOutput::PropagateProperty Error -10851
</span><span class='line'>MTBEAudioUnitSoundOutput::PropagateProperty Error -10851</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OSX terminal and .bashrc]]></title>
    <link href="http://kongakong.github.io/post/2013/06/08/p-52453247211/"/>
    <updated>2013-06-08T21:20:00+10:00</updated>
    <id>http://kongakong.github.io/post/2013/06/08/p-52453247211</id>
    <content type="html"><![CDATA[<p>When I create a new tab in Terminal, the new bash shell does not automatically execute the .bashrc file. As a result my brew environmet is not setup propertly.</p>

<p>To solve it, I added this to my .bash_profile to fix the problem:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>[[ -s ~/.bashrc ]] && source ~/.bashrc
</span></code></pre></td></tr></table></div></figure>


<p><code>-s</code> here means if the file exists and not of size 0</p>
]]></content>
  </entry>
  
</feed>
