<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Timeline]]></title>
  <link href="http://www.ahwkong.com/atom.xml" rel="self"/>
  <link href="http://www.ahwkong.com/"/>
  <updated>2014-03-09T08:38:08+11:00</updated>
  <id>http://www.ahwkong.com/</id>
  <author>
    <name><![CDATA[Anthony Kong]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Current time in objective-c and python]]></title>
    <link href="http://www.ahwkong.com/post/2014/03/06/now-in-objective-c-and-python/"/>
    <updated>2014-03-06T18:49:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/03/06/now-in-objective-c-and-python</id>
    <content type="html"><![CDATA[<p>To get the current time in python</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">datetime</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">()</span>
</span><span class='line'><span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="p">(</span><span class="mi">2014</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">18</span><span class="p">,</span> <span class="mi">51</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">321003</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>and in objective-c</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSDate</span><span class="o">*</span> <span class="n">date</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSDate</span> <span class="n">date</span><span class="p">];</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="n">date</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SpaceX and redundancy]]></title>
    <link href="http://www.ahwkong.com/post/2014/03/06/spacex-and-redundancy/"/>
    <updated>2014-03-06T07:51:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/03/06/spacex-and-redundancy</id>
    <content type="html"><![CDATA[<p><strong>Q:</strong> So, these flight computers on Dragon – there are three on board, and that&rsquo;s for redundancy?</p>

<p><strong>A:</strong> There are actually six computers. They operate in pairs, so there are three computer units, each of which have two computers checking on each other. The reason we have three is when operating in proximity of ISS, we have to always have two computer strings voting on something on critical actions. We have three so we can tolerate a failure and still have two voting on each other. And that has nothing to do with radiation, that has to do with ensuring that we&rsquo;re safe when we&rsquo;re flying our vehicle in the proximity of the space station.</p>

<p>I went into the lab earlier today, and we have 18 different processing units with computers in them. We have three main computers, but 18 units that have a computer of some kind, and all of them are triple computers – everything is three processors. So we have like 54 processors on the spacecraft. It&rsquo;s a highly distributed design and very fault-tolerant and very robust.</p>

<p><a href="http://www.aviationweek.com/Blogs.aspx?plckBlogId=Blog:04ce340e-4b63-4d23-9695-d49ab661f385&amp;plckPostId=Blog:04ce340e-4b63-4d23-9695-d49ab661f385Post:a8b87703-93f9-4cdf-885f-9429605e14df">Source</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[how to make a label recognise a tape]]></title>
    <link href="http://www.ahwkong.com/post/2014/03/06/how-to-make-a-label-recognise-a-tape/"/>
    <updated>2014-03-06T07:44:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/03/06/how-to-make-a-label-recognise-a-tape</id>
    <content type="html"><![CDATA[<p>Step 1) Need to implement a selector to handle the gesture recognizer&rsquo;s callback</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="nf">handleSingleTap:</span><span class="p">(</span><span class="n">UIGestureRecognizer</span> <span class="o">*</span><span class="p">)</span><span class="nv">gestureRecognizer</span>  <span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;handleSingleTap called&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Step 2) Create and assign a gesture recognizer to a UILabel</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>    <span class="n">UITapGestureRecognizer</span> <span class="o">*</span><span class="n">singleTap</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UITapGestureRecognizer</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithTarget:</span><span class="n">self</span> <span class="nl">action:</span><span class="k">@selector</span><span class="p">(</span><span class="nl">handleSingleTap:</span><span class="p">)];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">lblHour</span> <span class="nl">addGestureRecognizer:</span><span class="n">singleTap</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>Step 3) <strong>Important</strong> Must make sure <code>setUserInteractionEnabled</code> of the UILabel is set</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">lblHour</span> <span class="nl">setUserInteractionEnabled:</span><span class="n">YES</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[yield to maturity]]></title>
    <link href="http://www.ahwkong.com/post/2014/03/06/yield-to-maturity/"/>
    <updated>2014-03-06T07:13:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/03/06/yield-to-maturity</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[quick 32nd lookup]]></title>
    <link href="http://www.ahwkong.com/post/2014/03/05/quick-32nd-lookup/"/>
    <updated>2014-03-05T07:11:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/03/05/quick-32nd-lookup</id>
    <content type="html"><![CDATA[<table>
<thead>
<tr>
<th></th>
<th><strong>32nd</strong>  </th>
<th> <strong>Decimal</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> 1/32   </td>
<td>0.03125 </td>
</tr>
<tr>
<td></td>
<td> 2/32   </td>
<td>0.0625 </td>
</tr>
<tr>
<td></td>
<td> 3/32   </td>
<td>0.09375 </td>
</tr>
<tr>
<td></td>
<td> 4/32   </td>
<td>0.125 </td>
</tr>
<tr>
<td></td>
<td> 5/32   </td>
<td>0.15625 </td>
</tr>
<tr>
<td></td>
<td> 6/32   </td>
<td>0.1875 </td>
</tr>
<tr>
<td></td>
<td> 7/32   </td>
<td>0.21875 </td>
</tr>
<tr>
<td></td>
<td> 8/32   </td>
<td>0.25 </td>
</tr>
<tr>
<td></td>
<td> 9/32   </td>
<td>0.28125 </td>
</tr>
<tr>
<td></td>
<td> 10/32  </td>
<td>0.3125 </td>
</tr>
<tr>
<td></td>
<td> 11/32  </td>
<td>0.34375 </td>
</tr>
<tr>
<td></td>
<td> 12/32  </td>
<td>0.375 </td>
</tr>
<tr>
<td></td>
<td> 13/32  </td>
<td>0.40625 </td>
</tr>
<tr>
<td></td>
<td> 14/32  </td>
<td>0.4375 </td>
</tr>
<tr>
<td></td>
<td> 15/32  </td>
<td>0.46875 </td>
</tr>
<tr>
<td></td>
<td> 16/32  </td>
<td>0.5 </td>
</tr>
<tr>
<td></td>
<td> 17/32  </td>
<td>0.53125 </td>
</tr>
<tr>
<td></td>
<td> 18/32  </td>
<td>0.5625 </td>
</tr>
<tr>
<td></td>
<td> 19/32  </td>
<td>0.59375 </td>
</tr>
<tr>
<td></td>
<td> 20/32  </td>
<td>0.625 </td>
</tr>
<tr>
<td></td>
<td> 21/32  </td>
<td>0.65625 </td>
</tr>
<tr>
<td></td>
<td> 22/32  </td>
<td>0.6875 </td>
</tr>
<tr>
<td></td>
<td> 23/32  </td>
<td>0.71875 </td>
</tr>
<tr>
<td></td>
<td> 24/32  </td>
<td>0.75 </td>
</tr>
<tr>
<td></td>
<td> 25/32  </td>
<td>0.78125 </td>
</tr>
<tr>
<td></td>
<td> 26/32  </td>
<td>0.8125 </td>
</tr>
<tr>
<td></td>
<td> 27/32  </td>
<td>0.84375 </td>
</tr>
<tr>
<td></td>
<td> 28/32  </td>
<td>0.875 </td>
</tr>
<tr>
<td></td>
<td> 29/32  </td>
<td>0.90625 </td>
</tr>
<tr>
<td></td>
<td> 30/32  </td>
<td>0.9375 </td>
</tr>
<tr>
<td></td>
<td> 31/32  </td>
<td>0.96875 </td>
</tr>
<tr>
<td></td>
<td> 32/32  </td>
<td>1.0 </td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[missing curses library]]></title>
    <link href="http://www.ahwkong.com/post/2014/03/05/missing-curses-library/"/>
    <updated>2014-03-05T07:11:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/03/05/missing-curses-library</id>
    <content type="html"><![CDATA[

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install ncurses-dev
</span><span class='line'>Reading package lists... Done
</span><span class='line'>Building dependency tree       
</span><span class='line'>Reading state information... Done
</span><span class='line'>Note, selecting 'libncurses5-dev' instead of 'ncurses-dev'
</span><span class='line'>The following extra packages will be installed:
</span><span class='line'>  libtinfo-dev
</span><span class='line'>Suggested packages:
</span><span class='line'>  ncurses-doc
</span><span class='line'>The following NEW packages will be installed:
</span><span class='line'>  libncurses5-dev libtinfo-dev
</span><span class='line'>0 upgraded, 2 newly installed, 0 to remove and 107 not upgraded.
</span><span class='line'>Need to get 328 kB of archives.
</span><span class='line'>After this operation, 1,452 kB of additional disk space will be used.
</span><span class='line'>Do you want to continue [Y/n]?</span></code></pre></td></tr></table></div></figure>


<p>Other dependency</p>

<p>$ sudo apt-get install libssl-dev</p>

<p>jinterface     : No Java compiler found
odbc           : ODBC library &ndash; link check failed</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[x in y in c++]]></title>
    <link href="http://www.ahwkong.com/post/2014/03/04/x-in-y-in-c-plus-plus/"/>
    <updated>2014-03-04T08:23:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/03/04/x-in-y-in-c-plus-plus</id>
    <content type="html"><![CDATA[<p>Equivalent to</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'>   <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">y</span><span class="p">:</span>
</span><span class='line'>      <span class="c"># do something</span>
</span></code></pre></td></tr></table></div></figure>


<p>in C++ is</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="kt">void</span> <span class="n">print_loop</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">auto</span> <span class="n">y</span> <span class="o">=</span> <span class="p">{</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">};</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="k">auto</span> <span class="n">i</span> <span class="o">:</span> <span class="n">y</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="sc">&#39;.&#39;</span> <span class="o">&lt;&lt;</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[bottle and parameters]]></title>
    <link href="http://www.ahwkong.com/post/2014/03/03/bottle-and-parameters/"/>
    <updated>2014-03-03T22:58:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/03/03/bottle-and-parameters</id>
    <content type="html"><![CDATA[<p>Use   <code>request.query</code> to retrieve the url parameters</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#coding: utf-8</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">bottle</span> <span class="kn">import</span> <span class="o">*</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@route</span><span class="p">(</span><span class="s">&#39;/&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nd">@route</span><span class="p">(</span><span class="s">&#39;/index.html&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">index</span><span class="p">():</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&#39;&lt;a href=&quot;/hello&quot;&gt;Go to Hello page&lt;/a&gt;&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@route</span><span class="p">(</span><span class="s">&#39;/hello&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">hello</span><span class="p">():</span>
</span><span class='line'>    <span class="n">name</span> <span class="o">=</span> <span class="bp">None</span>
</span><span class='line'>    <span class="n">names</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">query</span><span class="o">.</span><span class="n">getall</span><span class="p">(</span><span class="s">&#39;name&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">names</span><span class="p">:</span>
</span><span class='line'>        <span class="n">name</span> <span class="o">=</span> <span class="n">names</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&#39;&lt;h1&gt;Hello </span><span class="si">%s</span><span class="s">&lt;/h1&gt;&#39;</span> <span class="o">%</span> <span class="n">name</span>
</span><span class='line'>
</span><span class='line'><span class="n">run</span><span class="p">(</span><span class="n">host</span><span class="o">=</span><span class="s">&#39;localhost&#39;</span><span class="p">,</span> <span class="n">port</span><span class="o">=</span><span class="mi">8000</span><span class="p">,</span> <span class="n">reloader</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NSLog macro]]></title>
    <link href="http://www.ahwkong.com/post/2014/03/03/nslog-macro/"/>
    <updated>2014-03-03T08:11:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/03/03/nslog-macro</id>
    <content type="html"><![CDATA[<p>This is a useful marco for doing debug logging:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#define DLog(msg, ...) do { \</span>
</span><span class='line'><span class="cp">  NSString *dLogString = [NSString stringWithFormat:@&quot;%s: %@&quot;, __PRETTY_FUNCTION__, msg]; \</span>
</span><span class='line'><span class="cp">  NSLog(@&quot;%@&quot;, __VA_ARGS__); \</span>
</span><span class='line'><span class="cp">} while (0)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Note the use of <code>__PRETTY_FUNCTION__</code></p>

<p><a href="https://coderwall.com/p/2ko3la">Source</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TIL R is presinstalled in OSX]]></title>
    <link href="http://www.ahwkong.com/post/2014/03/02/til-r-is-presinstalled-in-osx/"/>
    <updated>2014-03-02T11:27:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/03/02/til-r-is-presinstalled-in-osx</id>
    <content type="html"><![CDATA[<p>I just found out R is pre-installed in OSX!</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ R
</span><span class='line'>
</span><span class='line'>R version 3.0.2 (2013-09-25) -- "Frisbee Sailing"
</span><span class='line'>Copyright (C) 2013 The R Foundation for Statistical Computing
</span><span class='line'>Platform: x86_64-apple-darwin10.8.0 (64-bit)
</span><span class='line'>
</span><span class='line'>R is free software and comes with ABSOLUTELY NO WARRANTY.
</span><span class='line'>You are welcome to redistribute it under certain conditions.
</span><span class='line'>Type 'license()' or 'licence()' for distribution details.
</span><span class='line'>
</span><span class='line'>  Natural language support but running in an English locale
</span><span class='line'>
</span><span class='line'>R is a collaborative project with many contributors.
</span><span class='line'>Type 'contributors()' for more information and
</span><span class='line'>'citation()' on how to cite R or R packages in publications.
</span><span class='line'>
</span><span class='line'>Type 'demo()' for some demos, 'help()' for on-line help, or
</span><span class='line'>'help.start()' for an HTML browser interface to help.
</span><span class='line'>Type 'q()' to quit R.
</span><span class='line'>
</span><span class='line'>></span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Prepare a maverick usb]]></title>
    <link href="http://www.ahwkong.com/post/2014/03/01/prepare-a-maverick-usb/"/>
    <updated>2014-03-01T07:08:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/03/01/prepare-a-maverick-usb</id>
    <content type="html"><![CDATA[<p>Get a USB flash drive that is at least 8 GBs.</p>

<p>Use Disk Utility to prepare the flash drive:</p>

<ul>
<li>Click on the Erase tab in the DU main window.</li>
<li>Set the format type to <code>Mac OS Extended (Journaled.)</code></li>
<li>Click on the Erase button.</li>
</ul>


<p>You can leave the name of the flash drive at the system default, &ldquo;Untitled.&rdquo; Open the Terminal in the Utilities folder. Run this command line after the prompt in the Terminal&rsquo;s window:</p>

<pre><code>sudo /Applications/Install\ OS\ X\ Mavericks.app/Contents/Resources/createinstallmedia \
--volume /Volumes/Untitled --applicationpath /Applications/Install\ OS\ X\ Mavericks.app --nointeraction
</code></pre>

<p>No need of any third party software</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Create a NSArray from NSMutualArray]]></title>
    <link href="http://www.ahwkong.com/post/2014/02/28/create-a-nsarray-from-nsmutualarray/"/>
    <updated>2014-02-28T19:31:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/02/28/create-a-nsarray-from-nsmutualarray</id>
    <content type="html"><![CDATA[<p>It is so simple</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// m is a NSMutualArray </span>
</span><span class='line'><span class="n">NSArray</span><span class="o">*</span> <span class="n">n</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSArray</span> <span class="nl">arrayWithArray:</span><span class="n">m</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[urlencode unicode]]></title>
    <link href="http://www.ahwkong.com/post/2014/02/23/urlencode-unicode/"/>
    <updated>2014-02-23T07:25:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/02/23/urlencode-unicode</id>
    <content type="html"><![CDATA[<p>Work in python 3</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="err">$</span> <span class="n">python3</span>
</span><span class='line'><span class="n">Python</span> <span class="mf">3.3</span><span class="o">.</span><span class="mi">4</span> <span class="p">(</span><span class="n">default</span><span class="p">,</span> <span class="n">Feb</span> <span class="mi">23</span> <span class="mi">2014</span><span class="p">,</span> <span class="mo">06</span><span class="p">:</span><span class="mi">47</span><span class="p">:</span><span class="mi">55</span><span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="n">GCC</span> <span class="mf">4.2</span><span class="o">.</span><span class="mi">1</span> <span class="n">Compatible</span> <span class="n">Apple</span> <span class="n">LLVM</span> <span class="mf">5.0</span> <span class="p">(</span><span class="n">clang</span><span class="o">-</span><span class="mf">500.2</span><span class="o">.</span><span class="mi">79</span><span class="p">)]</span> <span class="n">on</span> <span class="n">darwin</span>
</span><span class='line'><span class="n">Type</span> <span class="s">&quot;help&quot;</span><span class="p">,</span> <span class="s">&quot;copyright&quot;</span><span class="p">,</span> <span class="s">&quot;credits&quot;</span> <span class="ow">or</span> <span class="s">&quot;license&quot;</span> <span class="k">for</span> <span class="n">more</span> <span class="n">information</span><span class="o">.</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">urllib.parse</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">urllib</span><span class="o">.</span><span class="n">parse</span><span class="o">.</span><span class="n">urlencode</span><span class="p">({</span><span class="s">&#39;a&#39;</span><span class="p">:</span><span class="nb">chr</span><span class="p">(</span><span class="mi">400</span><span class="p">)})</span>
</span><span class='line'><span class="s">&#39;a=%C6%90&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Does not work in python</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="err">$</span> <span class="n">python</span>
</span><span class='line'><span class="n">Python</span> <span class="mf">2.7</span><span class="o">.</span><span class="mi">6</span> <span class="o">|</span><span class="n">Anaconda</span> <span class="mf">1.8</span><span class="o">.</span><span class="mi">0</span> <span class="p">(</span><span class="n">x86_64</span><span class="p">)</span><span class="o">|</span> <span class="p">(</span><span class="n">default</span><span class="p">,</span> <span class="n">Jan</span> <span class="mi">10</span> <span class="mi">2014</span><span class="p">,</span> <span class="mi">11</span><span class="p">:</span><span class="mi">23</span><span class="p">:</span><span class="mi">15</span><span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="n">GCC</span> <span class="mf">4.0</span><span class="o">.</span><span class="mi">1</span> <span class="p">(</span><span class="n">Apple</span> <span class="n">Inc</span><span class="o">.</span> <span class="n">build</span> <span class="mi">5493</span><span class="p">)]</span> <span class="n">on</span> <span class="n">darwin</span>
</span><span class='line'><span class="n">Type</span> <span class="s">&quot;help&quot;</span><span class="p">,</span> <span class="s">&quot;copyright&quot;</span><span class="p">,</span> <span class="s">&quot;credits&quot;</span> <span class="ow">or</span> <span class="s">&quot;license&quot;</span> <span class="k">for</span> <span class="n">more</span> <span class="n">information</span><span class="o">.</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">urllib</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">urllib</span><span class="o">.</span><span class="n">urlencode</span><span class="p">({</span><span class="s">&#39;a&#39;</span><span class="p">:</span><span class="nb">chr</span><span class="p">(</span><span class="mi">400</span><span class="p">)})</span>
</span><span class='line'><span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;&lt;stdin&gt;&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
</span><span class='line'><span class="ne">ValueError</span><span class="p">:</span> <span class="nb">chr</span><span class="p">()</span> <span class="n">arg</span> <span class="ow">not</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">256</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">urllib</span><span class="o">.</span><span class="n">urlencode</span><span class="p">({</span><span class="s">&#39;a&#39;</span><span class="p">:</span><span class="s">u&quot;</span><span class="se">\u0400</span><span class="s">&quot;</span><span class="p">})</span>
</span><span class='line'><span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;&lt;stdin&gt;&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;/Users/antkong/anaconda/lib/python2.7/urllib.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1329</span><span class="p">,</span> <span class="ow">in</span> <span class="n">urlencode</span>
</span><span class='line'>    <span class="n">v</span> <span class="o">=</span> <span class="n">quote_plus</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">v</span><span class="p">))</span>
</span><span class='line'><span class="ne">UnicodeEncodeError</span><span class="p">:</span> <span class="s">&#39;ascii&#39;</span> <span class="n">codec</span> <span class="n">can</span><span class="s">&#39;t encode character u&#39;</span>\<span class="n">u0400</span><span class="s">&#39; in position 0: ordinal not in range(128)</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CAGradientLayer]]></title>
    <link href="http://www.ahwkong.com/post/2014/02/22/cagradientlayer/"/>
    <updated>2014-02-22T13:57:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/02/22/cagradientlayer</id>
    <content type="html"><![CDATA[

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>    <span class="n">CAGradientLayer</span> <span class="o">*</span><span class="n">gradient</span> <span class="o">=</span> <span class="p">[</span><span class="n">CAGradientLayer</span> <span class="n">layer</span><span class="p">];</span>
</span><span class='line'>    <span class="n">gradient</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">bounds</span><span class="p">;</span>
</span><span class='line'>    <span class="n">gradient</span><span class="p">.</span><span class="n">colors</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span> <span class="p">[</span><span class="n">colorOne</span> <span class="n">CGColor</span><span class="p">],</span> <span class="p">[</span><span class="n">colorTwo</span> <span class="n">CGColor</span><span class="p">]</span> <span class="p">];</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">gradient</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>The above code will cause this compiler error:</p>

<pre><code>/path/to/MyViewController.m:31:26: Collection element of type 'CGColorRef' (aka 'struct CGColor *') is not an Objective-C object
</code></pre>

<p>It can be fixed by casting to <code>id</code></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>    <span class="n">CAGradientLayer</span> <span class="o">*</span><span class="n">gradient</span> <span class="o">=</span> <span class="p">[</span><span class="n">CAGradientLayer</span> <span class="n">layer</span><span class="p">];</span>
</span><span class='line'>    <span class="n">gradient</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">bounds</span><span class="p">;</span>
</span><span class='line'>    <span class="n">gradient</span><span class="p">.</span><span class="n">colors</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span> <span class="p">(</span><span class="kt">id</span><span class="p">)[</span><span class="n">colorOne</span> <span class="n">CGColor</span><span class="p">],</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span> <span class="p">[</span><span class="n">colorTwo</span> <span class="n">CGColor</span><span class="p">]</span> <span class="p">];</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">gradient</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>It is a new behavior due to the use of ARC</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Some objective-c note-to-self]]></title>
    <link href="http://www.ahwkong.com/post/2014/02/19/some-objective-c-note-to-self/"/>
    <updated>2014-02-19T02:11:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/02/19/some-objective-c-note-to-self</id>
    <content type="html"><![CDATA[<p>To find the number of items in a <code>NSArray</code> use</p>

<pre><code>[array count];
</code></pre>

<p>It is not <code>size</code> (python) or <code>length</code> (java)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NSNotification and view controller]]></title>
    <link href="http://www.ahwkong.com/post/2014/02/19/nsnotification-and-view-controller/"/>
    <updated>2014-02-19T02:02:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/02/19/nsnotification-and-view-controller</id>
    <content type="html"><![CDATA[<p>I have created a number of custom UIViewControllers for UICollectionViewCell programmatically (Apple makes it really easy to create good looking GUI. <code>AutoLayout</code> is not as bad as I heard from the blogsphere. But I digress).</p>

<p>Now I want to be able to have these UIViewController to subscribe to an adhoc NSNotification. I have ensured that there is no typo in the my notification name (The name is defined in a header file). I have also make sure the notification is fired on the main thread, like so:</p>

<pre><code>dispatch_async(dispatch_get_main_queue(),^{
    [[NSNotificationCenter defaultCenter] postNotificationName:NOTIFICATION_NAME object:self];
});
</code></pre>

<p>However my UIViewControllers still do not receive any notification at all.</p>

<p>It turns out it is because the controllers instances have gone out of scope. I found out by putting a <code>NSLog</code> in the <code>dealloc</code> method. It proves that the controllers have gone out of scope.</p>

<p> In order to keep them around in memory, I added a <code>NSMutableDictionary</code> to keep reference to these controllers. Will test if it has any adverse effect or not.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[capture part of ios screen as image]]></title>
    <link href="http://www.ahwkong.com/post/2014/02/17/capture-part-of-ios-screen-as-image/"/>
    <updated>2014-02-17T04:38:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/02/17/capture-part-of-ios-screen-as-image</id>
    <content type="html"><![CDATA[

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">UIGraphicsBeginImageContext</span><span class="p">(</span><span class="n">theCell</span><span class="p">.</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">);</span>
</span><span class='line'><span class="p">[</span><span class="n">theCell</span><span class="p">.</span><span class="n">layer</span> <span class="nl">renderInContext:</span><span class="n">UIGraphicsGetCurrentContext</span><span class="p">()];</span>
</span><span class='line'><span class="n">UIImage</span> <span class="o">*</span><span class="n">renderedCellImage</span> <span class="o">=</span> <span class="n">UIGraphicsGetImageFromCurrentImageContext</span><span class="p">();</span>
</span><span class='line'><span class="n">UIGraphicsEndImageContext</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://stackoverflow.com/a/13656612/58129">source</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Land tax is adjustable]]></title>
    <link href="http://www.ahwkong.com/post/2014/02/16/land-tax-is-adjustable/"/>
    <updated>2014-02-16T17:10:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/02/16/land-tax-is-adjustable</id>
    <content type="html"><![CDATA[<p>if <strong>Land Tax Adjustable</strong> is checked, it means the vendor seeks reimbursement of land tax from the buyer</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[conda update]]></title>
    <link href="http://www.ahwkong.com/post/2014/02/15/conda-update/"/>
    <updated>2014-02-15T19:51:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/02/15/conda-update</id>
    <content type="html"><![CDATA[<p>At first I am confused by this <code>conda</code> output. It seems suggest <code>conda</code> is going to upgrade python even though there is no new version of python.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ conda update python
</span><span class='line'>Updating conda environment at /Users/antkong/anaconda
</span><span class='line'>
</span><span class='line'>The following packages will be downloaded:
</span><span class='line'>
</span><span class='line'>    package                    |            build
</span><span class='line'>    ---------------------------|-----------------
</span><span class='line'>    conda-3.0.4                |           py27_0         103 KB
</span><span class='line'>    openssl-1.0.1c             |                0         2.1 MB
</span><span class='line'>    python-2.7.6               |                1         9.9 MB
</span><span class='line'>    readline-6.2               |                2         275 KB
</span><span class='line'>
</span><span class='line'>The following packages will be UN-linked:
</span><span class='line'>
</span><span class='line'>    package                    |            build
</span><span class='line'>    ---------------------------|-----------------
</span><span class='line'>    conda-2.2.7                |           py27_0
</span><span class='line'>    python-2.7.6               |                0
</span><span class='line'>    readline-6.2               |                1
</span><span class='line'>
</span><span class='line'>The following packages will be linked:
</span><span class='line'>
</span><span class='line'>    package                    |            build
</span><span class='line'>    ---------------------------|-----------------
</span><span class='line'>    conda-3.0.4                |           py27_0   hard-link
</span><span class='line'>    openssl-1.0.1c             |                0   hard-link
</span><span class='line'>    python-2.7.6               |                1   hard-link
</span><span class='line'>    readline-6.2               |                2   hard-link
</span><span class='line'>
</span><span class='line'>Proceed ([y]/n)?</span></code></pre></td></tr></table></div></figure>


<p>It turns out they are the dependency of <code>conda</code>, which will be upgraded from 2.2.7 to 3.0.4</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Changing NSTimeZone]]></title>
    <link href="http://www.ahwkong.com/post/2014/02/14/changing-nstimezone/"/>
    <updated>2014-02-14T22:19:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/02/14/changing-nstimezone</id>
    <content type="html"><![CDATA[<p>To convert a NSDate into another Timezone</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>    <span class="n">NSCalendarUnit</span> <span class="n">val</span> <span class="o">=</span> <span class="n">NSCalendarUnitYear</span><span class="o">|</span><span class="n">NSCalendarUnitHour</span><span class="p">;</span>
</span><span class='line'>    <span class="n">NSCalendar</span><span class="o">*</span> <span class="n">dupCal</span> <span class="o">=</span>  <span class="p">[[</span><span class="n">NSCalendar</span> <span class="n">currentCalendar</span><span class="p">]</span> <span class="n">copy</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">dupCal</span> <span class="nl">setTimeZone:</span><span class="n">toTimeZone</span><span class="p">];</span> <span class="c1">// setting to a different timezone</span>
</span><span class='line'>    <span class="n">NSDateComponents</span> <span class="o">*</span><span class="n">dupComponents</span> <span class="o">=</span> <span class="p">[</span><span class="n">dupCal</span> <span class="nl">components:</span><span class="n">val</span> <span class="nl">fromDate:</span><span class="p">[</span><span class="n">NSDate</span> <span class="n">date</span><span class="p">]];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// print out the time and check</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%ld&quot;</span><span class="p">,</span> <span class="p">(</span><span class="kt">long</span><span class="p">)[</span><span class="n">dupComponents</span> <span class="n">hour</span><span class="p">]);</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
