<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Timeline]]></title>
  <link href="http://www.ahwkong.com/atom.xml" rel="self"/>
  <link href="http://www.ahwkong.com/"/>
  <updated>2014-03-24T06:47:45+11:00</updated>
  <id>http://www.ahwkong.com/</id>
  <author>
    <name><![CDATA[Anthony Kong]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[octopress deploy rejected]]></title>
    <link href="http://www.ahwkong.com/post/2014/03/22/octopress-deploy-rejected/"/>
    <updated>2014-03-22T22:07:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/03/22/octopress-deploy-rejected</id>
    <content type="html"><![CDATA[<p>Got this error when running &lsquo;rake deploy&rsquo;</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>## Pushing generated _deploy website
</span><span class='line'>Counting objects: 9767, done.
</span><span class='line'>Delta compression using up to 4 threads.
</span><span class='line'>Compressing objects: 100% (5297/5297), done.
</span><span class='line'>Writing objects: 100% (7245/7245), 3.98 MiB | 121.00 KiB/s, done.
</span><span class='line'>Total 7245 (delta 3406), reused 2619 (delta 423)
</span><span class='line'>remote: error: GH001: Large files detected.
</span><span class='line'>remote: error: Trace: 2cb44393c3f81f907b200d71379dc45c
</span><span class='line'>remote: error: See http://git.io/iEPt8g for more information.
</span><span class='line'>remote: error: File downloads/code/erlang/out3.log is 122.48 MB; this exceeds GitHub's file size limit of 100 MB
</span><span class='line'>To git@github.com:kongakong/kongakong.github.com
</span><span class='line'> ! [remote rejected] master -> master (pre-receive hook declined)
</span><span class='line'>error: failed to push some refs to 'git@github.com:kongakong/kongakong.github.com'</span></code></pre></td></tr></table></div></figure>


<p>It is because I have left a log file in the downloads/code folder. Although I did not check in the file, it is copied into the _deploy folder and get committed for deployment.</p>

<p>Here is a solution</p>

<p>1) Make sure the unwanted file is removed from git</p>

<p>2) Add <code>*.log</code> to .gitignore to permanently ignore this file type.</p>

<p>3) Download <a href="http://rtyley.github.io/bfg-repo-cleaner/"><code>bfg</code></a> to remove the redundant, big files in <strong>_deploy</strong> folder</p>

<p>Here is the partial output from bfg</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>These are your protected commits, and so their contents will NOT be altered:
</span><span class='line'>
</span><span class='line'> * commit d8b90a41 (protected by 'HEAD')
</span><span class='line'>
</span><span class='line'>Cleaning
</span><span class='line'>--------
</span><span class='line'>
</span><span class='line'>Found 910 commits
</span><span class='line'>Cleaning commits:       100% (910/910)
</span><span class='line'>Cleaning commits completed in 3,051 ms.
</span><span class='line'>
</span><span class='line'>Updating 1 Ref
</span><span class='line'>--------------
</span><span class='line'>
</span><span class='line'>    Ref                 Before     After   
</span><span class='line'>    ---------------------------------------
</span><span class='line'>    refs/heads/master | d8b90a41 | 1c0ad187
</span><span class='line'>
</span><span class='line'>Updating references:    100% (1/1)
</span><span class='line'>...Ref update completed in 16 ms.
</span><span class='line'>
</span><span class='line'>Commit Tree-Dirt History
</span><span class='line'>------------------------
</span><span class='line'>
</span><span class='line'>    Earliest                                              Latest
</span><span class='line'>    |                                                          |
</span><span class='line'>    ...........................................................D
</span><span class='line'>
</span><span class='line'>    D = dirty commits (file tree fixed)
</span><span class='line'>    m = modified commits (commit message or parents changed)
</span><span class='line'>    . = clean commits (no changes to file tree)
</span><span class='line'>
</span><span class='line'>                            Before     After   
</span><span class='line'>    -------------------------------------------
</span><span class='line'>    First modified commit | 6725709a | f2971f05
</span><span class='line'>    Last dirty commit     | cbc09c38 | 774bb768
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>In total, 14 object ids were changed - a record of these will be written to:
</span><span class='line'>
</span><span class='line'>    /Users/antkong/octopress/_deploy.bfg-report/2014-03-23T21-03/object-id-map.old-new.txt
</span><span class='line'>
</span><span class='line'>BFG run is complete!</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2x2 suduko solver]]></title>
    <link href="http://www.ahwkong.com/post/2014/03/16/2x2-suduko-solver/"/>
    <updated>2014-03-16T17:05:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/03/16/2x2-suduko-solver</id>
    <content type="html"><![CDATA[<p>Very crappy code written in a couple of hours.</p>

<p>It implements backtracking in a procedural way.</p>

<figure class='code'><figcaption><span>sudoku2x2  linenos:true (sudoku4x4.erl)</span> <a href='http://www.ahwkong.com/downloads/code/erlang/sudoku4x4.erl'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="p">-</span><span class="ni">module</span><span class="p">(</span><span class="n">sudoku4x4</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'> <span class="o">-</span><span class="n">include_lib</span><span class="p">(</span><span class="s">&quot;eunit/include/eunit.hrl&quot;</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span><span class="ni">export</span><span class="p">([</span><span class="n">seed_matrix2</span><span class="o">/</span><span class="mi">0</span><span class="p">]).</span>
</span><span class='line'><span class="p">-</span><span class="ni">export</span><span class="p">([</span><span class="n">run</span><span class="o">/</span><span class="mi">0</span><span class="p">]).</span>
</span><span class='line'><span class="p">-</span><span class="ni">export</span><span class="p">([</span><span class="nb">element</span><span class="o">/</span><span class="mi">3</span><span class="p">,</span> <span class="n">solve</span><span class="o">/</span><span class="mi">1</span><span class="p">,</span> <span class="n">take_row_and_column</span><span class="o">/</span><span class="mi">4</span><span class="p">,</span> <span class="n">pick_num</span><span class="o">/</span><span class="mi">4</span><span class="p">,</span> <span class="n">pos_to_xy</span><span class="o">/</span><span class="mi">2</span><span class="p">]).</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c">%% matrix representation</span>
</span><span class='line'><span class="nf">seed_matrix2</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>     <span class="mi">4</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>     <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>     <span class="mi">0</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">].</span>
</span><span class='line'>
</span><span class='line'><span class="nf">matrix2_ans</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span>
</span><span class='line'>     <span class="mi">4</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span>
</span><span class='line'>     <span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>     <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">].</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nb">element</span><span class="p">(</span><span class="nv">X</span><span class="p">,</span> <span class="nv">Y</span><span class="p">,</span> <span class="p">_)</span> <span class="k">when</span> <span class="nv">X</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">;</span> <span class="nv">Y</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="n">nil</span><span class="p">;</span>
</span><span class='line'><span class="nb">element</span><span class="p">(</span><span class="nv">X</span><span class="p">,</span> <span class="nv">Y</span><span class="p">,</span> <span class="nv">Matrix</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="c">% make sure it is zero-indexed</span>
</span><span class='line'>    <span class="nn">lists</span><span class="p">:</span><span class="nf">nth</span><span class="p">(</span><span class="nv">X</span><span class="o">*</span><span class="mi">9</span> <span class="o">+</span> <span class="nv">Y</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="nv">Matrix</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">pos_to_xy</span><span class="p">(</span><span class="nv">Pos</span><span class="p">,</span> <span class="nv">Len</span><span class="p">)</span> <span class="k">when</span> <span class="nv">Pos</span> <span class="ow">rem</span> <span class="nv">Len</span> <span class="o">=:=</span> <span class="mi">0</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="p">{(</span><span class="nv">Pos</span> <span class="ow">div</span> <span class="nv">Len</span><span class="p">),</span> <span class="nv">Len</span><span class="p">};</span>
</span><span class='line'><span class="nf">pos_to_xy</span><span class="p">(</span><span class="nv">Pos</span><span class="p">,</span> <span class="nv">Len</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="p">{(</span><span class="nv">Pos</span> <span class="ow">div</span> <span class="nv">Len</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="nv">Pos</span> <span class="ow">rem</span> <span class="nv">Len</span><span class="p">}.</span>
</span><span class='line'>
</span><span class='line'><span class="nf">take_row_and_column</span><span class="p">(</span><span class="nv">R</span><span class="p">,</span> <span class="nv">C</span><span class="p">,</span> <span class="nv">AnsMatrix</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="nv">SideLen</span> <span class="o">=</span>  <span class="nb">round</span><span class="p">(</span><span class="nn">math</span><span class="p">:</span><span class="nf">sqrt</span><span class="p">(</span><span class="nb">length</span><span class="p">(</span><span class="nv">AnsMatrix</span><span class="p">))),</span>
</span><span class='line'>    <span class="n">take_row_and_column</span><span class="p">(</span><span class="nv">R</span><span class="p">,</span> <span class="nv">C</span><span class="p">,</span> <span class="nv">AnsMatrix</span><span class="p">,</span> <span class="nv">SideLen</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">take_row_and_column</span><span class="p">(</span><span class="nv">R</span><span class="p">,</span> <span class="nv">C</span><span class="p">,</span> <span class="nv">AnsMatrix</span><span class="p">,</span> <span class="nv">SideLen</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="c">% io:format(&quot;take_row_and_column: ~p~n&quot;, [AnsMatrix]),</span>
</span><span class='line'>    <span class="nv">RowVector</span> <span class="o">=</span> <span class="p">[</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">nth</span><span class="p">((</span><span class="nv">R</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nv">SideLen</span><span class="o">+</span><span class="nv">X</span><span class="p">,</span> <span class="nv">AnsMatrix</span><span class="p">)</span> <span class="p">||</span> <span class="nv">X</span> <span class="o">&lt;-</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">seq</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="nv">SideLen</span><span class="p">)],</span>
</span><span class='line'>    <span class="nv">ColVector</span> <span class="o">=</span> <span class="p">[</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">nth</span><span class="p">((</span><span class="nv">X</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nv">SideLen</span><span class="o">+</span><span class="nv">C</span><span class="p">,</span> <span class="nv">AnsMatrix</span><span class="p">)</span> <span class="p">||</span> <span class="nv">X</span> <span class="o">&lt;-</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">seq</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="nv">SideLen</span><span class="p">)],</span>
</span><span class='line'>    <span class="p">{</span><span class="nv">RowVector</span><span class="p">,</span> <span class="nv">ColVector</span><span class="p">}.</span>
</span><span class='line'>
</span><span class='line'><span class="c">%% pick a number to test for coordinate x,y</span>
</span><span class='line'><span class="nf">pick_num</span><span class="p">(</span><span class="nv">R</span><span class="p">,</span> <span class="nv">C</span><span class="p">,</span> <span class="nv">AnsMatrix</span><span class="p">,</span> <span class="nv">StartFromThisNum</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="nv">SideLen</span> <span class="o">=</span>  <span class="nb">round</span><span class="p">(</span><span class="nn">math</span><span class="p">:</span><span class="nf">sqrt</span><span class="p">(</span><span class="nb">length</span><span class="p">(</span><span class="nv">AnsMatrix</span><span class="p">))),</span>
</span><span class='line'>    <span class="p">{</span><span class="nv">RV</span><span class="p">,</span> <span class="nv">CV</span><span class="p">}</span> <span class="o">=</span> <span class="n">take_row_and_column</span><span class="p">(</span><span class="nv">R</span><span class="p">,</span> <span class="nv">C</span><span class="p">,</span> <span class="nv">AnsMatrix</span><span class="p">,</span> <span class="nv">SideLen</span><span class="p">),</span>
</span><span class='line'>    <span class="n">pick_num2</span><span class="p">(</span><span class="nv">R</span><span class="p">,</span> <span class="nv">C</span><span class="p">,</span> <span class="nv">RV</span><span class="p">,</span> <span class="nv">CV</span><span class="p">,</span> <span class="nv">StartFromThisNum</span><span class="p">,</span> <span class="nv">SideLen</span><span class="p">).</span>
</span><span class='line'><span class="nf">pick_num2</span><span class="p">(</span><span class="nv">R</span><span class="p">,</span> <span class="nv">C</span><span class="p">,</span> <span class="nv">RV</span><span class="p">,</span> <span class="nv">CV</span><span class="p">,</span> <span class="nv">Num</span><span class="p">,</span> <span class="nv">Bound</span><span class="p">)</span> <span class="k">when</span> <span class="nv">Num</span> <span class="o">=&lt;</span> <span class="nv">Bound</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="nv">F</span> <span class="o">=</span> <span class="k">fun</span><span class="p">(</span><span class="nv">X</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nv">X</span> <span class="o">==</span> <span class="nv">Num</span> <span class="k">end</span><span class="p">,</span>
</span><span class='line'>    <span class="nv">InRow</span> <span class="o">=</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">any</span><span class="p">(</span><span class="nv">F</span><span class="p">,</span> <span class="nv">RV</span><span class="p">),</span>
</span><span class='line'>    <span class="nv">InCol</span> <span class="o">=</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">any</span><span class="p">(</span><span class="nv">F</span><span class="p">,</span> <span class="nv">CV</span><span class="p">),</span>
</span><span class='line'>    <span class="k">case</span> <span class="p">{</span> <span class="nv">InRow</span><span class="p">,</span> <span class="nv">InCol</span> <span class="p">}</span> <span class="k">of</span>
</span><span class='line'>  <span class="p">{</span><span class="n">false</span><span class="p">,</span> <span class="n">false</span><span class="p">}</span> <span class="o">-&gt;</span> <span class="p">{</span><span class="n">ok</span><span class="p">,</span> <span class="nv">Num</span><span class="p">};</span>
</span><span class='line'>  <span class="p">_</span> <span class="o">-&gt;</span> <span class="n">pick_num2</span><span class="p">(</span><span class="nv">R</span><span class="p">,</span> <span class="nv">C</span><span class="p">,</span> <span class="nv">RV</span><span class="p">,</span> <span class="nv">CV</span><span class="p">,</span> <span class="nv">Num</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="nv">Bound</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span><span class="p">;</span>
</span><span class='line'><span class="nf">pick_num2</span><span class="p">(_</span><span class="nv">R</span><span class="p">,</span> <span class="p">_</span><span class="nv">C</span><span class="p">,</span> <span class="p">_</span><span class="nv">RV</span><span class="p">,</span> <span class="p">_</span><span class="nv">CV</span><span class="p">,</span> <span class="p">_</span><span class="nv">Num</span><span class="p">,</span> <span class="p">_</span><span class="nv">Bound</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="p">{</span><span class="n">err</span><span class="p">,</span> <span class="mi">0</span><span class="p">}.</span>
</span><span class='line'>
</span><span class='line'><span class="nf">solve</span><span class="p">(</span><span class="nv">Seed</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="c">%% round() is needed to convert it to integer</span>
</span><span class='line'>    <span class="n">solve</span><span class="p">(</span><span class="nv">Seed</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="p">[],</span> <span class="nv">Seed</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="nb">round</span><span class="p">(</span><span class="nn">math</span><span class="p">:</span><span class="nf">sqrt</span><span class="p">(</span><span class="nb">length</span><span class="p">(</span><span class="nv">Seed</span><span class="p">))),</span> <span class="p">[]).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">solve_backtrack</span><span class="p">(</span><span class="nv">Seed</span><span class="p">,</span> <span class="nv">PosInSeed</span><span class="p">,</span> <span class="p">_</span><span class="nv">Begin</span><span class="p">,</span> <span class="nv">Rest</span><span class="p">,</span> <span class="nv">LastNum</span><span class="p">,</span> <span class="nv">SideLen</span><span class="p">,</span> <span class="p">[])</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="n">solve</span><span class="p">(</span><span class="nv">Seed</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="p">[],</span> <span class="nv">Seed</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="nv">SideLen</span><span class="p">,</span> <span class="p">[]);</span> <span class="c">% initial step</span>
</span><span class='line'><span class="nf">solve_backtrack</span><span class="p">(</span><span class="nv">Seed</span><span class="p">,</span> <span class="p">_</span><span class="nv">PosInSeed</span><span class="p">,</span> <span class="nv">Ans</span><span class="p">,</span> <span class="p">_</span><span class="nv">Rest</span><span class="p">,</span> <span class="p">_</span><span class="nv">LastNum</span><span class="p">,</span> <span class="nv">SideLen</span><span class="p">,</span> <span class="p">[</span><span class="nv">LastStep</span><span class="p">|</span><span class="nv">Tail</span><span class="p">])</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="p">{</span><span class="nv">LasPosInSeed</span><span class="p">,</span> <span class="nv">LastPosInSeedNum</span><span class="p">}</span> <span class="o">=</span> <span class="nv">LastStep</span><span class="p">,</span>
</span><span class='line'>    <span class="nv">PrevAns</span> <span class="o">=</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">sublist</span><span class="p">(</span><span class="nv">Ans</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="nv">LasPosInSeed</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span>
</span><span class='line'>    <span class="nv">Rest</span> <span class="o">=</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">sublist</span><span class="p">(</span><span class="nv">Seed</span><span class="p">,</span> <span class="nv">LasPosInSeed</span><span class="p">,</span> <span class="nb">length</span><span class="p">(</span><span class="nv">Seed</span><span class="p">)</span><span class="o">-</span><span class="nv">LasPosInSeed</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span>
</span><span class='line'>    <span class="n">solve</span><span class="p">(</span><span class="nv">Seed</span><span class="p">,</span> <span class="nv">LasPosInSeed</span><span class="p">,</span> <span class="nv">PrevAns</span><span class="p">,</span> <span class="nv">Rest</span><span class="p">,</span> <span class="nv">LastPosInSeedNum</span><span class="p">,</span> <span class="nv">SideLen</span><span class="p">,</span> <span class="nv">Tail</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">is_check_point</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="p">{</span><span class="n">yes</span><span class="p">,</span> <span class="p">[{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">6</span><span class="p">}]};</span>
</span><span class='line'><span class="nf">is_check_point</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="p">{</span><span class="n">yes</span><span class="p">,</span> <span class="p">[{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">6</span><span class="p">},</span> <span class="p">{</span><span class="mi">3</span><span class="p">,</span> <span class="mi">8</span><span class="p">}]};</span>
</span><span class='line'><span class="nf">is_check_point</span><span class="p">(</span><span class="mi">14</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="p">{</span><span class="n">yes</span><span class="p">,</span> <span class="p">[{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">6</span><span class="p">},</span> <span class="p">{</span><span class="mi">3</span><span class="p">,</span> <span class="mi">8</span><span class="p">},</span> <span class="p">{</span><span class="mi">9</span><span class="p">,</span> <span class="mi">14</span><span class="p">}]};</span>
</span><span class='line'><span class="nf">is_check_point</span><span class="p">(</span><span class="mi">16</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="p">{</span><span class="n">yes</span><span class="p">,</span> <span class="p">[{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">6</span><span class="p">},</span> <span class="p">{</span><span class="mi">3</span><span class="p">,</span> <span class="mi">8</span><span class="p">},</span> <span class="p">{</span><span class="mi">9</span><span class="p">,</span> <span class="mi">14</span><span class="p">},</span> <span class="p">{</span><span class="mi">11</span><span class="p">,</span> <span class="mi">16</span><span class="p">}]};</span>
</span><span class='line'><span class="nf">is_check_point</span><span class="p">(_,_)</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="p">{</span><span class="n">no</span><span class="p">,</span> <span class="p">[]}.</span>
</span><span class='line'>
</span><span class='line'><span class="nf">is_well_formed</span><span class="p">(</span><span class="nv">M</span><span class="p">,</span> <span class="nv">Pts</span><span class="p">)</span> <span class="k">when</span> <span class="nb">is_list</span><span class="p">(</span><span class="nv">Pts</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="nv">F</span> <span class="o">=</span> <span class="k">fun</span><span class="p">({</span><span class="nv">X</span><span class="p">,</span> <span class="nv">Y</span><span class="p">})</span> <span class="o">-&gt;</span> <span class="n">is_well_formed</span><span class="p">(</span><span class="nv">M</span><span class="p">,</span> <span class="nv">X</span><span class="p">,</span> <span class="nv">Y</span><span class="p">)</span> <span class="k">end</span><span class="p">,</span>
</span><span class='line'>    <span class="nn">lists</span><span class="p">:</span><span class="nf">all</span><span class="p">(</span><span class="nv">F</span><span class="p">,</span> <span class="nv">Pts</span><span class="p">).</span>
</span><span class='line'><span class="nf">is_well_formed</span><span class="p">(</span><span class="nv">M</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">6</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="k">case</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">nth</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="nv">M</span><span class="p">)</span> <span class="o">+</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">nth</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="nv">M</span><span class="p">)</span> <span class="o">+</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">nth</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="nv">M</span><span class="p">)</span> <span class="o">+</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">nth</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span> <span class="nv">M</span><span class="p">)</span> <span class="k">of</span>
</span><span class='line'>  <span class="mi">10</span> <span class="o">-&gt;</span> <span class="n">true</span><span class="p">;</span>
</span><span class='line'>  <span class="p">_</span> <span class="o">-&gt;</span> <span class="n">false</span>
</span><span class='line'>    <span class="k">end</span><span class="p">;</span>
</span><span class='line'><span class="nf">is_well_formed</span><span class="p">(</span><span class="nv">M</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">8</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="k">case</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">nth</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="nv">M</span><span class="p">)</span> <span class="o">+</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">nth</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="nv">M</span><span class="p">)</span> <span class="o">+</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">nth</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span> <span class="nv">M</span><span class="p">)</span> <span class="o">+</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">nth</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="nv">M</span><span class="p">)</span> <span class="k">of</span>
</span><span class='line'>  <span class="mi">10</span> <span class="o">-&gt;</span> <span class="n">true</span><span class="p">;</span>
</span><span class='line'>  <span class="p">_</span> <span class="o">-&gt;</span> <span class="n">false</span>
</span><span class='line'>    <span class="k">end</span><span class="p">;</span>
</span><span class='line'><span class="nf">is_well_formed</span><span class="p">(</span><span class="nv">M</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">14</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="k">case</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">nth</span><span class="p">(</span><span class="mi">9</span><span class="p">,</span> <span class="nv">M</span><span class="p">)</span> <span class="o">+</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">nth</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="nv">M</span><span class="p">)</span> <span class="o">+</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">nth</span><span class="p">(</span><span class="mi">13</span><span class="p">,</span> <span class="nv">M</span><span class="p">)</span> <span class="o">+</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">nth</span><span class="p">(</span><span class="mi">14</span><span class="p">,</span> <span class="nv">M</span><span class="p">)</span> <span class="k">of</span>
</span><span class='line'>  <span class="mi">10</span> <span class="o">-&gt;</span> <span class="n">true</span><span class="p">;</span>
</span><span class='line'>  <span class="p">_</span> <span class="o">-&gt;</span> <span class="n">false</span>
</span><span class='line'>    <span class="k">end</span><span class="p">;</span>    
</span><span class='line'><span class="nf">is_well_formed</span><span class="p">(</span><span class="nv">M</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">16</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="k">case</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">nth</span><span class="p">(</span><span class="mi">11</span><span class="p">,</span> <span class="nv">M</span><span class="p">)</span> <span class="o">+</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">nth</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span> <span class="nv">M</span><span class="p">)</span> <span class="o">+</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">nth</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span> <span class="nv">M</span><span class="p">)</span> <span class="o">+</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">nth</span><span class="p">(</span><span class="mi">16</span><span class="p">,</span> <span class="nv">M</span><span class="p">)</span> <span class="k">of</span>
</span><span class='line'>  <span class="mi">10</span> <span class="o">-&gt;</span> <span class="n">true</span><span class="p">;</span>
</span><span class='line'>  <span class="p">_</span> <span class="o">-&gt;</span> <span class="n">false</span>
</span><span class='line'>    <span class="k">end</span><span class="p">;</span>
</span><span class='line'><span class="nf">is_well_formed</span><span class="p">(_,</span> <span class="p">_,</span> <span class="p">_)</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="n">false</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nf">solve</span><span class="p">(</span><span class="nv">Seed</span><span class="p">,</span> <span class="nv">PosInSeed</span><span class="p">,</span> <span class="nv">Ans</span><span class="p">,</span> <span class="p">[</span><span class="nv">H</span><span class="p">|</span><span class="nv">Remain</span><span class="p">],</span> <span class="nv">LastNum</span><span class="p">,</span> <span class="nv">SideLen</span><span class="p">,</span> <span class="nv">Steps</span><span class="p">)</span> <span class="k">when</span> <span class="nv">H</span> <span class="o">=:=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="o">-&gt;</span>
</span><span class='line'>    <span class="p">{</span><span class="nv">R</span><span class="p">,</span> <span class="nv">C</span><span class="p">}</span> <span class="o">=</span> <span class="n">pos_to_xy</span><span class="p">(</span><span class="nv">PosInSeed</span><span class="p">,</span> <span class="nv">SideLen</span><span class="p">),</span>
</span><span class='line'>    <span class="nv">CurrentMatrix</span> <span class="o">=</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">sublist</span><span class="p">(</span><span class="nv">Ans</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="nv">PosInSeed</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="o">++</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">sublist</span><span class="p">(</span><span class="nv">Seed</span><span class="p">,</span> <span class="nv">PosInSeed</span><span class="p">,</span> <span class="nb">length</span><span class="p">(</span><span class="nv">Seed</span><span class="p">)</span><span class="o">-</span><span class="nv">PosInSeed</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">pick_num</span><span class="p">(</span><span class="nv">R</span><span class="p">,</span> <span class="nv">C</span><span class="p">,</span> <span class="nv">CurrentMatrix</span><span class="p">,</span> <span class="nv">LastNum</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="k">of</span>
</span><span class='line'>      <span class="p">{</span><span class="n">ok</span><span class="p">,</span> <span class="nv">NewH</span><span class="p">}</span> <span class="o">-&gt;</span>
</span><span class='line'>            <span class="k">case</span> <span class="n">is_check_point</span><span class="p">(</span><span class="nv">PosInSeed</span><span class="p">,</span> <span class="nv">SideLen</span><span class="p">)</span> <span class="k">of</span>
</span><span class='line'>      <span class="p">{</span><span class="n">yes</span><span class="p">,</span> <span class="nv">Pts</span><span class="p">}</span> <span class="o">-&gt;</span>
</span><span class='line'>          <span class="nv">ProposedMatrix</span> <span class="o">=</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">sublist</span><span class="p">(</span><span class="nv">Ans</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="nv">PosInSeed</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="o">++</span> <span class="p">[</span><span class="nv">NewH</span><span class="p">]</span> <span class="o">++</span> <span class="nn">lists</span><span class="p">:</span><span class="nf">sublist</span><span class="p">(</span><span class="nv">Seed</span><span class="p">,</span> <span class="nv">PosInSeed</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="nb">length</span><span class="p">(</span><span class="nv">Seed</span><span class="p">)</span><span class="o">-</span><span class="nv">PosInSeed</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span>
</span><span class='line'>          <span class="k">case</span> <span class="n">is_well_formed</span><span class="p">(</span><span class="nv">ProposedMatrix</span><span class="p">,</span> <span class="nv">Pts</span><span class="p">)</span> <span class="k">of</span>
</span><span class='line'>          <span class="n">true</span> <span class="o">-&gt;</span> <span class="c">%% move on</span>
</span><span class='line'>              <span class="n">solve</span><span class="p">(</span><span class="nv">Seed</span><span class="p">,</span> <span class="nv">PosInSeed</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="nv">Ans</span><span class="o">++</span><span class="p">[</span><span class="nv">NewH</span><span class="p">],</span> <span class="nv">Remain</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">SideLen</span><span class="p">,</span> <span class="p">[{</span><span class="nv">PosInSeed</span><span class="p">,</span> <span class="nv">NewH</span><span class="p">}]</span><span class="o">++</span><span class="nv">Steps</span><span class="p">);</span>
</span><span class='line'>          <span class="n">false</span> <span class="o">-&gt;</span> <span class="c">%% backtraked</span>
</span><span class='line'>              <span class="n">solve_backtrack</span><span class="p">(</span><span class="nv">Seed</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="nv">Ans</span><span class="p">,</span> <span class="p">[</span><span class="nv">H</span><span class="p">]</span><span class="o">++</span><span class="nv">Remain</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="nv">SideLen</span><span class="p">,</span> <span class="nv">Steps</span><span class="p">)</span>
</span><span class='line'>          <span class="k">end</span><span class="p">;</span>
</span><span class='line'>      <span class="p">{</span><span class="n">no</span><span class="p">,</span> <span class="p">_}</span> <span class="o">-&gt;</span> <span class="c">% continue</span>
</span><span class='line'>          <span class="n">solve</span><span class="p">(</span><span class="nv">Seed</span><span class="p">,</span> <span class="nv">PosInSeed</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="nv">Ans</span><span class="o">++</span><span class="p">[</span><span class="nv">NewH</span><span class="p">],</span> <span class="nv">Remain</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">SideLen</span><span class="p">,</span> <span class="p">[{</span><span class="nv">PosInSeed</span><span class="p">,</span> <span class="nv">NewH</span><span class="p">}]</span><span class="o">++</span><span class="nv">Steps</span><span class="p">)</span>
</span><span class='line'>       <span class="k">end</span><span class="p">;</span>
</span><span class='line'>      <span class="p">_</span> <span class="o">-&gt;</span> <span class="c">%% backtracked</span>
</span><span class='line'>            <span class="n">solve_backtrack</span><span class="p">(</span><span class="nv">Seed</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="nv">Ans</span><span class="p">,</span> <span class="p">[</span><span class="nv">H</span><span class="p">]</span><span class="o">++</span><span class="nv">Remain</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="nv">SideLen</span><span class="p">,</span> <span class="nv">Steps</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span><span class="p">;</span>
</span><span class='line'><span class="nf">solve</span><span class="p">(</span><span class="nv">Seed</span><span class="p">,</span> <span class="nv">PosInSeed</span><span class="p">,</span> <span class="nv">Begin</span><span class="p">,</span> <span class="p">[</span><span class="nv">H</span><span class="p">|</span><span class="nv">Remain</span><span class="p">],</span> <span class="p">_</span><span class="nv">TriedNumAtThisPos</span><span class="p">,</span> <span class="nv">SideLen</span><span class="p">,</span> <span class="nv">Steps</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="c">%% seeded value, move on</span>
</span><span class='line'>    <span class="n">solve</span><span class="p">(</span><span class="nv">Seed</span><span class="p">,</span> <span class="nv">PosInSeed</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="nv">Begin</span> <span class="o">++</span> <span class="p">[</span><span class="nv">H</span><span class="p">],</span> <span class="nv">Remain</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">SideLen</span><span class="p">,</span> <span class="nv">Steps</span><span class="p">);</span>
</span><span class='line'><span class="nf">solve</span><span class="p">(_</span><span class="nv">Seed</span><span class="p">,</span> <span class="nv">EndPos</span><span class="p">,</span> <span class="nv">Ans</span><span class="p">,</span> <span class="p">_,</span> <span class="p">_,</span> <span class="nv">SideLen</span><span class="p">,</span> <span class="p">_</span><span class="nv">Steps</span><span class="p">)</span> <span class="k">when</span> <span class="nv">EndPos</span> <span class="o">==</span> <span class="nv">SideLen</span><span class="o">*</span><span class="nv">SideLen</span><span class="o">+</span><span class="mi">1</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="nv">Ans</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nf">run</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="nv">Ans</span> <span class="o">=</span> <span class="n">solve</span><span class="p">(</span><span class="n">seed_matrix2</span><span class="p">()),</span>
</span><span class='line'>    <span class="nn">io</span><span class="p">:</span><span class="nf">format</span><span class="p">(</span><span class="s">&quot;Ans </span><span class="si">~p~n</span><span class="s">&quot;</span><span class="p">,</span> <span class="p">[</span><span class="nv">Ans</span><span class="p">]).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">unit_test</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="p">[</span><span class="o">?</span><span class="n">assert</span><span class="p">(</span><span class="n">pos_to_xy</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span> <span class="o">=:=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">}),</span>
</span><span class='line'>     <span class="o">?</span><span class="n">assert</span><span class="p">(</span><span class="n">pos_to_xy</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span> <span class="o">=:=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">}),</span>
</span><span class='line'>     <span class="o">?</span><span class="n">assert</span><span class="p">(</span><span class="n">pos_to_xy</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span> <span class="o">=:=</span> <span class="p">{</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">}),</span>
</span><span class='line'>     <span class="o">?</span><span class="n">assert</span><span class="p">(</span><span class="n">pick_num2</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span> <span class="o">=:=</span> <span class="p">{</span><span class="n">ok</span><span class="p">,</span> <span class="mi">2</span><span class="p">}),</span>
</span><span class='line'>     <span class="o">?</span><span class="n">assert</span><span class="p">(</span><span class="n">pick_num2</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">],</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span> <span class="o">=:=</span> <span class="p">{</span><span class="n">err</span><span class="p">,</span> <span class="mi">0</span><span class="p">}),</span>
</span><span class='line'>     <span class="o">?</span><span class="n">assert</span><span class="p">(</span><span class="n">pick_num2</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">],</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span> <span class="o">=:=</span> <span class="p">{</span><span class="n">err</span><span class="p">,</span> <span class="mi">0</span><span class="p">})</span>
</span><span class='line'>    <span class="p">].</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sometimes it is not obvious at the beginning]]></title>
    <link href="http://www.ahwkong.com/post/2014/03/15/sometimes-it-is-not-obvious-at-the-beginning/"/>
    <updated>2014-03-15T15:49:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/03/15/sometimes-it-is-not-obvious-at-the-beginning</id>
    <content type="html"><![CDATA[<p>I want to create a function for use as a predicate in the function <code>lists:any</code>. I try it first in erlang shell,</p>

<pre><code>137&gt; F = fun(X) -&gt; X == 1 end.
#Fun&lt;erl_eval.6.80484245&gt;
</code></pre>

<p>It works as expected:</p>

<pre><code>138&gt; lists:any(F, [2, 3]).
false
139&gt; lists:any(F, [2, 1, 3]).
true
</code></pre>

<p>Then I want to change the condition to something else, and I got an error message:</p>

<pre><code>140&gt; F = fun(X) -&gt; X /= 1 end.
** exception error: no match of right hand side value #Fun&lt;erl_eval.6.80484245&gt;
</code></pre>

<p>My first thought: It is interesting&hellip; Did I mix up the &lsquo;not equal&rsquo; operator in erlang? Maybe it is not &lsquo;/=&rsquo;?</p>

<p>It turns out it is because the code at 140 is effectively an attempt to rebound the <code>F</code> variable. The error message is actually about this rather than the operator. I do not usually test code in the erlang shell, so it took me a while to figure it out.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[when top bar is enabled...]]></title>
    <link href="http://www.ahwkong.com/post/2014/03/10/when-top-bar-is-enabled-dot-dot-dot/"/>
    <updated>2014-03-10T22:00:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/03/10/when-top-bar-is-enabled-dot-dot-dot</id>
    <content type="html"><![CDATA[<p>When top bar of a navigation controller is enabled, I got this error messages:</p>

<pre><code>the item height must be less that the height of the UICollectionView minus the section insets top and bottom values.
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[quicklook]]></title>
    <link href="http://www.ahwkong.com/post/2014/03/10/quicklook/"/>
    <updated>2014-03-10T21:52:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/03/10/quicklook</id>
    <content type="html"><![CDATA[

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ qlmanage -l
</span><span class='line'>List of all generator IDs: (
</span><span class='line'>    "com.apple.quicklookgenerator.iChat",
</span><span class='line'>    "com.apple.qlgenerator.package",
</span><span class='line'>    "com.apple.qlgenerator.pdf",
</span><span class='line'>    "com.apple.qlgenerator.contact",
</span><span class='line'>    "com.apple.qlgenerator.mail",
</span><span class='line'>    "com.apple.qlgenerator.audio",
</span><span class='line'>    "com.apple.garageband.quicklookgenerator",
</span><span class='line'>    "com.apple.qlgenerator.iCal",
</span><span class='line'>    "com.apple.Notes.qlgenerator",
</span><span class='line'>    "com.apple.qlgenerator.movie",
</span><span class='line'>    "com.apple.qlgenerator.image",
</span><span class='line'>    "com.apple.qlgenerator.web",
</span><span class='line'>    "com.apple.qlgenerator.LogicXQLGenerator",
</span><span class='line'>    "com.apple.qlgenerator.eps",
</span><span class='line'>    "com.apple.qlgenerator.certificates",
</span><span class='line'>    "com.apple.qlgenerator.bookmark",
</span><span class='line'>    "com.apple.qlgenerator.text",
</span><span class='line'>    "com.apple.qlgenerator.clipping",
</span><span class='line'>    "org.m0k.transmission.QuickLookPlugin",
</span><span class='line'>    "com.apple.qlgenerator.font",
</span><span class='line'>    "com.apple.qlgenerator.office",
</span><span class='line'>    "com.apple.iBooksAuthor.iBooksAuthorQuickLookGenerator",
</span><span class='line'>    "org.openemu.savestategenerator",
</span><span class='line'>    "com.apple.qlgenerator.SceneKit",
</span><span class='line'>    "com.apple.qlgenerator.iconset",
</span><span class='line'>    "com.apple.qlgenerator.standard-bundles",
</span><span class='line'>    "com.apple.qlgenerator.locPDF",
</span><span class='line'>    "com.apple.iWork.iWorkQuickLookGenerator",
</span><span class='line'>    "com.pixelmatorteam.quicklook"
</span><span class='line'>)</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[keyboard in iOS]]></title>
    <link href="http://www.ahwkong.com/post/2014/03/07/keyboard-in-ios/"/>
    <updated>2014-03-07T22:03:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/03/07/keyboard-in-ios</id>
    <content type="html"><![CDATA[<p>Turns out it is not a smaller subject&hellip;</p>

<p>First reading: <a href="http://stackoverflow.com/questions/1126726/how-to-make-a-uitextfield-move-up-when-keyboard-is-present">http://stackoverflow.com/questions/1126726/how-to-make-a-uitextfield-move-up-when-keyboard-is-present</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Current time in objective-c and python]]></title>
    <link href="http://www.ahwkong.com/post/2014/03/06/now-in-objective-c-and-python/"/>
    <updated>2014-03-06T18:49:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/03/06/now-in-objective-c-and-python</id>
    <content type="html"><![CDATA[<p>To get the current time in python</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">datetime</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">()</span>
</span><span class='line'><span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="p">(</span><span class="mi">2014</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">18</span><span class="p">,</span> <span class="mi">51</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">321003</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>and in objective-c</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSDate</span><span class="o">*</span> <span class="n">date</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSDate</span> <span class="n">date</span><span class="p">];</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="n">date</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SpaceX and redundancy]]></title>
    <link href="http://www.ahwkong.com/post/2014/03/06/spacex-and-redundancy/"/>
    <updated>2014-03-06T07:51:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/03/06/spacex-and-redundancy</id>
    <content type="html"><![CDATA[<p><strong>Q:</strong> So, these flight computers on Dragon – there are three on board, and that&rsquo;s for redundancy?</p>

<p><strong>A:</strong> There are actually six computers. They operate in pairs, so there are three computer units, each of which have two computers checking on each other. The reason we have three is when operating in proximity of ISS, we have to always have two computer strings voting on something on critical actions. We have three so we can tolerate a failure and still have two voting on each other. And that has nothing to do with radiation, that has to do with ensuring that we&rsquo;re safe when we&rsquo;re flying our vehicle in the proximity of the space station.</p>

<p>I went into the lab earlier today, and we have 18 different processing units with computers in them. We have three main computers, but 18 units that have a computer of some kind, and all of them are triple computers – everything is three processors. So we have like 54 processors on the spacecraft. It&rsquo;s a highly distributed design and very fault-tolerant and very robust.</p>

<p><a href="http://www.aviationweek.com/Blogs.aspx?plckBlogId=Blog:04ce340e-4b63-4d23-9695-d49ab661f385&amp;plckPostId=Blog:04ce340e-4b63-4d23-9695-d49ab661f385Post:a8b87703-93f9-4cdf-885f-9429605e14df">Source</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[how to make a label recognise a tape]]></title>
    <link href="http://www.ahwkong.com/post/2014/03/06/how-to-make-a-label-recognise-a-tape/"/>
    <updated>2014-03-06T07:44:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/03/06/how-to-make-a-label-recognise-a-tape</id>
    <content type="html"><![CDATA[<p>Step 1) Need to implement a selector to handle the gesture recognizer&rsquo;s callback</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="nf">handleSingleTap:</span><span class="p">(</span><span class="n">UIGestureRecognizer</span> <span class="o">*</span><span class="p">)</span><span class="nv">gestureRecognizer</span>  <span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;handleSingleTap called&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Step 2) Create and assign a gesture recognizer to a UILabel</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>    <span class="n">UITapGestureRecognizer</span> <span class="o">*</span><span class="n">singleTap</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UITapGestureRecognizer</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithTarget:</span><span class="n">self</span> <span class="nl">action:</span><span class="k">@selector</span><span class="p">(</span><span class="nl">handleSingleTap:</span><span class="p">)];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">lblHour</span> <span class="nl">addGestureRecognizer:</span><span class="n">singleTap</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>Step 3) <strong>Important</strong> Must make sure <code>setUserInteractionEnabled</code> of the UILabel is set</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">lblHour</span> <span class="nl">setUserInteractionEnabled:</span><span class="n">YES</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[yield to maturity]]></title>
    <link href="http://www.ahwkong.com/post/2014/03/06/yield-to-maturity/"/>
    <updated>2014-03-06T07:13:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/03/06/yield-to-maturity</id>
    <content type="html"><![CDATA[<p>Yield to maturity (YTM) is sometimes  known simply as “yield”, “redemption yield” or “gross redemption yield” (GRY) because it is the yield to the redemption date assuming all cashflows are paid gross (no tax deduction for example).</p>

<p>It is the internal rate of return of a bond – the yield necessary to discount all the bond’s cashflows to an NPV equal to its current price</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[quick 32nd lookup]]></title>
    <link href="http://www.ahwkong.com/post/2014/03/05/quick-32nd-lookup/"/>
    <updated>2014-03-05T07:11:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/03/05/quick-32nd-lookup</id>
    <content type="html"><![CDATA[<table>
<thead>
<tr>
<th></th>
<th><strong>32nd</strong>  </th>
<th> <strong>Decimal</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> 1/32   </td>
<td>0.03125 </td>
</tr>
<tr>
<td></td>
<td> 2/32   </td>
<td>0.0625 </td>
</tr>
<tr>
<td></td>
<td> 3/32   </td>
<td>0.09375 </td>
</tr>
<tr>
<td></td>
<td> 4/32   </td>
<td>0.125 </td>
</tr>
<tr>
<td></td>
<td> 5/32   </td>
<td>0.15625 </td>
</tr>
<tr>
<td></td>
<td> 6/32   </td>
<td>0.1875 </td>
</tr>
<tr>
<td></td>
<td> 7/32   </td>
<td>0.21875 </td>
</tr>
<tr>
<td></td>
<td> 8/32   </td>
<td>0.25 </td>
</tr>
<tr>
<td></td>
<td> 9/32   </td>
<td>0.28125 </td>
</tr>
<tr>
<td></td>
<td> 10/32  </td>
<td>0.3125 </td>
</tr>
<tr>
<td></td>
<td> 11/32  </td>
<td>0.34375 </td>
</tr>
<tr>
<td></td>
<td> 12/32  </td>
<td>0.375 </td>
</tr>
<tr>
<td></td>
<td> 13/32  </td>
<td>0.40625 </td>
</tr>
<tr>
<td></td>
<td> 14/32  </td>
<td>0.4375 </td>
</tr>
<tr>
<td></td>
<td> 15/32  </td>
<td>0.46875 </td>
</tr>
<tr>
<td></td>
<td> 16/32  </td>
<td>0.5 </td>
</tr>
<tr>
<td></td>
<td> 17/32  </td>
<td>0.53125 </td>
</tr>
<tr>
<td></td>
<td> 18/32  </td>
<td>0.5625 </td>
</tr>
<tr>
<td></td>
<td> 19/32  </td>
<td>0.59375 </td>
</tr>
<tr>
<td></td>
<td> 20/32  </td>
<td>0.625 </td>
</tr>
<tr>
<td></td>
<td> 21/32  </td>
<td>0.65625 </td>
</tr>
<tr>
<td></td>
<td> 22/32  </td>
<td>0.6875 </td>
</tr>
<tr>
<td></td>
<td> 23/32  </td>
<td>0.71875 </td>
</tr>
<tr>
<td></td>
<td> 24/32  </td>
<td>0.75 </td>
</tr>
<tr>
<td></td>
<td> 25/32  </td>
<td>0.78125 </td>
</tr>
<tr>
<td></td>
<td> 26/32  </td>
<td>0.8125 </td>
</tr>
<tr>
<td></td>
<td> 27/32  </td>
<td>0.84375 </td>
</tr>
<tr>
<td></td>
<td> 28/32  </td>
<td>0.875 </td>
</tr>
<tr>
<td></td>
<td> 29/32  </td>
<td>0.90625 </td>
</tr>
<tr>
<td></td>
<td> 30/32  </td>
<td>0.9375 </td>
</tr>
<tr>
<td></td>
<td> 31/32  </td>
<td>0.96875 </td>
</tr>
<tr>
<td></td>
<td> 32/32  </td>
<td>1.0 </td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[missing curses library]]></title>
    <link href="http://www.ahwkong.com/post/2014/03/05/missing-curses-library/"/>
    <updated>2014-03-05T07:11:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/03/05/missing-curses-library</id>
    <content type="html"><![CDATA[

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install ncurses-dev
</span><span class='line'>Reading package lists... Done
</span><span class='line'>Building dependency tree       
</span><span class='line'>Reading state information... Done
</span><span class='line'>Note, selecting 'libncurses5-dev' instead of 'ncurses-dev'
</span><span class='line'>The following extra packages will be installed:
</span><span class='line'>  libtinfo-dev
</span><span class='line'>Suggested packages:
</span><span class='line'>  ncurses-doc
</span><span class='line'>The following NEW packages will be installed:
</span><span class='line'>  libncurses5-dev libtinfo-dev
</span><span class='line'>0 upgraded, 2 newly installed, 0 to remove and 107 not upgraded.
</span><span class='line'>Need to get 328 kB of archives.
</span><span class='line'>After this operation, 1,452 kB of additional disk space will be used.
</span><span class='line'>Do you want to continue [Y/n]?</span></code></pre></td></tr></table></div></figure>


<p>Other dependency</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install libssl-dev</span></code></pre></td></tr></table></div></figure>


<p>Do not need them for now</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>jinterface     : No Java compiler found
</span><span class='line'>odbc           : ODBC library - link check failed</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[x in y in c++]]></title>
    <link href="http://www.ahwkong.com/post/2014/03/04/x-in-y-in-c-plus-plus/"/>
    <updated>2014-03-04T08:23:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/03/04/x-in-y-in-c-plus-plus</id>
    <content type="html"><![CDATA[<p>Equivalent to</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'>   <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">y</span><span class="p">:</span>
</span><span class='line'>      <span class="c"># do something</span>
</span></code></pre></td></tr></table></div></figure>


<p>in C++ is</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="kt">void</span> <span class="n">print_loop</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">auto</span> <span class="n">y</span> <span class="o">=</span> <span class="p">{</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">};</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="k">auto</span> <span class="n">i</span> <span class="o">:</span> <span class="n">y</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="sc">&#39;.&#39;</span> <span class="o">&lt;&lt;</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[bottle and parameters]]></title>
    <link href="http://www.ahwkong.com/post/2014/03/03/bottle-and-parameters/"/>
    <updated>2014-03-03T22:58:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/03/03/bottle-and-parameters</id>
    <content type="html"><![CDATA[<p>Use   <code>request.query</code> to retrieve the url parameters</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#coding: utf-8</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">bottle</span> <span class="kn">import</span> <span class="o">*</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@route</span><span class="p">(</span><span class="s">&#39;/&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nd">@route</span><span class="p">(</span><span class="s">&#39;/index.html&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">index</span><span class="p">():</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&#39;&lt;a href=&quot;/hello&quot;&gt;Go to Hello page&lt;/a&gt;&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@route</span><span class="p">(</span><span class="s">&#39;/hello&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">hello</span><span class="p">():</span>
</span><span class='line'>    <span class="n">name</span> <span class="o">=</span> <span class="bp">None</span>
</span><span class='line'>    <span class="n">names</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">query</span><span class="o">.</span><span class="n">getall</span><span class="p">(</span><span class="s">&#39;name&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">names</span><span class="p">:</span>
</span><span class='line'>        <span class="n">name</span> <span class="o">=</span> <span class="n">names</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&#39;&lt;h1&gt;Hello </span><span class="si">%s</span><span class="s">&lt;/h1&gt;&#39;</span> <span class="o">%</span> <span class="n">name</span>
</span><span class='line'>
</span><span class='line'><span class="n">run</span><span class="p">(</span><span class="n">host</span><span class="o">=</span><span class="s">&#39;localhost&#39;</span><span class="p">,</span> <span class="n">port</span><span class="o">=</span><span class="mi">8000</span><span class="p">,</span> <span class="n">reloader</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NSLog macro]]></title>
    <link href="http://www.ahwkong.com/post/2014/03/03/nslog-macro/"/>
    <updated>2014-03-03T08:11:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/03/03/nslog-macro</id>
    <content type="html"><![CDATA[<p>This is a useful marco for doing debug logging:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#define DLog(msg, ...) do { \</span>
</span><span class='line'><span class="cp">  NSString *dLogString = [NSString stringWithFormat:@&quot;%s: %@&quot;, __PRETTY_FUNCTION__, msg]; \</span>
</span><span class='line'><span class="cp">  NSLog(@&quot;%@&quot;, __VA_ARGS__); \</span>
</span><span class='line'><span class="cp">} while (0)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Note the use of <code>__PRETTY_FUNCTION__</code></p>

<p><a href="https://coderwall.com/p/2ko3la">Source</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TIL R is presinstalled in OSX]]></title>
    <link href="http://www.ahwkong.com/post/2014/03/02/til-r-is-presinstalled-in-osx/"/>
    <updated>2014-03-02T11:27:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/03/02/til-r-is-presinstalled-in-osx</id>
    <content type="html"><![CDATA[<p>I just found out R is pre-installed in OSX!</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ R
</span><span class='line'>
</span><span class='line'>R version 3.0.2 (2013-09-25) -- "Frisbee Sailing"
</span><span class='line'>Copyright (C) 2013 The R Foundation for Statistical Computing
</span><span class='line'>Platform: x86_64-apple-darwin10.8.0 (64-bit)
</span><span class='line'>
</span><span class='line'>R is free software and comes with ABSOLUTELY NO WARRANTY.
</span><span class='line'>You are welcome to redistribute it under certain conditions.
</span><span class='line'>Type 'license()' or 'licence()' for distribution details.
</span><span class='line'>
</span><span class='line'>  Natural language support but running in an English locale
</span><span class='line'>
</span><span class='line'>R is a collaborative project with many contributors.
</span><span class='line'>Type 'contributors()' for more information and
</span><span class='line'>'citation()' on how to cite R or R packages in publications.
</span><span class='line'>
</span><span class='line'>Type 'demo()' for some demos, 'help()' for on-line help, or
</span><span class='line'>'help.start()' for an HTML browser interface to help.
</span><span class='line'>Type 'q()' to quit R.
</span><span class='line'>
</span><span class='line'>></span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Prepare a maverick usb]]></title>
    <link href="http://www.ahwkong.com/post/2014/03/01/prepare-a-maverick-usb/"/>
    <updated>2014-03-01T07:08:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/03/01/prepare-a-maverick-usb</id>
    <content type="html"><![CDATA[<p>Get a USB flash drive that is at least 8 GBs.</p>

<p>Use Disk Utility to prepare the flash drive:</p>

<ul>
<li>Click on the Erase tab in the DU main window.</li>
<li>Set the format type to <code>Mac OS Extended (Journaled.)</code></li>
<li>Click on the Erase button.</li>
</ul>


<p>You can leave the name of the flash drive at the system default, &ldquo;Untitled.&rdquo; Open the Terminal in the Utilities folder. Run this command line after the prompt in the Terminal&rsquo;s window:</p>

<pre><code>sudo /Applications/Install\ OS\ X\ Mavericks.app/Contents/Resources/createinstallmedia \
--volume /Volumes/Untitled --applicationpath /Applications/Install\ OS\ X\ Mavericks.app --nointeraction
</code></pre>

<p>No need of any third party software</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Create a NSArray from NSMutualArray]]></title>
    <link href="http://www.ahwkong.com/post/2014/02/28/create-a-nsarray-from-nsmutualarray/"/>
    <updated>2014-02-28T19:31:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/02/28/create-a-nsarray-from-nsmutualarray</id>
    <content type="html"><![CDATA[<p>It is so simple</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// m is a NSMutualArray </span>
</span><span class='line'><span class="n">NSArray</span><span class="o">*</span> <span class="n">n</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSArray</span> <span class="nl">arrayWithArray:</span><span class="n">m</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[urlencode unicode]]></title>
    <link href="http://www.ahwkong.com/post/2014/02/23/urlencode-unicode/"/>
    <updated>2014-02-23T07:25:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/02/23/urlencode-unicode</id>
    <content type="html"><![CDATA[<p>Work in python 3</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="err">$</span> <span class="n">python3</span>
</span><span class='line'><span class="n">Python</span> <span class="mf">3.3</span><span class="o">.</span><span class="mi">4</span> <span class="p">(</span><span class="n">default</span><span class="p">,</span> <span class="n">Feb</span> <span class="mi">23</span> <span class="mi">2014</span><span class="p">,</span> <span class="mo">06</span><span class="p">:</span><span class="mi">47</span><span class="p">:</span><span class="mi">55</span><span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="n">GCC</span> <span class="mf">4.2</span><span class="o">.</span><span class="mi">1</span> <span class="n">Compatible</span> <span class="n">Apple</span> <span class="n">LLVM</span> <span class="mf">5.0</span> <span class="p">(</span><span class="n">clang</span><span class="o">-</span><span class="mf">500.2</span><span class="o">.</span><span class="mi">79</span><span class="p">)]</span> <span class="n">on</span> <span class="n">darwin</span>
</span><span class='line'><span class="n">Type</span> <span class="s">&quot;help&quot;</span><span class="p">,</span> <span class="s">&quot;copyright&quot;</span><span class="p">,</span> <span class="s">&quot;credits&quot;</span> <span class="ow">or</span> <span class="s">&quot;license&quot;</span> <span class="k">for</span> <span class="n">more</span> <span class="n">information</span><span class="o">.</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">urllib.parse</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">urllib</span><span class="o">.</span><span class="n">parse</span><span class="o">.</span><span class="n">urlencode</span><span class="p">({</span><span class="s">&#39;a&#39;</span><span class="p">:</span><span class="nb">chr</span><span class="p">(</span><span class="mi">400</span><span class="p">)})</span>
</span><span class='line'><span class="s">&#39;a=%C6%90&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Does not work in python</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="err">$</span> <span class="n">python</span>
</span><span class='line'><span class="n">Python</span> <span class="mf">2.7</span><span class="o">.</span><span class="mi">6</span> <span class="o">|</span><span class="n">Anaconda</span> <span class="mf">1.8</span><span class="o">.</span><span class="mi">0</span> <span class="p">(</span><span class="n">x86_64</span><span class="p">)</span><span class="o">|</span> <span class="p">(</span><span class="n">default</span><span class="p">,</span> <span class="n">Jan</span> <span class="mi">10</span> <span class="mi">2014</span><span class="p">,</span> <span class="mi">11</span><span class="p">:</span><span class="mi">23</span><span class="p">:</span><span class="mi">15</span><span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="n">GCC</span> <span class="mf">4.0</span><span class="o">.</span><span class="mi">1</span> <span class="p">(</span><span class="n">Apple</span> <span class="n">Inc</span><span class="o">.</span> <span class="n">build</span> <span class="mi">5493</span><span class="p">)]</span> <span class="n">on</span> <span class="n">darwin</span>
</span><span class='line'><span class="n">Type</span> <span class="s">&quot;help&quot;</span><span class="p">,</span> <span class="s">&quot;copyright&quot;</span><span class="p">,</span> <span class="s">&quot;credits&quot;</span> <span class="ow">or</span> <span class="s">&quot;license&quot;</span> <span class="k">for</span> <span class="n">more</span> <span class="n">information</span><span class="o">.</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">urllib</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">urllib</span><span class="o">.</span><span class="n">urlencode</span><span class="p">({</span><span class="s">&#39;a&#39;</span><span class="p">:</span><span class="nb">chr</span><span class="p">(</span><span class="mi">400</span><span class="p">)})</span>
</span><span class='line'><span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;&lt;stdin&gt;&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
</span><span class='line'><span class="ne">ValueError</span><span class="p">:</span> <span class="nb">chr</span><span class="p">()</span> <span class="n">arg</span> <span class="ow">not</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">256</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">urllib</span><span class="o">.</span><span class="n">urlencode</span><span class="p">({</span><span class="s">&#39;a&#39;</span><span class="p">:</span><span class="s">u&quot;</span><span class="se">\u0400</span><span class="s">&quot;</span><span class="p">})</span>
</span><span class='line'><span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;&lt;stdin&gt;&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;/Users/antkong/anaconda/lib/python2.7/urllib.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1329</span><span class="p">,</span> <span class="ow">in</span> <span class="n">urlencode</span>
</span><span class='line'>    <span class="n">v</span> <span class="o">=</span> <span class="n">quote_plus</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">v</span><span class="p">))</span>
</span><span class='line'><span class="ne">UnicodeEncodeError</span><span class="p">:</span> <span class="s">&#39;ascii&#39;</span> <span class="n">codec</span> <span class="n">can</span><span class="s">&#39;t encode character u&#39;</span>\<span class="n">u0400</span><span class="s">&#39; in position 0: ordinal not in range(128)</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CAGradientLayer]]></title>
    <link href="http://www.ahwkong.com/post/2014/02/22/cagradientlayer/"/>
    <updated>2014-02-22T13:57:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/02/22/cagradientlayer</id>
    <content type="html"><![CDATA[

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>    <span class="n">CAGradientLayer</span> <span class="o">*</span><span class="n">gradient</span> <span class="o">=</span> <span class="p">[</span><span class="n">CAGradientLayer</span> <span class="n">layer</span><span class="p">];</span>
</span><span class='line'>    <span class="n">gradient</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">bounds</span><span class="p">;</span>
</span><span class='line'>    <span class="n">gradient</span><span class="p">.</span><span class="n">colors</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span> <span class="p">[</span><span class="n">colorOne</span> <span class="n">CGColor</span><span class="p">],</span> <span class="p">[</span><span class="n">colorTwo</span> <span class="n">CGColor</span><span class="p">]</span> <span class="p">];</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">gradient</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>The above code will cause this compiler error:</p>

<pre><code>/path/to/MyViewController.m:31:26: Collection element of type 'CGColorRef' (aka 'struct CGColor *') is not an Objective-C object
</code></pre>

<p>It can be fixed by casting to <code>id</code></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>    <span class="n">CAGradientLayer</span> <span class="o">*</span><span class="n">gradient</span> <span class="o">=</span> <span class="p">[</span><span class="n">CAGradientLayer</span> <span class="n">layer</span><span class="p">];</span>
</span><span class='line'>    <span class="n">gradient</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">bounds</span><span class="p">;</span>
</span><span class='line'>    <span class="n">gradient</span><span class="p">.</span><span class="n">colors</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span> <span class="p">(</span><span class="kt">id</span><span class="p">)[</span><span class="n">colorOne</span> <span class="n">CGColor</span><span class="p">],</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span> <span class="p">[</span><span class="n">colorTwo</span> <span class="n">CGColor</span><span class="p">]</span> <span class="p">];</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">gradient</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>It is a new behavior due to the use of ARC</p>
]]></content>
  </entry>
  
</feed>
