<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Timeline]]></title>
  <link href="http://www.ahwkong.com/atom.xml" rel="self"/>
  <link href="http://www.ahwkong.com/"/>
  <updated>2014-02-11T08:26:49+11:00</updated>
  <id>http://www.ahwkong.com/</id>
  <author>
    <name><![CDATA[Anthony Kong]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[missing the viewDidLoad event]]></title>
    <link href="http://www.ahwkong.com/post/2014/02/11/missing-the-viewdidload-event/"/>
    <updated>2014-02-11T08:12:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/02/11/missing-the-viewdidload-event</id>
    <content type="html"><![CDATA[<p>This is my original code. It does the job and put a specialised view into a cell of a UICollectionView</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>    <span class="n">TT2TimeViewController</span><span class="o">*</span> <span class="n">controller</span> <span class="o">=</span> <span class="p">[[</span><span class="n">TT2TimeViewController</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>    <span class="n">controller</span><span class="p">.</span><span class="n">city</span> <span class="o">=</span> <span class="n">city</span><span class="p">;</span>
</span><span class='line'>    <span class="n">UIView</span><span class="o">*</span> <span class="n">view</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">NSBundle</span> <span class="n">mainBundle</span><span class="p">]</span> <span class="nl">loadNibNamed:</span><span class="s">@&quot;TT2TimeViewController&quot;</span>
</span><span class='line'>                                                  <span class="nl">owner:</span><span class="n">controller</span>
</span><span class='line'>                                                <span class="nl">options:</span><span class="nb">nil</span><span class="p">]</span> <span class="nl">objectAtIndex:</span><span class="mi">0</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>However, for some reason, the view controller <code>controller</code> will miss the ViewDidLoad event.  The selector is not called at all.</p>

<p>This problem is resolved if I switch to use <code>initWithNibName</code> instead:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>    <span class="n">TT2TimeViewController</span><span class="o">*</span> <span class="n">controller</span> <span class="o">=</span> <span class="p">[[</span><span class="n">TT2TimeViewController</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithNibName:</span><span class="s">@&quot;TT2TimeViewController&quot;</span>
</span><span class='line'>                                            <span class="nl">bundle:</span><span class="p">[</span><span class="n">NSBundle</span> <span class="n">mainBundle</span><span class="p">]];</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[dispatch_once]]></title>
    <link href="http://www.ahwkong.com/post/2014/02/09/dispatch-once/"/>
    <updated>2014-02-09T21:22:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/02/09/dispatch-once</id>
    <content type="html"><![CDATA[<p>Wanted to declare and initialise a static variable in a .m file.</p>

<p>Objective-c compiler does not like it, and raise this error message:</p>

<pre><code>Initializer element is not a compile-time constant
</code></pre>

<p>I like the explanation <a href="http://stackoverflow.com/a/11934961/58129">here</a> on Stackoverflow:</p>

<blockquote><p>Objective-C is a strict superset of C. It&rsquo;s illegal in C to have any executable code outside of a function (or method in Objective-C).</p></blockquote>

<p>Leading from this answer I discovered that I should use <code>dispatch_once</code> for initialisation</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[scrollViewDidScroll is not called]]></title>
    <link href="http://www.ahwkong.com/post/2014/02/03/scrollviewdidscroll-is-not-called/"/>
    <updated>2014-02-03T22:09:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/02/03/scrollviewdidscroll-is-not-called</id>
    <content type="html"><![CDATA[<p>if <code>- (void)scrollViewDidScroll:(UIScrollView *)scrollView</code> of the delegate is not called, one should check:</p>

<ul>
<li><p>Has the <code>delegate</code> of the ScrollView been assigned?</p></li>
<li><p>Have you set the <code>contentSize</code>? Is it bigger than the bounds of the ScrollView?</p></li>
<li><p>Is Autolayout on (if you use storyboard)?</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mixing C++ and Objective-c in XCode]]></title>
    <link href="http://www.ahwkong.com/post/2014/02/02/mixing-c-plus-plus-and-objective-c-in-xcode/"/>
    <updated>2014-02-02T21:04:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/02/02/mixing-c-plus-plus-and-objective-c-in-xcode</id>
    <content type="html"><![CDATA[<p>The c++ header keeps getting a compiler error:</p>

<pre><code>'iostream' file not found 
</code></pre>

<p>Here is the solution: wrap the <code>#include</code> inside <code>#ifdef __cplus</code></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#ifdef __cplus</span>
</span><span class='line'><span class="cp">#include &lt;iostream&gt;</span>
</span><span class='line'><span class="cp">#endif</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[bid-ask spread and swap spread]]></title>
    <link href="http://www.ahwkong.com/post/2014/01/29/bid-ask-spread/"/>
    <updated>2014-01-29T08:11:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/01/29/bid-ask-spread</id>
    <content type="html"><![CDATA[<p>For a 5-year swap, for example, a bank’s swap desk might quote the following:</p>

<pre><code>Floating-rate payer: pay 6-month LIBOR
receive a fixed rate of 5.19 percent

Fixed-rate payer: pay a fixed rate of 5.25 percent
receive 6-month LIBOR
</code></pre>

<p>In this example, the bank is quoting an offer rate of 5.25 percent, which is what the fixed-rate payer will pay, and a bid rate of 5.19 percent, which is what the floating-rate payer will receive. The bid-offer spread is therefore 6 basis points.</p>

<p>The fixed rate is always set at a spread over the government bond yield curve and is often quoted that way. Say the 5-year Treasury is trading at a yield of 4.88 percent. The 5-year swap bid and offer rates in the example are 31 basis points and 37 basis points, respectively, above this yield, and the bank’s swap trader could quote the swap rates as a swap spread: 37–31. This means that the bank would be willing to enter into a swap in which it paid 31 basis points above the benchmark yield and received LIBOR or one in which it received 37 basis points above the yield curve and paid LIBOR.</p>

<p>(Quoted from &lsquo;Fixed Income Securities and Derivatives Handbook Analysis and Valuation&rsquo; )</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[weak reference in block]]></title>
    <link href="http://www.ahwkong.com/post/2014/01/23/weak-reference/"/>
    <updated>2014-01-23T21:55:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/01/23/weak-reference</id>
    <content type="html"><![CDATA[<p>To avoid cyclic reference when referring to an object outside a block, we can do the following:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>    <span class="n">__weak</span> <span class="n">typeof</span><span class="p">(</span><span class="n">self</span><span class="p">)</span> <span class="n">weakSelf</span> <span class="o">=</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'>    <span class="n">gravity</span><span class="p">.</span><span class="n">action</span> <span class="o">=</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>        <span class="n">typeof</span><span class="p">(</span><span class="n">self</span><span class="p">)</span> <span class="n">strongSelf</span> <span class="o">=</span> <span class="n">weakSelf</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RequestAnimationFrame]]></title>
    <link href="http://www.ahwkong.com/post/2014/01/20/requestanimationframe/"/>
    <updated>2014-01-20T18:11:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/01/20/requestanimationframe</id>
    <content type="html"><![CDATA[<p>Do not use timer to control animation frame refresh in html5. Use <code>RequestAnimationFrame</code> instead.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Html 5 resources]]></title>
    <link href="http://www.ahwkong.com/post/2014/01/20/html5/"/>
    <updated>2014-01-20T16:04:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/01/20/html5</id>
    <content type="html"><![CDATA[<p>Some useful links:</p>

<p><a href="http://css-tricks.com/which-responsive-images-solution-should-you-use/">http://css-tricks.com/which-responsive-images-solution-should-you-use/</a></p>

<p><a href="https://github.com/scottjehl/picturefill">https://github.com/scottjehl/picturefill</a></p>

<p><a href="http://www.standardista.com/responsive-images-clown-car-technique/">http://www.standardista.com/responsive-images-clown-car-technique/</a></p>

<p><a href="http://www.w3.org/community/respimg/">http://www.w3.org/community/respimg/</a></p>

<p><strong>Hammer.js</strong> <a href="http://eightmedia.github.io/hammer.js/">http://eightmedia.github.io/hammer.js/</a></p>

<p><strong>jQT</strong> <a href="http://jqtjs.com/">http://jqtjs.com/</a></p>

<p><strong>Sencha gestures</strong> <a href="http://www.sencha.com/blog/ext-js-on-tap/">http://www.sencha.com/blog/ext-js-on-tap/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[compile debug_info]]></title>
    <link href="http://www.ahwkong.com/post/2014/01/18/compile-debug-info/"/>
    <updated>2014-01-18T13:04:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/01/18/compile-debug-info</id>
    <content type="html"><![CDATA[<p>After coming this SO question about [debug_info] (<a href="http://stackoverflow.com/questions/6830271/requesting-debug-info-in-an-erlang-module-using-compile">http://stackoverflow.com/questions/6830271/requesting-debug-info-in-an-erlang-module-using-compile</a> ), I am curious if it is indeed a problem.</p>

<p>Based on the <a href="http://www.erlang.org/doc/man/compile.html#debug_info">documentation</a>, this should enable the addition of debug info to the .beam files.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="p">-</span><span class="ni">module</span><span class="p">(</span><span class="n">testdebuginfo</span><span class="p">).</span>
</span><span class='line'><span class="p">-</span><span class="ni">compile</span><span class="p">(</span><span class="n">debug_info</span><span class="p">).</span>
</span></code></pre></td></tr></table></div></figure>


<p>However neither using <code>c</code> in erlang shell or using <code>erlc</code> directly will put the debug info into beam file.</p>

<p>I can only implant debug info through erlang shell like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>4> debugger:start().
</span><span class='line'>
</span><span class='line'>=ERROR REPORT==== 23-Jan-2014::12:23:39 ===
</span><span class='line'>ERROR: Could not find 'wxe_driver.so' in: /usr/local/Cellar/erlang/R16B03/lib/erlang/lib/wx-1.1.1/priv
</span><span class='line'>{ok,&lt;0.49.0>}
</span><span class='line'>5> c(testdebuginfo, [debug_info]).
</span><span class='line'>{ok,testdebuginfo}</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[class cluster]]></title>
    <link href="http://www.ahwkong.com/post/2014/01/17/class-cluster/"/>
    <updated>2014-01-17T22:42:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/01/17/class-cluster</id>
    <content type="html"><![CDATA[<p>We can use the <a href="https://developer.apple.com/library/ios/documentation/general/conceptual/devpedia-cocoacore/ClassCluster.html">class cluster</a> technique to manage compatibility on different iOS platforms.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using automator in OSX]]></title>
    <link href="http://www.ahwkong.com/post/2014/01/11/using-automator-in-osx/"/>
    <updated>2014-01-11T15:29:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/01/11/using-automator-in-osx</id>
    <content type="html"><![CDATA[<p>I want to implement a service in OSX such that I can easily shrink the size of image files in a folder to half of their original size.</p>

<p>This is what I have come up with at the end.</p>

<p><img src="images/automator.png" width="860" height="617"></p>

<p>Lessons/Observations:</p>

<ul>
<li><p>For non-standard action (e.g. copy files to a folder which is unknown at the workflow design time), I need to add an action to assign input value to a variable and then refer to it in subsequent task.</p></li>
<li><p>A lot of useful actions are already built in e.g. Scale image</p></li>
<li><p>Saving it to the default automator folder will automatically register the service to Finder.</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[resize images in a Stackoverflow post]]></title>
    <link href="http://www.ahwkong.com/post/2014/01/10/resize-images-in-a-so-post/"/>
    <updated>2014-01-10T14:18:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/01/10/resize-images-in-a-so-post</id>
    <content type="html"><![CDATA[<p>Markdown does not allow us to specify the size of an link image.</p>

<p>To get around this restriction it is what I did:</p>

<h1>1. Upload an image as usual</h1>

<p>Stackoverflow will add these lines to your post:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>![enter image description here][1]
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  [1]: http://i.stack.imgur.com/jxBxR.png</span></code></pre></td></tr></table></div></figure>


<h1>2. Change the above to an image tag</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;img src="http://i.stack.imgur.com/jxBxR.png" width="100" height="100"></span></code></pre></td></tr></table></div></figure>


<p>Done</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[firefox build failure on osx]]></title>
    <link href="http://www.ahwkong.com/post/2014/01/09/firefox-build-failure-on-osx/"/>
    <updated>2014-01-09T21:08:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/01/09/firefox-build-failure-on-osx</id>
    <content type="html"><![CDATA[

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>0:12.72 configure:19592:10: fatal error: 'linux/ethtool.h' file not found
</span><span class='line'> 0:12.72 #include &lt;linux/ethtool.h>
</span><span class='line'> 0:12.72          ^
</span><span class='line'> 0:12.72 1 error generated.
</span><span class='line'> 0:12.72 configure: failed program was:
</span><span class='line'> 0:12.72 #line 19591 "configure"
</span><span class='line'> 0:12.72 #include "confdefs.h"
</span><span class='line'> 0:12.72 #include &lt;linux/ethtool.h>
</span><span class='line'> 0:12.73 int main() {
</span><span class='line'> 0:12.73  struct ethtool_cmd cmd; cmd.speed_hi = 0;
</span><span class='line'> 0:12.73 ; return 0; }
</span><span class='line'> 0:12.73 configure:19790: checking __attribute__ ((aligned ())) support
</span><span class='line'> 0:12.73 configure:19807: /usr/bin/clang -c  -std=gnu99 -fno-strict-aliasing -fno-math-errno -pthread -DNO_X11 -Werror -Qunused-arguments  conftest.c 1>&5
</span><span class='line'> 0:12.73 configure: error: yasm is a required build tool for this architecture when webm is enabled. You may either install yasm or --disable-webm (which disables the WebM video format). See https://developer.mozilla.org/en/YASM for more details.
</span><span class='line'> 0:12.73 *** Fix above errors and then restart with               "/Applications/Xcode.app/Contents/Developer/usr/bin/make -f client.mk build"
</span><span class='line'> 0:12.73 make[2]: *** [configure] Error 1
</span><span class='line'> 0:12.73 make[1]: *** [obj-x86_64-apple-darwin13.0.2/Makefile] Error 2
</span><span class='line'> 0:12.73 make: *** [build] Error 2</span></code></pre></td></tr></table></div></figure>


<p>Basically installing yasm fixes this problem. The &lsquo;linux/ethtool.h&rsquo; fatal error seems to be irrevelant.</p>

<p>Here some build statistic (<code>mach resource-usage</code>):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Wall Time (s)   1230.61
</span><span class='line'>Start Date  2014-01-09T10:24:38.582Z
</span><span class='line'>End Date    2014-01-09T10:45:09.191Z
</span><span class='line'>CPU %   93.85
</span><span class='line'>Write Bytes 4659960320
</span><span class='line'>Read Bytes  1421654016
</span><span class='line'>Write Time  1749179
</span><span class='line'>Read Time   509074</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dependency on MathJax.js]]></title>
    <link href="http://www.ahwkong.com/post/2014/01/06/dependency-on-mathjax-dot-js/"/>
    <updated>2014-01-06T19:12:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/01/06/dependency-on-mathjax-dot-js</id>
    <content type="html"><![CDATA[<p>By default, ipython notebook will use MathJax on a CDN</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ipython notebook
</span><span class='line'>2014-01-06 19:08:43.857 [NotebookApp] Using existing profile dir: u'/Users/antkong/.ipython/profile_default'
</span><span class='line'>2014-01-06 19:08:43.865 [NotebookApp] Using MathJax from CDN: http://cdn.mathjax.org/mathjax/latest/MathJax.js
</span><span class='line'>2014-01-06 19:08:43.888 [NotebookApp] Serving notebooks from local directory: /Users/antkong/wd/py
</span><span class='line'>2014-01-06 19:08:43.889 [NotebookApp] The IPython Notebook is running at: http://127.0.0.1:8888/
</span><span class='line'>2014-01-06 19:08:43.889 [NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).</span></code></pre></td></tr></table></div></figure>


<p>To download and install the mathjax.js locally, we can run</p>

<pre><code>from IPython.external.mathjax import install_mathjax
install_mathjax()
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[inline plot in ipython]]></title>
    <link href="http://www.ahwkong.com/post/2014/01/06/inline-plot-in-ipython/"/>
    <updated>2014-01-06T08:02:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/01/06/inline-plot-in-ipython</id>
    <content type="html"><![CDATA[<p>It is a neat trick</p>

<p>Start your ipython like this <code>ipython qtconsole --pylab inline</code>, and the ipython session will plot graph in the interpreter window.</p>

<p><img src="images/ipython_inline.png" width="457" height="336"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Make picker 2 data dependent on the selected row of picker 1]]></title>
    <link href="http://www.ahwkong.com/post/2014/01/05/make-picker-2-data-dependent-on-the-selected-row-of-picker-1/"/>
    <updated>2014-01-05T06:28:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/01/05/make-picker-2-data-dependent-on-the-selected-row-of-picker-1</id>
    <content type="html"><![CDATA[<p>It is what I want to achieve: whenever a selection is changed in the top UIPicker, the choices in the second UIPicker will change accordingly.</p>

<p><img src="http://www.ahwkong.com/images/twopickers.png" width="341" height="497" title="" >
<img src="http://www.ahwkong.com/images/twopickers_b.png" width="341" height="497" title="" ></p>

<p>Useful lessons from this exercise:</p>

<ul>
<li>The use of API <code>reloadAllComponents</code></li>
<li>The use of class extension and category</li>
<li>Identification of the UI object &ndash; apparently a <code>==</code> is sufficient to find out which picker instance a picker API is handling</li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#import &quot;SOViewController.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">SOViewController</span> <span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">weak</span><span class="p">,</span> <span class="n">nonatomic</span><span class="p">)</span> <span class="kt">IBOutlet</span> <span class="n">UIPickerView</span> <span class="o">*</span><span class="n">Picker1</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">weak</span><span class="p">,</span> <span class="n">nonatomic</span><span class="p">)</span> <span class="kt">IBOutlet</span> <span class="n">UIPickerView</span> <span class="o">*</span><span class="n">Picker2</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">SOViewController</span> <span class="nl">(SOPickerDelegate)</span> <span class="o">&lt;</span><span class="n">UIPickerViewDelegate</span><span class="p">,</span> <span class="n">UIPickerViewDataSource</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">SOViewController</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">NSArray</span><span class="o">*</span> <span class="n">list_media</span><span class="p">;</span>
</span><span class='line'>    <span class="n">NSArray</span><span class="o">*</span> <span class="n">list_media_channel</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">viewDidLoad</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>    <span class="n">list_media</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span><span class="s">@&quot;TV&quot;</span><span class="p">,</span> <span class="s">@&quot;Radio&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="n">list_media_channel</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span> <span class="err">@</span><span class="p">[</span><span class="s">@&quot;ABC&quot;</span><span class="p">,</span> <span class="s">@&quot;SBS&quot;</span><span class="p">],</span> <span class="err">@</span><span class="p">[</span><span class="s">@&quot;TripleJ&quot;</span><span class="p">,</span> <span class="s">@&quot;107.1&quot;</span><span class="p">,</span> <span class="s">@&quot;CBS&quot;</span><span class="p">]];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">didReceiveMemoryWarning</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">super</span> <span class="n">didReceiveMemoryWarning</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">// Dispose of any resources that can be recreated.</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">SOViewController</span><span class="nl">(SOPickerDelegate)</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">pickerView:</span><span class="p">(</span><span class="n">UIPickerView</span> <span class="o">*</span><span class="p">)</span><span class="nv">pickerView</span> <span class="nf">didSelectRow:</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="nv">row</span> <span class="nf">inComponent:</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="nv">component</span><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">pickerView</span> <span class="o">==</span> <span class="n">_Picker1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// set Picker 2 accordingly</span>
</span><span class='line'>        <span class="p">[</span><span class="n">_Picker2</span> <span class="n">reloadAllComponents</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSArray</span><span class="o">*</span><span class="p">)</span> <span class="nf">getDataByPicker:</span><span class="p">(</span><span class="n">UIPickerView</span> <span class="o">*</span><span class="p">)</span><span class="nv">pickerView</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">pickerView</span> <span class="o">==</span> <span class="n">_Picker1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">list_media</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">NSArray</span><span class="o">*</span> <span class="n">content</span> <span class="o">=</span> <span class="p">[</span><span class="n">list_media_channel</span> <span class="nl">objectAtIndex:</span><span class="p">[</span><span class="n">_Picker1</span> <span class="nl">selectedRowInComponent:</span><span class="mi">0</span><span class="p">]];</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">content</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">pickerView:</span><span class="p">(</span><span class="n">UIPickerView</span> <span class="o">*</span><span class="p">)</span><span class="nv">pickerView</span> <span class="nf">titleForRow:</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="nv">row</span> <span class="nf">forComponent:</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="nv">component</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">NSArray</span><span class="o">*</span> <span class="n">data</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="nl">getDataByPicker:</span><span class="n">pickerView</span><span class="p">];</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">[</span><span class="n">data</span> <span class="nl">objectAtIndex:</span><span class="n">row</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="nf">pickerView:</span><span class="p">(</span><span class="n">UIPickerView</span> <span class="o">*</span><span class="p">)</span><span class="nv">pickerView</span> <span class="nf">numberOfRowsInComponent:</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="nv">component</span><span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">NSArray</span><span class="o">*</span> <span class="n">data</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="nl">getDataByPicker:</span><span class="n">pickerView</span><span class="p">];</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">[</span><span class="n">data</span> <span class="n">count</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="nf">numberOfComponentsInPickerView:</span><span class="p">(</span><span class="n">UIPickerView</span> <span class="o">*</span><span class="p">)</span><span class="nv">pickerView</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[swap convention]]></title>
    <link href="http://www.ahwkong.com/post/2014/01/04/swap-convention/"/>
    <updated>2014-01-04T21:15:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/01/04/swap-convention</id>
    <content type="html"><![CDATA[<blockquote><pre><code>Floating-rate payer: pay 6-month LIBOR
                     receive a fixed rate of 5.19 percent

Fixed-rate payer: pay a fixed rate of 5.25 percent
                  receive 6-month LIBOR
</code></pre>

<p>In this example, the bank is quoting an offer rate of 5.25 percent, which is what the fixed-rate payer will pay, and a bid rate of 5.19 percent, which is what the floating-rate payer will receive. The bid-offer spread is therefore 6 basis points.</p></blockquote>

<p><em>from &lsquo;Moorad Choudhry &ndash; Fixed Income Securities and Derivatives Handbook (Analysis and Valuation)&rsquo;</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[conda and ipython]]></title>
    <link href="http://www.ahwkong.com/post/2014/01/03/conda-and-ipython/"/>
    <updated>2014-01-03T23:01:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/01/03/conda-and-ipython</id>
    <content type="html"><![CDATA[<p>It is a follow-up on <a href="http://www.ahwkong.com/post/2013/12/30/conda-install-ipython-problem/">my last ipython install issue</a></p>

<p>Turn out i just need to follow the suggested solution in the conda failure message, which is to use <code>-p /path/to/local/conda</code></p>

<p>Now I have four set of python runtime installed on my MBP:</p>

<ul>
<li><p>From Apple</p></li>
<li><p>From Homebrew</p></li>
<li><p>From Pythonbrew</p></li>
<li><p>From conda</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pandas - dateutil.parser import error]]></title>
    <link href="http://www.ahwkong.com/post/2014/01/03/pandas-dateutil-dot-parser-import-error/"/>
    <updated>2014-01-03T21:24:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/01/03/pandas-dateutil-dot-parser-import-error</id>
    <content type="html"><![CDATA[<p>Try to run <code>import pandas</code> in python. Encountered this:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">pandas</span>
</span><span class='line'><span class="n">No</span> <span class="n">module</span> <span class="n">named</span> <span class="n">dateutil</span><span class="o">.</span><span class="n">parser</span>
</span><span class='line'><span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;&lt;stdin&gt;&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;/usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pandas-0.12.0-py2.7-macosx-10.9-x86_64.egg/pandas/__init__.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">6</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="kn">from</span> <span class="nn">.</span> <span class="kn">import</span> <span class="n">hashtable</span><span class="p">,</span> <span class="n">tslib</span><span class="p">,</span> <span class="n">lib</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;tslib.pyx&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">31</span><span class="p">,</span> <span class="ow">in</span> <span class="n">init</span> <span class="n">pandas</span><span class="o">.</span><span class="n">tslib</span> <span class="p">(</span><span class="n">pandas</span><span class="o">/</span><span class="n">tslib</span><span class="o">.</span><span class="n">c</span><span class="p">:</span><span class="mi">48782</span><span class="p">)</span>
</span><span class='line'><span class="ne">ImportError</span><span class="p">:</span> <span class="n">No</span> <span class="n">module</span> <span class="n">named</span> <span class="n">dateutil</span><span class="o">.</span><span class="n">parser</span>
</span></code></pre></td></tr></table></div></figure>


<p>Fixed by running</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>pip install python-dateutil
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[category vs class extension]]></title>
    <link href="http://www.ahwkong.com/post/2014/01/01/category-vs-class-extension/"/>
    <updated>2014-01-01T07:25:00+11:00</updated>
    <id>http://www.ahwkong.com/post/2014/01/01/category-vs-class-extension</id>
    <content type="html"><![CDATA[<p>Category does not allow addition of ivar.</p>

<p>The restriction does not apply to class extension.</p>

<p>That&rsquo;s why I can do something like this:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">@interface</span> <span class="nc">SOViewController</span> <span class="p">()</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">weak</span><span class="p">,</span> <span class="n">nonatomic</span><span class="p">)</span> <span class="kt">IBOutlet</span> <span class="n">UIPickerView</span> <span class="o">*</span><span class="n">Picker1</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">weak</span><span class="p">,</span> <span class="n">nonatomic</span><span class="p">)</span> <span class="kt">IBOutlet</span> <span class="n">UIPickerView</span> <span class="o">*</span><span class="n">Picker2</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
